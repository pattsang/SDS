{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AuthorityTree/AuthorityTree.component.css","webpack:///./src/app/AuthorityTree/AuthorityTree.component.html","webpack:///./src/app/AuthorityTree/AuthorityTree.component.ts","webpack:///./src/app/_directives/hasRole.directive.ts","webpack:///./src/app/_guard/auth.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_service/alertify.service.ts","webpack:///./src/app/_service/auth.interceptor.ts","webpack:///./src/app/_service/auth.service.ts","webpack:///./src/app/_service/authoritytree.service.ts","webpack:///./src/app/_service/contactUs.service.ts","webpack:///./src/app/_service/exporList.service.ts","webpack:///./src/app/_service/label.service.ts","webpack:///./src/app/_service/location.service.ts","webpack:///./src/app/_service/manufacturer.service.ts","webpack:///./src/app/_service/pagination.service.ts","webpack:///./src/app/_service/permission.service.ts","webpack:///./src/app/_service/product.service.ts","webpack:///./src/app/_service/report.service.ts","webpack:///./src/app/_service/sdsRequest.service.ts","webpack:///./src/app/_service/send-mail.service.ts","webpack:///./src/app/_service/user.service.ts","webpack:///./src/app/_service/whmis2015.service.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-levels/auth-levels.component.css","webpack:///./src/app/auth-levels/auth-levels.component.html","webpack:///./src/app/auth-levels/auth-levels.component.ts","webpack:///./src/app/authority/add-department/add-department.component.css","webpack:///./src/app/authority/add-department/add-department.component.html","webpack:///./src/app/authority/add-department/add-department.component.ts","webpack:///./src/app/authority/add-floor/add-floor.component.css","webpack:///./src/app/authority/add-floor/add-floor.component.html","webpack:///./src/app/authority/add-floor/add-floor.component.ts","webpack:///./src/app/authority/add-location/add-location.component.css","webpack:///./src/app/authority/add-location/add-location.component.html","webpack:///./src/app/authority/add-location/add-location.component.ts","webpack:///./src/app/authority/add-site/add-site.component.css","webpack:///./src/app/authority/add-site/add-site.component.html","webpack:///./src/app/authority/add-site/add-site.component.ts","webpack:///./src/app/authority/add-subDepartment/add-subDepartment.component.css","webpack:///./src/app/authority/add-subDepartment/add-subDepartment.component.html","webpack:///./src/app/authority/add-subDepartment/add-subDepartment.component.ts","webpack:///./src/app/authority/authority.component.css","webpack:///./src/app/authority/authority.component.html","webpack:///./src/app/authority/authority.component.ts","webpack:///./src/app/authority/edit-site/edit-site.component.css","webpack:///./src/app/authority/edit-site/edit-site.component.html","webpack:///./src/app/authority/edit-site/edit-site.component.ts","webpack:///./src/app/completeuserregistration/completeuserregistration.component.css","webpack:///./src/app/completeuserregistration/completeuserregistration.component.html","webpack:///./src/app/completeuserregistration/completeuserregistration.component.ts","webpack:///./src/app/contact-us/contact-us.component.css","webpack:///./src/app/contact-us/contact-us.component.html","webpack:///./src/app/contact-us/contact-us.component.ts","webpack:///./src/app/filter/locationfilter/locationfilter.component.css","webpack:///./src/app/filter/locationfilter/locationfilter.component.html","webpack:///./src/app/filter/locationfilter/locationfilter.component.ts","webpack:///./src/app/filter/manufacturerfilter/manufacturerfilter.component.css","webpack:///./src/app/filter/manufacturerfilter/manufacturerfilter.component.html","webpack:///./src/app/filter/manufacturerfilter/manufacturerfilter.component.ts","webpack:///./src/app/filter/productCasfilter/productCasfilter.component.css","webpack:///./src/app/filter/productCasfilter/productCasfilter.component.html","webpack:///./src/app/filter/productCasfilter/productCasfilter.component.ts","webpack:///./src/app/forgotpassword/forgotpassword.component.css","webpack:///./src/app/forgotpassword/forgotpassword.component.html","webpack:///./src/app/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/help/help.component.css","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/inventory-product/create-product/create-product.component.css","webpack:///./src/app/inventory-product/create-product/create-product.component.html","webpack:///./src/app/inventory-product/create-product/create-product.component.ts","webpack:///./src/app/inventory-product/create-secondaryname/create-secondaryname.component.css","webpack:///./src/app/inventory-product/create-secondaryname/create-secondaryname.component.html","webpack:///./src/app/inventory-product/create-secondaryname/create-secondaryname.component.ts","webpack:///./src/app/inventory-product/edit-product/edit-product.component.css","webpack:///./src/app/inventory-product/edit-product/edit-product.component.html","webpack:///./src/app/inventory-product/edit-product/edit-product.component.ts","webpack:///./src/app/inventory-product/exportList/exportList.component.css","webpack:///./src/app/inventory-product/exportList/exportList.component.html","webpack:///./src/app/inventory-product/exportList/exportList.component.ts","webpack:///./src/app/inventory-product/inventory-detail/inventory-detail.component.css","webpack:///./src/app/inventory-product/inventory-detail/inventory-detail.component.html","webpack:///./src/app/inventory-product/inventory-detail/inventory-detail.component.ts","webpack:///./src/app/inventory-product/inventory-edit/inventory-edit.component.css","webpack:///./src/app/inventory-product/inventory-edit/inventory-edit.component.html","webpack:///./src/app/inventory-product/inventory-edit/inventory-edit.component.ts","webpack:///./src/app/inventory-product/inventory-product.component.css","webpack:///./src/app/inventory-product/inventory-product.component.html","webpack:///./src/app/inventory-product/inventory-product.component.ts","webpack:///./src/app/inventory-product/inventory-vendorapi-detail/inventory-vendorapi-detail.component.css","webpack:///./src/app/inventory-product/inventory-vendorapi-detail/inventory-vendorapi-detail.component.html","webpack:///./src/app/inventory-product/inventory-vendorapi-detail/inventory-vendorapi-detail.component.ts","webpack:///./src/app/inventory-product/update-secondaryname/update-secondaryname.component.css","webpack:///./src/app/inventory-product/update-secondaryname/update-secondaryname.component.html","webpack:///./src/app/inventory-product/update-secondaryname/update-secondaryname.component.ts","webpack:///./src/app/invite/invite.component.css","webpack:///./src/app/invite/invite.component.html","webpack:///./src/app/invite/invite.component.ts","webpack:///./src/app/level3auth/level3auth.component.css","webpack:///./src/app/level3auth/level3auth.component.html","webpack:///./src/app/level3auth/level3auth.component.ts","webpack:///./src/app/locationTree/locationTree.component.css","webpack:///./src/app/locationTree/locationTree.component.html","webpack:///./src/app/locationTree/locationTree.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manufacturer/contactLocation/contactLocation.component.css","webpack:///./src/app/manufacturer/contactLocation/contactLocation.component.html","webpack:///./src/app/manufacturer/contactLocation/contactLocation.component.ts","webpack:///./src/app/manufacturer/create-manufacturer/create-manufacturer.component.css","webpack:///./src/app/manufacturer/create-manufacturer/create-manufacturer.component.html","webpack:///./src/app/manufacturer/create-manufacturer/create-manufacturer.component.ts","webpack:///./src/app/manufacturer/edit-manufacturer/edit-manufacturer.component.css","webpack:///./src/app/manufacturer/edit-manufacturer/edit-manufacturer.component.html","webpack:///./src/app/manufacturer/edit-manufacturer/edit-manufacturer.component.ts","webpack:///./src/app/manufacturer/manufacturer.component.css","webpack:///./src/app/manufacturer/manufacturer.component.html","webpack:///./src/app/manufacturer/manufacturer.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/nav-responsive/nav-responsive.component.css","webpack:///./src/app/nav-responsive/nav-responsive.component.html","webpack:///./src/app/nav-responsive/nav-responsive.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/navigation/footer/footer.component.css","webpack:///./src/app/navigation/footer/footer.component.html","webpack:///./src/app/navigation/footer/footer.component.ts","webpack:///./src/app/navigation/header/header.component.css","webpack:///./src/app/navigation/header/header.component.html","webpack:///./src/app/navigation/header/header.component.ts","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.css","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.html","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.ts","webpack:///./src/app/order-list/order-list.component.html","webpack:///./src/app/order-list/order-list.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/product-detail/product-detail.component.css","webpack:///./src/app/product-detail/product-detail.component.html","webpack:///./src/app/product-detail/product-detail.component.ts","webpack:///./src/app/product-label/product-label.component.css","webpack:///./src/app/product-label/product-label.component.html","webpack:///./src/app/product-label/product-label.component.ts","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/product-location/product-location.component.css","webpack:///./src/app/product-location/product-location.component.html","webpack:///./src/app/product-location/product-location.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/productalias.component.html","webpack:///./src/app/productalias.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/report/company-report/company-report.component.css","webpack:///./src/app/report/company-report/company-report.component.html","webpack:///./src/app/report/company-report/company-report.component.ts","webpack:///./src/app/report/generate/generate.component.css","webpack:///./src/app/report/generate/generate.component.html","webpack:///./src/app/report/generate/generate.component.ts","webpack:///./src/app/report/report-menu/report-menu.component.css","webpack:///./src/app/report/report-menu/report-menu.component.html","webpack:///./src/app/report/report-menu/report-menu.component.ts","webpack:///./src/app/report/report.component.css","webpack:///./src/app/report/report.component.html","webpack:///./src/app/report/report.component.ts","webpack:///./src/app/report/schedule/schedule.component.css","webpack:///./src/app/report/schedule/schedule.component.html","webpack:///./src/app/report/schedule/schedule.component.ts","webpack:///./src/app/report/user-report/user-report.component.css","webpack:///./src/app/report/user-report/user-report.component.html","webpack:///./src/app/report/user-report/user-report.component.ts","webpack:///./src/app/request/request-confirm/request-confirm.component.css","webpack:///./src/app/request/request-confirm/request-confirm.component.html","webpack:///./src/app/request/request-confirm/request-confirm.component.ts","webpack:///./src/app/request/request.component.css","webpack:///./src/app/request/request.component.html","webpack:///./src/app/request/request.component.ts","webpack:///./src/app/resendEmail/resendEmail.component.css","webpack:///./src/app/resendEmail/resendEmail.component.html","webpack:///./src/app/resendEmail/resendEmail.component.ts","webpack:///./src/app/resetPassword/resetPassword.component.css","webpack:///./src/app/resetPassword/resetPassword.component.html","webpack:///./src/app/resetPassword/resetPassword.component.ts","webpack:///./src/app/search/product-page/product-page.component.css","webpack:///./src/app/search/product-page/product-page.component.html","webpack:///./src/app/search/product-page/product-page.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/tree-checkbox/tree-checkbox.component.css","webpack:///./src/app/tree-checkbox/tree-checkbox.component.html","webpack:///./src/app/tree-checkbox/tree-checkbox.component.ts","webpack:///./src/app/users/create-user/create-user.component.css","webpack:///./src/app/users/create-user/create-user.component.html","webpack:///./src/app/users/create-user/create-user.component.ts","webpack:///./src/app/users/delete-user/delete-user.component.css","webpack:///./src/app/users/delete-user/delete-user.component.html","webpack:///./src/app/users/delete-user/delete-user.component.ts","webpack:///./src/app/users/update-user/update-user.component.css","webpack:///./src/app/users/update-user/update-user.component.html","webpack:///./src/app/users/update-user/update-user.component.ts","webpack:///./src/app/users/user-location/showUserLocation/showUserLocation.component.css","webpack:///./src/app/users/user-location/showUserLocation/showUserLocation.component.html","webpack:///./src/app/users/user-location/showUserLocation/showUserLocation.component.ts","webpack:///./src/app/users/user-location/user-location.component.css","webpack:///./src/app/users/user-location/user-location.component.html","webpack:///./src/app/users/user-location/user-location.component.ts","webpack:///./src/app/users/user-permission/user-permission.component.css","webpack:///./src/app/users/user-permission/user-permission.component.html","webpack:///./src/app/users/user-permission/user-permission.component.ts","webpack:///./src/app/users/user-profile/user-profile.component.css","webpack:///./src/app/users/user-profile/user-profile.component.html","webpack:///./src/app/users/user-profile/user-profile.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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;CAAA;AAnDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBiC;AACjB;AACsB;AAEY;AACT;AACnB;AACS;AAEuB;AACT;AACH;AACF;AACd;AACQ;AACJ;AACW;AACT;AACI;AACN;AACM;AACJ;AAK9B;AACgC;AACJ;AACQ;AACR;AACA;AACuB;AACvB;AACA;AACM;AACF;AACY;AACxB;AACJ;AACsB;AACd;AAC2B;AACf;AACQ;AACM;AACM;AAC8B;AACxD;AACS;AACZ;AACN;AACc;AACA;AACL;AACH;AACM;AACoB;AACA;AACA;AACY;AACN;AAC4B;AAC1C;AACS;AACG;AACD;AACZ;AACiB;AACb;AACmC;AACrB;AACN;AACd;AACF;AACQ;AACG;AACS;AACM;AACjC;AACH;AACgB;AACA;AACb;AACwB;AACpB;AACD;AACkB;AACS;AACT;AACP;AACpB;AACiB;AACuB;AACZ;AACU;AACS;AACN;AACQ;AACZ;AACM;AACc;AACN;AACL;AACO;AACN;AACX;AACV;AACsB;AACxB;AACA;AACG;AACsC;AACA;AACrD;AACF;AACO;AACiE;AAEjI,SAAS,WAAW;IACzB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAED,kCAAkC;AAElC,MAAM;AACN,gBAAgB;AAChB,uCAAuC;AACvC,gCAAgC;AAChC,kBAAkB;AAElB,yHAAyH;AACzH,iIAAiI;AACjI,6GAA6G;AAC7G,qGAAqG;AACrG,kGAAkG;AAClG,UAAU;AACV,oHAAoH;AACpH,gGAAgG;AAEhG,gHAAgH;AAChH,4HAA4H;AAC5H,wHAAwH;AACxH,+HAA+H;AAC/H,uGAAuG;AACvG,sHAAsH;AACtH,QAAQ;AACR,OAAO;AACP,mDAAmD;AACnD,sGAAsG;AACtG,sDAAsD;AACtD,sDAAsD;AACtD,2DAA2D;AAC3D,oDAAoD;AACpD,wDAAwD;AACxD,6DAA6D;AAC7D,mEAAmE;AACnE,wDAAwD;AACxD,oEAAoE;AACpE,kEAAkE;AAClE,gDAAgD;AAChD,sDAAsD;AAEtD,KAAK;AAEE,IAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,qBAAqB,EAAE,QAAQ;QAC/B,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAwB,EAAE;YACjE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,gGAAoB,EAAE;YAC7D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6FAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,6FAAmB,EAAE;YAC3D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6FAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,yGAAuB,EAAE;YACnE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,mGAAqB,EAAE;YAC/D,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,2HAAyB,EAAE;YACtE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,wFAAoB,EAAE;YAC5D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,yGAAyB,EAAE;YACnE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4GAAoB,EAAE;YACzD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kHAAsB,EAAE;YAC7D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+FAAsB,EAAE;YAC5D,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8FAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uGAAsB,EAAE;SAC9D;KACF;IAED;QACE,IAAI,EAAE,8BAA8B;QACpC,SAAS,EAAE,+HAAiC;KAC7C;IACD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC7D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAkB,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,iGAAuB,EAAE;IAC9D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,8FAAsB,EAAE;IAC5D,8CAA8C;IAE9C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;CAC/C,CAAC;AAoKF;IACE,mBAAY,MAAc;QACxB,uEAAuE;QACvE,uFAAuF;QACvF,uEAAuE;IACzE,CAAC;IALU,SAAS;QAlKrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,8EAAqB;gBACrB,gEAAY;gBACZ,2FAAqB;gBACrB,4EAAgB;gBAChB,oFAAkB;gBAClB,0FAAoB;gBACpB,kHAAsB;gBACtB,gGAAsB;gBACtB,6FAAqB;gBACrB,sEAAc;gBACd,+EAAiB;gBACjB,yEAAe;gBACf,sEAAc;gBACd,yGAAuB;gBACvB,mGAAqB;gBACrB,2HAAyB;gBACzB,6FAAmB;gBACnB,6FAAmB;gBACnB,6FAAmB;gBACnB,+HAAiC;gBACjC,gGAAoB;gBACpB,iGAAuB;gBACvB,8FAAsB;gBACtB,wFAAoB;gBACpB,qFAAmB;gBACnB,gGAAsB;gBACtB,oFAAe;gBACf,qFAAe;gBACf,qGAAoB;gBACpB,sGAAwB;gBACxB,+EAAgB;gBAChB,wFAAgB;gBAChB,kFAAkB;gBAClB,2FAAiB;gBACjB,oGAAoB;gBACpB,0GAAsB;gBACtB,oHAAyB;gBACzB,4FAAiB;gBACjB,yEAAe;gBACf,sFAAiB;gBACjB,sFAAiB;gBACjB,yEAAe;gBACf,iGAAoB;gBACpB,4EAAgB;gBAChB,8FAAmB;gBACnB,uGAAsB;gBACtB,8FAAmB;gBACnB,uFAAmB;gBACnB,mEAAa;gBACb,oFAAkB;gBAClB,2GAAuB;gBACvB,+FAAqB;gBACrB,yGAAyB;gBACzB,4GAAoB;gBACpB,oHAA2B;gBAC3B,wGAAuB;gBACvB,8GAAyB;gBACzB,4HAA2B;gBAC3B,sHAAyB;gBACzB,iHAAwB;gBACxB,wHAAwB;gBACxB,sJAAiC;gBACjC,mHAAsB;gBACtB,wGAAmB;gBACnB,8FAAqB;gBACrB,4FAAqB;gBACrB,+FAAsB;gBACtB,qIAA4B;gBAC5B,qIAA4B;aAC7B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,kEAAmB,CAAC,UAAU,CAAC,EAAE,4BAA4B,EAAE,OAAO,EAAE,CAAC;gBACzE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,4FAAuB;gBACvB,gEAAc;gBACd,yEAAe;gBACf,qEAAa;gBACb,gFAAkB;gBAClB,uEAAc;gBACd,qEAAgB;gBAChB,2EAAgB;gBAChB,qEAAa;gBACb,2EAAgB;gBAChB,uEAAc;gBACd,qEAAkB;gBAClB,qEAAa;gBACb,6EAAiB;gBACjB,qEAAa;gBACb,qEAAa;gBACb,4FAAwB;gBACxB,qEAAa;gBACb,qEAAa;gBACb,2EAAgB;gBAChB,yEAAe;gBACf,qFAAqB;gBACrB,kEAAe;gBACf,8EAAiB;gBACjB,iFAAmB;gBACnB,sEAAmB;gBACnB,uEAAc;gBACd,+EAAkB;gBAClB,mFAAoB;gBACpB,2EAAgB;gBAChB,4DAAS,CAAC,OAAO,CAAC;oBAChB,MAAM,EAAE;wBACN,WAAW,EAAE,WAAW;wBACxB,kBAAkB,EAAE,CAAC,yBAAyB,CAAC;wBAC/C,iEAAiE;qBAClE;iBACF,CAAC;aACH;YACD,SAAS,EAAE;gBACT,4DAAS;gBACT,wDAAU;gBACV,kEAAW;gBACX,kEAAW;gBACX,6EAAgB;gBAChB,0EAAe;gBACf,0EAAe;gBACf,iFAAmB;gBACnB,sEAAmB;gBACnB,+EAAiB;gBACjB;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,0EAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,eAAe,EAAE;gBACf,wFAAgB;gBAChB,2FAAiB;gBACjB,oGAAoB;gBACpB,0GAAsB;gBACtB,oHAAyB;gBACzB,4FAAiB;gBACjB,sFAAiB;gBACjB,sFAAiB;gBACjB,oGAAoB;gBACpB,iGAAoB;gBACpB,2GAAuB;gBACvB,sGAAwB;gBACxB,4HAA2B;gBAC3B,wHAAwB;gBACxB,sJAAiC;gBACjC,sHAAyB;gBACzB,mHAAsB;gBACtB,wGAAmB;gBACnB,8FAAqB;gBACrB,gGAAoB;gBACpB,sEAAc;gBACd,qIAA4B;gBAC5B,qIAA4B;gBAC5B,uBAAuB;aACxB;SACF,CAAC;+EAEoB,sDAAM;OADf,SAAS,CAMrB;IAAD,gBAAC;CAAA;AANqB;;;;;;;;;;;;ACrXtB,+DAA+D,mJ;;;;;;;;;;;ACA/D,8fAA8f,gBAAgB,kgBAAkgB,sBAAsB,ydAAyd,sBAAsB,4N;;;;;;;;;;;;;;;;;;;ACAt8C;AACxB;AACQ;AAO/D;IAqBE,6BACU,WAAwB,EACxB,eAAgC;QADhC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAnBhC,4BAAuB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAK7C,kCAA6B,GAAG,IAAI,0DAAY,EAAE,CAAC;QAKnD,kCAA6B,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE7D,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAIE,CAAC;IAGL,sCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,+CAAiB,GAAjB;QAAA,iBAQC;QAPC,4EAA4E;QAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1D,mBAAmB;YACnB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,yEAAyE;YACzE,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB;QAAA,iBAMC;QALC,eAAe;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB;QAAA,iBAMC;QALC,eAAe;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAChF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7D,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,gDAAkB,GAAlB,UAAmB,KAAK;QACtB,oEAAoE;QACpE,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,gDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrD,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtE,4BAA4B;IAC9B,CAAC;IAvEQ;QAAR,2DAAK,EAAE;;kEAAmB;IACjB;QAAT,4DAAM,EAAE;;wEAA8C;IAI9C;QAAR,2DAAK,EAAE;;wEAAyB;IACvB;QAAT,4DAAM,EAAE;;8EAAoD;IAIpD;QAAR,2DAAK,EAAE;;wEAAyB;IACvB;QAAT,4DAAM,EAAE;;8EAAoD;IAYpD;QAAR,2DAAK,EAAE;;yDAAkB;IA1Bf,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAuBuB,iEAAW;YACP,yEAAe;OAvB/B,mBAAmB,CA4E/B;IAAD,0BAAC;CAAA;AA5E+B;;;;;;;;;;;;ACThC,+DAA+D,2K;;;;;;;;;;;ACA/D,wgBAAwgB,gBAAgB,kgBAAkgB,sBAAsB,udAAud,sBAAsB,orB;;;;;;;;;;;;;;;;;;;;;;ACAn+C;AACoC;AAClC;AAC+B;AAEvB;AACA;AAQpE;IAgBE,gCACkC,UAAe,EACvC,WAAwB,EACxB,eAAgC,EAChC,QAAyB,EACzB,EAAe;QAJS,eAAU,GAAV,UAAU,CAAK;QACvC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,OAAE,GAAF,EAAE,CAAa;QAXzB,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAQE,CAAC;IAEL,yCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,mDAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBAMC;QALC,eAAe;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,mDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,mDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,4BAA4B;IAC9B,CAAC;IAED,8CAAa,GAAb;QACE,iDAAiD;QACjD,mEAAmE;QACnE,kDAAkD;QAHpD,iBAsBC;QAjBC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW;YAC3C,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAE5C,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YACzD,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SAEJ;IACH,CAAC;IArFU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wIAA8C;;SAE/C,CAAC;QAkBG,6GAAM,CAAC,iEAAe,CAAC;uFACH,wEAAW;YACP,gFAAe;YACtB,gFAAe;YACrB,0DAAW;OArBd,sBAAsB,CAuFlC;IAAD,6BAAC;CAAA;AAvFkC;;;;;;;;;;;;ACdnC,+DAA+D,2J;;;;;;;;;;;ACA/D,0hBAA0hB,gBAAgB,khBAAkhB,sBAAsB,6eAA6e,sBAAsB,qfAAqf,sBAAsB,ugBAAugB,sBAAsB,kuB;;;;;;;;;;;;;;;;;;;;;ACAnkF;AACN;AACgB;AACA;AACvB;AAO7C;IAqBE,2BACkC,UAAe,EACvC,eAAgC,EAChC,QAAyB,EACzB,EAAe;QAHS,eAAU,GAAV,UAAU,CAAK;QACvC,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,OAAE,GAAF,EAAE,CAAa;QAVzB,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAOE,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,8CAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAKC;QAJC,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,2CAAe,GAAf;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,8CAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,8CAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,8CAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,8CAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAGD,yCAAa,GAAb;QACE,iDAAiD;QACjD,mEAAmE;QACnE,kDAAkD;QAHpD,iBAyBC;QApBC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW;YAC5C,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB;eACxD,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAClE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAE5C,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YACpD,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SAEJ;IACH,CAAC;IAhHU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,yHAAyC;;SAE1C,CAAC;QAuBG,6GAAM,CAAC,iEAAe,CAAC;uFACC,gFAAe;YACtB,gFAAe;YACrB,0DAAW;OAzBd,iBAAiB,CAmH7B;IAAD,wBAAC;CAAA;AAnH6B;;;;;;;;;;;;ACX9B,+DAA+D,mK;;;;;;;;;;;ACA/D,ohBAAohB,gBAAgB,wmBAAwmB,sBAAsB,8eAA8e,sBAAsB,qcAAqc,gkB;;;;;;;;;;;;;;;;;;;;;;ACAjjE;AACoC;AAClC;AAC+B;AAEvB;AACA;AAQpE;IAcE,8BAA4C,UAAe,EACnD,WAAwB,EACxB,EAAe,EACf,eAAgC,EAChC,QAAyB;QAJW,eAAU,GAAV,UAAU,CAAK;QACnD,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QAVjC,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAOE,CAAC;IAEL,uCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,gDAAiB,GAAjB;QAAA,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wBAAwB;IACxB,uFAAuF;IACvF,sFAAsF;IACtF,oCAAoC;IACpC,yBAAyB;IACzB,QAAQ;IACR,IAAI;IAEJ,8CAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,iDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,4BAA4B;IAC9B,CAAC;IAED,0CAAW,GAAX;QACE,iDAAiD;QACjD,wDAAwD;QACxD,mEAAmE;QACnE,qDAAqD;QAJvD,iBAqBG;QAfD,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAClF,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAExD,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;YAEhD,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC9C,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SACL;IACL,CAAC;IA5EQ,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kIAA4C;;SAE7C,CAAC;QAea,6GAAM,CAAC,iEAAe,CAAC;uFACf,wEAAW;YACpB,0DAAW;YACE,gFAAe;YACtB,gFAAe;OAlBtB,oBAAoB,CA8E9B;IAAD,2BAAC;CAAA;AA9E8B;AAgFjC,gBAAgB;AAEhB,yDAAyD;AACzD,yDAAyD;AACzD,wEAAwE;AACxE,0EAA0E;AAC1E,mDAAmD;AAEnD,yFAAyF;AACzF,oDAAoD;AACpD,mBAAmB;AACnB,oDAAoD;AACpD,SAAS;AACT,IAAI;;;;;;;;;;;;AC3GJ,+DAA+D,2J;;;;;;;;;;;ACA/D,6eAA6e,gBAAgB,uiCAAuiC,gBAAgB,uSAAuS,4VAA4V,wOAAwO,wG;;;;;;;;;;;;;;;;;;;;;;ACAr2E;AACoC;AAClC;AAC+B;AAEvB;AACA;AACpE,2DAA2D;AAO3D;IAWE,0BACkC,UAAe,EACvC,WAAwB,EACxB,eAAgC,EAChC,EAAe,EACf,QAAyB;QAJD,eAAU,GAAV,UAAU,CAAK;QACvC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAiB;QAXnC,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAOsC,CAAC;IAEzC,mCAAQ,GAAR;QACE,4BAA4B;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAMD,wBAAwB;IACxB,iFAAiF;IACjF,sEAAsE;IACtE,0BAA0B;IAC1B,8BAA8B;IAC9B,gFAAgF;IAChF,yBAAyB;IACzB,QAAQ;IACR,IAAI;IAEJ,6CAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,yBAAyB;IACvB,kCAAO,GAAP;QAAA,iBAaH;QAXI,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAE5C,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC9C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAzDY,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,sHAAwC;;SAEzC,CAAC;QAaG,6GAAM,CAAC,iEAAe,CAAC;uFACH,wEAAW;YACP,gFAAe;YAC5B,0DAAW;YACL,gFAAe;OAhBxB,gBAAgB,CA2D5B;IAAD,uBAAC;CAAA;AA3D4B;;;;;;;;;;;;ACd7B,+DAA+D,mL;;;;;;;;;;;ACA/D,0hBAA0hB,gBAAgB,khBAAkhB,sBAAsB,6eAA6e,sBAAsB,qfAAqf,sBAAsB,muB;;;;;;;;;;;;;;;;;;;;;ACAtiE;AACN;AACgB;AACA;AACvB;AAO7C;IAmBE,mCACkC,UAAe,EACvC,eAAgC,EAChC,QAAyB,EACzB,EAAe;QAHS,eAAU,GAAV,UAAU,CAAK;QACvC,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,OAAE,GAAF,EAAE,CAAa;QAVzB,mBAAc,GAAG;YACf,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;IAOE,CAAC;IAEL,4CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,sDAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAKC;QAJC,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAe,GAAf;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,sDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,sDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,sDAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,2BAA2B;IAC7B,CAAC;IAED,iDAAa,GAAb;QACE,iDAAiD;QACjD,mEAAmE;QACnE,kDAAkD;QAHpD,iBAuBC;QAlBC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW;YAC5C,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9F,2DAA2D;YAC3D,qDAAqD;YACrD,oDAAoD;YACpD,+CAA+C;YAC/C,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAE5C,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC7D,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SAEJ;IACH,CAAC;IAhGU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iJAAiD;;SAElD,CAAC;QAqBG,6GAAM,CAAC,iEAAe,CAAC;uFACC,gFAAe;YACtB,gFAAe;YACrB,0DAAW;OAvBd,yBAAyB,CAkGrC;IAAD,gCAAC;CAAA;AAlGqC;;;;;;;;;;;;ACXtC,8BAA8B,kBAAkB,mBAAmB,GAAG,0CAA0C,iBAAiB,GAAG,4CAA4C,iBAAiB,GAAG,aAAa,kBAAkB,GAAG,4BAA4B,iDAAiD,8BAA8B,GAAG,uCAAuC,mCAAmC,kBAAkB,wBAAwB,yBAAyB,GAAG,6CAA6C,2lC;;;;;;;;;;;ACAjhB,ieAAie,gBAAgB,2gBAA2gB,6GAA6G,yBAAyB,qBAAqB,iBAAiB,8PAA8P,sQAAsQ,0BAA0B,mSAAmS,6BAA6B,2SAA2S,+BAA+B,+SAA+S,iCAAiC,uTAAuT,sCAAsC,qSAAqS,4BAA4B,ykBAAykB,8FAA8F,uT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz5H;AACY;AACM;AACvC;AACQ;AACb;AACe;AACG;AACS;AACM;AACV;AACmB;AACxB;AACL;AAO/D;IAGE,4BACU,WAAwB,EACxB,eAAgC,EAChC,QAAyB,EACzB,IAAgB,EAChB,MAAiB,EACjB,oBAA0C;QAL1C,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,yBAAoB,GAApB,oBAAoB,CAAsB;QAQpD,cAAS,GAAG,KAAK,CAAC;QAIhB,cAAS,GAAQ,EAAE,CAAC;QACpB,mBAAc,GAAQ,EAAE,CAAC;QAEzB,oBAAe,GAAG,IAAI,CAAC;QACvB,iBAAY,GAAO,EAAE,CAAC;QACtB,kBAAa,GAAQ,EAAE,CAAC;QAY1B,UAAK,GAAG;YACN,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAG,MAAM,EAAE;YACrC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAG,UAAU,EAAE;YAC7C,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAG,YAAY,EAAE;YACjD,EAAE,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAG,gBAAgB,EAAE;YACzD,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAG,OAAO,EAAE;SACxC,CAAC;QAEF,qBAAgB,GAAa;YAC3B,WAAW;YACX,MAAM;YACN,UAAU;YACV,YAAY;YACZ,gBAAgB;YAChB,OAAO;YACP,MAAM;SACP,CAAC;IA5CC,CAAC;IA8CJ,qCAAQ,GAAR;QACE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,EAAE,CAAC;IAC/C,CAAC;IAED,wCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAEH,yCAAY,GAAZ,UAAa,SAAS;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YACnD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAED,4CAAe,GAAf,UAAgB,SAAS;QAEvB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACrC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE;YACpD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;QACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAkB,GAAlB,UAAmB,SAAS;QAE1B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACvD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAoB,GAApB,UAAqB,SAAS;QAC5B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACzD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAuB,GAAvB,UAAwB,SAAS;QAC/B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAyB,EAAE;YAC5D,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAe,GAAf,UAAgB,SAAS;QACvB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iFAAiB,EAAE;YACpD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAGC,+CAAkB,GAAlB,UAAmB,aAAa;QAE9B,IAAI,aAAa,KAAK,MAAM,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,aAAa,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;SACjC;aAAM,IAAI,aAAa,KAAK,UAAU,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,aAAa,CAAC,CAAC;YAC/D,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;SACxC;aAAM,IAAI,aAAa,KAAK,YAAY,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,aAAa,CAAC,CAAC;YACjE,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;SAC3C;aAAM,IAAI,aAAa,KAAK,gBAAgB,EAAE;YAC7C,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;SAC3C;aAAM,IAAI,aAAa,KAAK,OAAO,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,aAAa,CAAC,CAAC;YAC9D,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SACrC;IACH,CAAC;IAEC,qDAAwB,GAAxB;QAAA,iBAqBC;QApBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAC5D,aAAG;YACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;gBAC5B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC3D,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,sCAAS,GAAT,UAAU,GAAG;QACX,qBAAqB;QACrB,8BAA8B;QAC9B,oCAAoC;IACtC,CAAC;IAED,+CAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,+CAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iDAAoB,GAApB,UAAqB,iBAAiB;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAED,8CAAiB,GAAjB;QAAA,iBAIA;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,8CAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,8CAAiB,GAAjB;QAAA,iBAQC;QAPC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,sCAAS,GAAT,UAAU,mBAAmB;QAA7B,iBAqBC;QApBC,8EAA8E;QAC9E,OAAO,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAChF,aAAG;YACD,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;gBAChC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,EAAE,CAAC;YAC7C,gCAAgC;YAChC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC;YAC5C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,6BAA6B;QAE/B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAgB,GAAhB,UAAiB,SAAS;QACxB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC;QAC9C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE;YACpD,mBAAmB;YACnB,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACvB;SACA,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV,UAAW,SAAS;QAClB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,GAAG,mEAAmE,CAAC;IACzG,CAAC;IApPwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;yDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;oDAAC;IACb;QAApB,+DAAS,CAAC,0DAAQ,CAAC;wEAAQ,0DAAQ;qDAAM;IAf/B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,+GAAyC;;SAE1C,CAAC;+EAKuB,iEAAW;YACP,0EAAe;YACtB,yEAAe;YACnB,+DAAU;YACR,2DAAS;YACK,oFAAoB;OATzC,kBAAkB,CAmQ9B;IAAD,yBAAC;CAAA;AAnQ8B;;;;;;;;;;;;ACpB/B,+DAA+D,2J;;;;;;;;;;;ACA/D,qEAAqE,mCAAmC,aAAa,sCAAsC,aAAa,wCAAwC,aAAa,0CAA0C,2kBAA2kB,mCAAmC,qRAAqR,mCAAmC,waAAwa,sCAAsC,uaAAua,wCAAwC,qbAAqb,0CAA0C,qdAAqd,+CAA+C,8XAA8X,qCAAqC,oJAAoJ,2lB;;;;;;;;;;;;;;;;;;;;;;;ACA/hH;AAU1C;AACiC;AAOpC;AAEsD;AACV;AACA;AAQpE;IAaE,2BACkC,UAAe,EACvC,WAAwB,EACxB,EAAe,EACf,eAAgC,EAChC,oBAA0C,EAC1C,QAAyB;QALD,eAAU,GAAV,UAAU,CAAK;QACvC,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,aAAQ,GAAR,QAAQ,CAAiB;QAlBnC,cAAS,GAAG,KAAK,CAAC;QAKlB,cAAS,GAAQ,EAAE,CAAC;QACpB,mBAAc,GAAQ,EAAE,CAAC;QAezB,eAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;QAClD,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;QACtD,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;QACxD,oBAAe,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;QAC5D,oBAAe,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;QAC5D,sBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC;QAChE,sBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC;QAChE,wBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC;QACpE,2BAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC;QAC1E,6BAAwB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,wBAAwB,CAAC;QAC9E,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;QACtD,mBAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC;QAG1D,UAAK,GAAG;YACN,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,wBAAwB,EAAE,IAAI,CAAC,wBAAwB;YACvD,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC;QAGF,mBAAmB;QACnB,gBAAW,GAAQ,EAAE,CAAC;IAjClB,CAAC;IAmCL,oCAAQ,GAAR;QACE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,EAAE,CAAC;QAE7C,iDAAiD;QACjD,qDAAqD;QACrD,uDAAuD;QACvD,2DAA2D;QAC3D,2DAA2D;QAC3D,+DAA+D;QAC/D,+DAA+D;QAC/D,mEAAmE;QACnE,yEAAyE;QACzE,6EAA6E;QAC7E,qDAAqD;QACrD,yDAAyD;IAC3D,CAAC;IAED,oDAAwB,GAAxB;QAAA,iBAqBC;QApBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAC5D,aAAG;YACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;gBAC5B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC3D,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAE7C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV,UAAW,EAAE;QAAb,iBAaC;QAZC,IAAI,MAAM,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC;QACvE,IAAI,MAAM,EAAE;YACZ,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,aAAG;gBACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC;gBAC9C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YACzD,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,sCAAU,GAAV;QAAA,iBA6CC;QA5CC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5C,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACvD;QACD,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAC3D;QACD,IAAI,IAAI,CAAC,sBAAsB,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC;SACrE;QACD,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SACjD;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC/D,aAAG;YACD,oBAAoB;YACpB,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACxD,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACF,CAAC;IACJ,CAAC;IAnJwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;wDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IACb;QAApB,+DAAS,CAAC,0DAAQ,CAAC;wEAAQ,0DAAQ;oDAAM;IAX/B,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,yHAAyC;;SAE1C,CAAC;QAeG,6GAAM,CAAC,iEAAe,CAAC;uFACH,wEAAW;YACpB,0DAAW;YACE,gFAAe;YACV,0FAAoB;YAChC,gFAAe;OAnBxB,iBAAiB,CA6J7B;IAAD,wBAAC;CAAA;AA7J6B;;;;;;;;;;;;AC9B9B,+DAA+D,uL;;;;;;;;;;;ACA/D,oaAAoa,sBAAsB,8JAA8J,uBAAuB,2yBAA2yB,wCAAwC,8DAA8D,6VAA6V,wCAAwC,8DAA8D,2GAA2G,iKAAiK,uL;;;;;;;;;;;;;;;;;;;;ACA7pE;AACK;AACQ;AACN;AASzD;IAEE,2CAAoB,WAAwB,EAClC,QAAyB,EACzB,MAAc,EACd,KAAqB;QAHX,gBAAW,GAAX,WAAW,CAAa;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAE7B,SAAI,GAAG,IAAI,CAAC;QAGhB,qBAAqB;QACjB,YAAY;QACZ,kBAAkB;QAClB,sBAAsB;QACtB,qBAAqB;QACrB,oBAAoB;QACpB,oBAAoB;QACpB,wBAAwB;QACxB,wBAAwB;QACxB,mBAAmB;QACnB,gBAAgB;QAChB,iBAAiB;QACjB,uBAAuB;QACvB,qBAAqB;QACrB,uBAAuB;QACvB,sBAAsB;QACtB,KAAK;QAEL,iBAAY,GAAiB;YAC3B,KAAK,EAAE,EAAE;SACV,CAAC;QAEF,SAAI,GAAG;YACL,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;SACb,CAAC;IA9B+B,CAAC;IAgCpC,oDAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC9B,2BAA2B;YAC1B,gCAAgC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9C,IAAI,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;YAEvD,oCAAoC;YACpC,gEAAgE;QACjE,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,oDAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAkB;YAC9F,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,+DAA+D;QACjE,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAAoB,GAApB;QAAA,iBAgBC;QAfC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEjC,OAAO,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBAEtE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,kCAAkC;YACpC,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC/C;IACL,CAAC;IA9EU,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,4JAAwD;;SAEzD,CAAC;+EAGiC,iEAAW;YACxB,yEAAe;YACjB,sDAAM;YACP,8DAAc;OALpB,iCAAiC,CAgF7C;IAAD,wCAAC;CAAA;AAhF6C;;;;;;;;;;;;ACZ9C,+DAA+D,mJ;;;;;;;;;;;ACA/D,qGAAqG,y/I;;;;;;;;;;;;;;;;;;;;;;;ACAxC;AAC4D;AAClE;AACQ;AAEtB;AACwB;AASjE;IAsBE,4BACS,EAAe,EACf,WAAwB,EACvB,MAAc,EACd,QAAyB,EACzB,gBAAkC;QAJnC,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,qBAAgB,GAAhB,gBAAgB,CAAkB;QA1B5C,cAAS,GAAuB;YAC9B,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,UAAK,GAAQ,EAAE,CAAC;QAChB,4BAAuB,GAAG,kBAAkB,CAAC;QAE7C,SAAI,GAAW,EAAE,CAAC;QAClB,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAC7B,aAAQ,GAAW,EAAE,CAAC;QACtB,gBAAW,GAAW,EAAE,CAAC;QACzB,YAAO,GAAW,EAAE,CAAC;QACrB,YAAO,GAAW,EAAE,CAAC;QAsCrB,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACvC,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QA9BD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC;YAC5B,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,0BAA0B,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC/C,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACH,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvC,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,sBAAsB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC3C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;aAClC,CAAC;YACF,kBAAkB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACrC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;gBAChB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAMD,4CAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,KAAK,CAAC,KAAK,KAAK,kBAAkB,EAAE;YACtC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,IAAI,KAAK,CAAC,KAAK,KAAK,qBAAqB,EAAE;YACzC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,IAAI,KAAK,CAAC,KAAK,KAAK,qBAAqB,EAAE;YACzC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,6CAA6C;IAC/C,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,uBAAuB,GAAG,kBAAkB,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC9D,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,8CAAiB,GAAjB;QAAA,iBAcC;QAbC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAC/E,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;QAC5F,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAE5E,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YACtE,+BAA+B;YAC/B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mHAAmH,CAAC,CAAC;YAC3I,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAtGU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kHAA0C;;SAE3C,CAAC;+EAyBa,0DAAW;YACF,iEAAW;YACf,sDAAM;YACJ,yEAAe;YACP,2EAAgB;OA3BjC,kBAAkB,CAwG9B;IAAD,yBAAC;CAAA;AAxG8B;AA0G/B;IAAA;IAQA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;ACjID,+DAA+D,uK;;;;;;;;;;;ACA/D,iTAAiT,wBAAwB,iE;;;;;;;;;;;;;;;;;;;ACAvR;AACL;AACuB;AAOpE;IAEE,iCACU,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAM1C,iBAAY,GAAG,IAAI,0DAAW,EAAE,CAAC;IANa,CAAC;IAE/C,0CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAQD,kDAAgB,GAAhB,UAAiB,QAAQ;QAEvB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAElC,CAAC;IAED,kDAAgB,GAAhB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACH,CAAC;IA1BU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,qIAA8C;;SAE/C,CAAC;+EAI2B,gFAAe;OAH/B,uBAAuB,CA2BnC;IAAD,8BAAC;CAAA;AA3BmC;;;;;;;;;;;;ACTpC,+DAA+D,+K;;;;;;;;;;;ACA/D,0TAA0T,iCAAiC,4HAA4H,+aAA+a,yBAAyB,qG;;;;;;;;;;;;;;;;;;;ACA72B;AACL;AAC+B;AAO5E;IAEE,qCAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAE9D,eAAU,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAC5C,WAAM,GAAQ,EAAE,CAAC;QAEf,qBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;IAL2B,CAAC;IAUjE,eAAe;IACf,4CAA4C;IAC5C,wBAAwB;IACxB,mCAAmC;IACnC,oFAAoF;IACpF,sBAAsB;IACtB,sDAAsD;IACtD,gBAAgB;IAChB,UAAU;IACV,UAAU;IACV,0CAA0C;IAC1C,oCAAoC;IACpC,IAAI;IAEJ,8CAAQ,GAAR,cAAW,CAAC;IAEZ,2DAAqB,GAArB,UAAsB,QAAQ;QAC5B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IA/BU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,iJAAkD;;SAEnD,CAAC;+EAGyC,wFAAmB;OAFjD,2BAA2B,CAuCvC;IAAD,kCAAC;CAAA;AAvCuC;;;;;;;;;;;;ACTxC,+DAA+D,2K;;;;;;;;;;;ACA/D,6RAA6R,wBAAwB,uC;;;;;;;;;;;;;;;;;;;ACAnQ;AACgB;AACrB;AAO7C;IAEE,mCAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAOlD,kBAAa,GAAG,IAAI,0DAAW,EAAE,CAAC;IAPoB,CAAC;IAEvD,4CAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IASD,qDAAiB,GAAjB,UAAkB,QAAQ;QAExB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAEnC,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC/D,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACH,CAAC;IA1BU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,2IAAgD;;SAEjD,CAAC;+EAGoC,8EAAc;OAFvC,yBAAyB,CA2BrC;IAAD,gCAAC;CAAA;AA3BqC;;;;;;;;;;;;ACTtC,+DAA+D,2J;;;;;;;;;;;ACA/D,kKAAkK,sBAAsB,qqBAAqqB,8F;;;;;;;;;;;;;;;;;;;;ACArxB;AACjB;AACd;AACsB;AAO/D;IAKE,iCAAoB,WAAwB,EAClC,MAAc,EACb,QAAyB;QAFhB,gBAAW,GAAX,WAAW,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAiB;QALpC,UAAK,GAAQ,EAAE,CAAC;QACN,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;IAIN,CAAC;IAEzC,0CAAQ,GAAR;IACA,CAAC;IAED,gDAAc,GAAd;QAAA,iBAUC;QATC,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1D,cAAI;YACF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;YAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAxBS;QAAT,4DAAM,EAAE;;mEAAqC;IAHnC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,8HAA8C;;SAE/C,CAAC;+EAMiC,iEAAW;YAC1B,sDAAM;YACH,yEAAe;OAPzB,uBAAuB,CA4BnC;IAAD,8BAAC;CAAA;AA5BmC;;;;;;;;;;;;ACVpC,+DAA+D,mI;;;;;;;;;;;ACA/D,id;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,gGAAoC;;SAErC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,+DAA+D,mL;;;;;;;;;;;ACA/D,6qCAA6qC,iCAAiC,oSAAoS,ixFAAixF,mBAAmB,0wBAA0wB,mBAAmB,oiDAAoiD,mBAAmB,+hDAA+hD,mBAAmB,82CAA82C,0BAA0B,+aAA+a,mBAAmB,2mBAA2mB,oBAAoB,6BAA6B,uBAAuB,+3BAA+3B,8BAA8B,qbAAqb,mBAAmB,42BAA42B,6BAA6B,stBAAstB,+BAA+B,oxBAAoxB,uCAAuC,+sBAA+sB,2CAA2C,uvBAAuvB,kDAAkD,4uBAA4uB,+CAA+C,qzBAAqzB,0CAA0C,owBAAowB,kDAAkD,wvBAAwvB,kDAAkD,0tBAA0tB,0CAA0C,4jBAA4jB,wBAAwB,0kBAA0kB,0BAA0B,mtBAAmtB,8CAA8C,0VAA0V,sR;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzpsB;AACgB;AACE;AAC3B;AACgB;AAC4D;AAC1D;AAEoD;AACnC;AACN;AAQtE;IAEE,gCAAoB,cAA8B,EACxC,QAAyB,EACzB,MAAc,EACd,MAAiB,EACjB,mBAAwC,EACxC,gBAAkC;QALxB,mBAAc,GAAd,cAAc,CAAgB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAG5C,UAAK,GAAO,EAAE,CAAC;QACf,YAAO,GAAQ,EAAE,CAAC;QAClB,WAAM,GAAQ,EAAE,CAAC;QACjB,eAAU,GAAQ,EAAE,CAAC;QAGrB,eAAU,GAAQ,EAAE,CAAC;QAerB,iBAAY,GAAG,KAAK,CAAC;QAWvB,0BAAqB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACxC,qBAAgB,GAAsB;YACpC;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAC;oBACxC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;oBAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACjC;aACF;SACF,CAAC;QAEF,0BAAqB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC1C,qBAAgB,GAAsB;YACpC;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;oBAChC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;oBAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,iBAAiB,EAAC;oBAC1C,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACjC;aACF;SACF,CAAC;QAEF,8BAAyB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9C,yBAAoB,GAAgC;YAClD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,cAAc,EAAE;oBACd,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAC;oBACxC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,qDAAqD,EAAC;oBAC9E,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,kDAAkD,EAAC;oBAC3E,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,kBAAkB,EAAC;oBAC3C,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,sBAAsB,EAAC;oBAChD,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,4BAA4B,EAAC;iBACvD;aACF;SACF,CAAC;QAEF,sBAAiB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACtC,iBAAY,GAAwB;YAClC;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE;oBACN,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,mBAAmB,EAAC;oBAC5C,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,4BAA4B,EAAC;iBACtD;aACF;SACF,CAAC;QAkGF,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAiBnE,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAiDrE,eAAU,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAG5C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAU9D,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBtE,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBlE,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBtE,aAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBtD,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBvD,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBnE,gCAA2B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBzE,+BAA0B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBxE,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBrE,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBnE,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBpE,gCAA2B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBzE,8BAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAtcnE,CAAC;IAwFH,yCAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC1C,IAAI,CAAC,gCAAgC,EAAE,CAAC;QAExC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,iCAAiC,EAAE,CAAC;QACzC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAE1C,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,0BAA0B,EAAE;IACnC,CAAC;IAED,+CAAc,GAAd,UAAe,cAAc;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,CAAC,IAAI,cAAc,EAAC;YAC1B,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACjD,CAAC;IAED,uDAAsB,GAAtB,UAAuB,sBAAsB;QAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,CAAC,IAAI,sBAAsB,EAAC;YAClC,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;SACxC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjE,CAAC;IAED,mDAAkB,GAAlB,UAAmB,kBAAkB;QACnC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,CAAC,IAAI,kBAAkB,EAAC;YAC9B,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7C,CAAC;IAEA,mDAAkB,GAAlB,UAAmB,kBAAkB;QACpC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,CAAC,IAAI,kBAAkB,EAAC;YAC9B,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;IAC/C,CAAC;IAEA,6DAA4B,GAA5B;QACC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kIAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,yDAAwB,GAAxB,UAAyB,QAAQ;QAC/B,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,QAAQ,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAAyB,EAAE;YAC5D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC,CAAC;QACH,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAClC,CAAC;IAGD,qDAAoB,GAApB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACrE,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACH,CAAC;IAQD,4DAA2B,GAA3B,UAA4B,mBAAmB;QAC3C,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;IACpD,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YACzD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACH,CAAC;IAMD,8DAA6B,GAA7B,UAA8B,qBAAqB;QAC/C,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACxD,CAAC;IAED,sDAAqB,GAArB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACH,CAAC;IAGD,6CAAY,GAAZ;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UAAqB,QAAqB,EAAE,KAA8B;QACtE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC;IAC3C,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UAAqB,QAAqB,EAAE,KAA4B;QACtE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC;IAC1C,CAAC;IAED,+CAAc,GAAd;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAsB,GAAtB,UAAuB,QAAqB,EAAE,KAAgC;QAC1E,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,eAAe,CAAC;IACrD,CAAC;IAQD,YAAY;IAEZ,sDAAqB,GAArB,UAAsB,QAAQ;QAC1B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;IAC5C,CAAC;IAOD,4DAA2B,GAA3B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,aAAG;YAChE,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAClC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,6DAA4B,GAA5B,UAA6B,0BAA0B;QACrD,IAAI,CAAC,iBAAiB,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACjE,CAAC;IAOD,0DAAyB,GAAzB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAChC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,2DAA0B,GAA1B,UAA2B,wBAAwB;QACjD,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC;IAC3D,CAAC;IAOD,2DAA0B,GAA1B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACH,CAAC;IAED,iEAAgC,GAAhC,UAAiC,uBAAuB;QACtD,IAAI,CAAC,mBAAmB,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC;IAC1D,CAAC;IAOD,gDAAe,GAAf;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,+CAAc,GAAd,UAAe,YAAY;QACzB,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IAC1C,CAAC;IAOD,iDAAgB,GAAhB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,gDAAe,GAAf,UAAgB,aAAa;QAC3B,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;IAC5C,CAAC;IAOD,6DAA4B,GAA5B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,EAAE,CAAC,SAAS,CAAC,aAAG;YACxE,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,4DAA2B,GAA3B,UAA4B,yBAAyB;QACnD,IAAI,CAAC,2BAA2B,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,2BAA2B,CAAC;IACpE,CAAC;IAOD,mEAAkC,GAAlC;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,mCAAmC,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QACvC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,kEAAiC,GAAjC,UAAkC,+BAA+B;QAC/D,IAAI,CAAC,iCAAiC,GAAG,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,iCAAiC,CAAC;IAChF,CAAC;IAOD,kEAAiC,GAAjC;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,aAAG;YACvE,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QACtC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,iEAAgC,GAAhC,UAAiC,8BAA8B;QAC7D,IAAI,CAAC,gCAAgC,GAAG,8BAA8B,CAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,gCAAgC,CAAC;IAC9E,CAAC;IAOD,+DAA8B,GAA9B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QACnC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,8DAA6B,GAA7B,UAA8B,2BAA2B;QACvD,IAAI,CAAC,6BAA6B,GAAG,2BAA2B,CAAC,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,6BAA6B,CAAC;IACxE,CAAC;IAOD,6DAA4B,GAA5B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,4DAA2B,GAA3B,UAA4B,yBAAyB;QACnD,IAAI,CAAC,2BAA2B,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,2BAA2B,CAAC;IACpE,CAAC;IAOD,8DAA6B,GAA7B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,aAAG;YACnE,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAClC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,6DAA4B,GAA5B,UAA6B,0BAA0B;QACrD,IAAI,CAAC,4BAA4B,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAAC;IACtE,CAAC;IAOD,mEAAkC,GAAlC;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,EAAE,CAAC,SAAS,CAAC,aAAG;YACxE,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QACvC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,kEAAiC,GAAjC,UAAkC,+BAA+B;QAC/D,IAAI,CAAC,iCAAiC,GAAG,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,iCAAiC,CAAC;IAChF,CAAC;IAOD,iEAAgC,GAAhC;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE,CAAC,SAAS,CAAC,aAAG;YACtE,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;QACrC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,gEAA+B,GAA/B,UAAgC,6BAA6B;QAC3D,IAAI,CAAC,+BAA+B,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,+BAA+B,CAAC;IAC5E,CAAC;IAEA,yDAAwB,GAAxB;QAAA,iBAkCE;QAjCD,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAEjE,KAAI,CAAC,KAAK,CAAC,uBAAuB,GAAG,KAAI,CAAC,+BAA+B,CAAC;YAC1E,KAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,KAAI,CAAC,4BAA4B,CAAC;YACpE,KAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAI,CAAC,2BAA2B,CAAC;YAClE,KAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,KAAI,CAAC,iCAAiC,CAAC;YAE9E,KAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,KAAI,CAAC,6BAA6B,CAAC;YACtE,KAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAI,CAAC,2BAA2B,CAAC;YAClE,KAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,KAAI,CAAC,gCAAgC,CAAC;YAC5E,KAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,KAAI,CAAC,iCAAiC,CAAC;YAE9E,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC;YAC1C,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;YACxC,KAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAI,CAAC,mBAAmB,CAAC;YAExD,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,KAAI,CAAC,qBAAqB,CAAC;YAC/D,KAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,KAAI,CAAC,uBAAuB,CAAC;YACnE,KAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAI,CAAC,mBAAmB,CAAC;YACtD,KAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAI,CAAC,iBAAiB,CAAC;YACpD,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC;YAC5C,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAI,CAAC,eAAe,CAAC;YAChD,KAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAI,CAAC,MAAM,CAAC;YACxC,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC;YAC7C,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAI,CAAC,eAAe,CAAC;YAC3C,KAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAI,CAAC,yBAAyB,CAAC;YAC/D,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC;YAE/C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC;QACrE,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACA,CAAC;IACF,CAAC;IAhgBU,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,gJAA8C;;SAE/C,CAAC;+EAIoC,8EAAc;YAC9B,gFAAe;YACjB,sDAAM;YACN,2DAAS;YACI,wFAAmB;YACtB,mFAAgB;OAPjC,sBAAsB,CAmgBlC;IAAD,6BAAC;CAAA;AAngBkC;;;;;;;;;;;;AClBnC,+DAA+D,mM;;;;;;;;;;;ACA/D,+jB;;;;;;;;;;;;;;;;;;;;;ACA0D;AACK;AACG;AACzB;AAC2B;AAOpE;IAEE,sCACkC,UAAe,EACvC,cAA8B,EAC9B,MAAc,EACd,QAAyB,EACzB,MAAiB;QAJO,eAAU,GAAV,UAAU,CAAK;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAG3B,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC;QAC1C,uBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC5D,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;QAClD,wBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAE9D,UAAK,GAAQ,EAAE,CAAC;IAPb,CAAC;IASJ,+CAAQ,GAAR;IACA,CAAC;IAED,iEAA0B,GAA1B;QAAA,iBAgBC;QAfC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAExD,OAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;aACvE,SAAS,CACR,aAAG;YACD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAEjB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC1D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACT,CAAC;IApCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,kKAAoD;;SAErD,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;uFACA,8EAAc;YACtB,sDAAM;YACJ,gFAAe;YACjB,2DAAS;OAPhB,4BAA4B,CAqCxC;IAAD,mCAAC;CAAA;AArCwC;;;;;;;;;;;;ACXzC,+DAA+D,+K;;;;;;;;;;;ACA/D,iZAAiZ,mCAAmC,mQAAmQ,sCAAsC,sPAAsP,wCAAwC,2PAA2P,0CAA0C,srKAAsrK,YAAY,kNAAkN,iBAAiB,msKAAmsK,kBAAkB,+hCAA+hC,kBAAkB,uiCAAuiC,kBAAkB,0xNAA0xN,kBAAkB,g4BAAg4B,kBAAkB,w9BAAw9B,kBAAkB,ijB;;;;;;;;;;;;;;;;;;;;;;ACAlntB;AACQ;AACzB;AAC2B;AACvB;AACO;AAOpD;IACE,8BACU,cAA8B,EAC9B,QAAyB,EACzB,MAAc,EACU,UAAe;QAHvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACU,eAAU,GAAV,UAAU,CAAK;QAGjD,YAAO,GAAQ,EAAE,CAAC;QAGlB,gBAAW,GAAa,CAAC,OAAO,EAAE,MAAM,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAoBtE,uBAAkB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACvC,yBAAoB,GAAa;YAC/B,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;SACR,CAAC;QAMF,0BAAqB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC1C,qBAAgB,GAAsB;YACpC;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAE;oBAC1C,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE;oBACnC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE;oBAChC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE;oBACnC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;iBACnC;aACF;SACF,CAAC;QAEF,4BAAuB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5C,uBAAkB,GAAwB;YACxC;gBACE,IAAI,EAAE,gBAAgB;gBACtB,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;oBACpC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE;oBACxC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE;oBAChD,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,aAAa,EAAE;iBACnD;aACF;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,mCAAmC;gBACzC,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,wBAAwB;wBAC/B,SAAS,EAAE,mCAAmC;qBAC/C;iBACF;aACF;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;aACrE;YACD;gBACE,IAAI,EAAE,wBAAwB;gBAC9B,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,sBAAsB,EAAE,SAAS,EAAE,wBAAwB,EAAE;iBACvE;aACF;YACD;gBACE,IAAI,EAAE,uBAAuB;gBAC7B,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,sBAAsB,EAAE,SAAS,EAAE,uBAAuB,EAAE;iBACtE;aACF;YACD;gBACE,IAAI,EAAE,mCAAmC;gBACzC,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,8BAA8B;wBACrC,SAAS,EAAE,mCAAmC;qBAC/C;iBACF;aACF;YACD;gBACE,IAAI,EAAE,mCAAmC;gBACzC,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,kBAAkB;wBACzB,SAAS,EAAE,mCAAmC;qBAC/C;iBACF;aACF;YACD;gBACE,IAAI,EAAE,2BAA2B;gBACjC,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,yBAAyB;wBAChC,SAAS,EAAE,2BAA2B;qBACvC;iBACF;aACF;YACD;gBACE,IAAI,EAAE,kDAAkD;gBACxD,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,oCAAoC;wBAC3C,SAAS,EAAE,kDAAkD;qBAC9D;iBACF;aACF;YACD;gBACE,IAAI,EAAE,oDAAoD;gBAC1D,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,qCAAqC;wBAC5C,SAAS,EAAE,oDAAoD;qBAChE;iBACF;aACF;YACD;gBACE,IAAI,EAAE,yCAAyC;gBAC/C,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,qCAAqC;wBAC5C,SAAS,EAAE,yCAAyC;qBACrD;iBACF;aACF;SACF,CAAC;QAEF,8BAAyB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9C,yBAAoB,GAA0B;YAC5C;gBACE,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,qBAAqB;gBAC3B,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC;aAC3E;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;aACpE;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC;aAC1E;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;aACtE;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,oBAAoB,EAAE,SAAS,EAAE,uBAAuB,EAAE;iBACpE;aACF;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;aACpE;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;aACtE;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;aACtE;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC;aAC1E;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;aACtE;YACD;gBACE,IAAI,EAAE,sCAAsC;gBAC5C,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,uBAAuB;wBAC9B,SAAS,EAAE,sCAAsC;qBAClD;iBACF;aACF;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC;aAC1E;YACD;gBACE,IAAI,EACF,4EAA4E;gBAC9E,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,uBAAuB;wBAC9B,SAAS,EACP,2EAA2E;qBAC9E;iBACF;aACF;YACD;gBACE,IAAI,EAAE,2CAA2C;gBACjD,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,uCAAuC;wBAC9C,SAAS,EAAE,2CAA2C;qBACvD;iBACF;aACF;SACF,CAAC;QAEF,qCAAgC,GAAG,IAAI,0DAAW,EAAE,CAAC;QACrD,8BAAyB,GAA+B;YACtD;gBACE,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;oBACzC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;oBACzC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;oBACzC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;oBACzC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;oBACzC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;iBAC1C;aACF;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;oBACrC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE;oBACvC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE;oBACvC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE;oBACvC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE;oBACvC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE;oBACvC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;oBACrC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;oBACrC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;iBACtC;aACF;SACF,CAAC;QAEF,qBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACrC,gBAAW,GAAiB;YAC1B;gBACE,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,eAAe,EAAE;oBACrD,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;oBAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;oBAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;oBAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;oBAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;oBAChC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,8BAA8B,EAAE;iBAClE;aACF;SACF,CAAC;QAEF,oBAAe,GAAG,IAAI,0DAAW,EAAE,CAAC;QACpC,eAAU,GAAiB;YACzB;gBACE,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,eAAe,EAAE;oBACrD,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE;oBACnC,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;oBACrC,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE;oBACnC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE;oBACnC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,6BAA6B,EAAE;iBACjE;aACF;SACF,CAAC;QAEF,oCAA+B,GAAG,IAAI,0DAAW,EAAE,CAAC;QACpD,+BAA0B,GAAgC;YACxD;gBACE,IAAI,EAAE,4BAA4B;gBAClC,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,eAAe,EAAE;oBACrD,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;oBAC5C,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;oBAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;oBAClC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;oBAC9B,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;oBAC9B,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;iBAC/B;aACF;SACF,CAAC;QAEF,cAAc;QACd,qBAAqB;QACrB,qBAAqB;QACrB,qBAAqB;QACrB,kBAAkB;QAClB,KAAK;QAEL,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC;IArW3C,CAAC;IAuWJ,uCAAQ,GAAR,cAAY,CAAC;IAEb,uDAAwB,GAAxB;QAAA,iBAYC;QAXC,OAAO,IAAI,CAAC,cAAc;aACvB,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;aAC/C,SAAS,CACR,cAAI;YACF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC/C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACN,CAAC;IA3XU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,0IAA4C;;SAE7C,CAAC;QAMG,6GAAM,CAAC,iEAAe,CAAC;+EAHA,8EAAc;YACpB,gFAAe;YACjB,sDAAM;OAJb,oBAAoB,CA4XhC;IAAD,2BAAC;CAAA;AA5XgC;;;;;;;;;;;;ACZjC,+DAA+D,2K;;;;;;;;;;;ACA/D,mEAAmE,yBAAyB,qBAAqB,iBAAiB,w/C;;;;;;;;;;;;;;;;;;;;;ACAxE;AAEY;AACF;AAC3B;AACW;AAOpD;IAEE,6BAAoB,iBAAmC,EAC7C,QAAyB,EACzB,MAAc,EACU,UAAe;QAH7B,sBAAiB,GAAjB,iBAAiB,CAAkB;QAC7C,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACU,eAAU,GAAV,UAAU,CAAK;QAE/C,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAEjC,mBAAc,GAAQ,EAAE,CAAC;QAG3B,uBAAkB,GAAG,KAAK,CAAC;QAG3B,uBAAkB,GAAG,KAAK,CAAC;QAG3B,qBAAgB,GAAG,KAAK,CAAC;QAGzB,4BAAuB,GAAG,KAAK,CAAC;QAGhC,oBAAe,GAAG,KAAK,CAAC;QAExB,cAAS,GAAG,KAAK,CAAC;IApBZ,CAAC;IAuBP,sCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAGD,kDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE;QACrB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,kDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE;QACrB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,gDAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW;SAC7B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,uDAAyB,GAAzB;QACE,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAC1B,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,gBAAgB,GAAG,kBAAkB;SAC3C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE;QAClB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,mBAAmB;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,+CAAiB,GAAjB;QAAA,iBA2BC;QA1BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,KAAqB,UAAc,EAAd,SAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAjC,IAAM,OAAO;YACf,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACzD,MAAM,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;YACjC,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACrD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QACjE,CAAC,CACA,CAAC;IACF,CAAC;IArGU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,oIAA0C;;SAE3C,CAAC;QAMG,6GAAM,CAAC,iEAAe,CAAC;+EAHa,kFAAgB;YACnC,gFAAe;YACjB,sDAAM;OAJb,mBAAmB,CAsG/B;IAAD,0BAAC;CAAA;AAtG+B;;;;;;;;;;;;ACZhC,yBAAyB,gDAAgD,2CAA2C,6BAA6B,KAAK,gBAAgB,2CAA2C,kCAAkC,8BAA8B,KAAK,4BAA4B,2CAA2C,MAAM,6CAA6C,25B;;;;;;;;;;;ACAhZ,u5EAAu5E,eAAe,kZAAkZ,sBAAsB,2BAA2B,2BAA2B,0LAA0L,sLAAsL,iNAAiN,wBAAwB,6JAA6J,4PAA4P,iCAAiC,kBAAkB,8T;;;;;;;;;;;;;;;;;;;;;;;;;ACA/2H;AACyB;AACjB;AACzB;AAC2B;AAC2B;AACO;AACA;AAC5C;AAO1D;IA0BE,kCACkC,UAAe,EACvC,cAA8B,EAC9B,MAAc,EACd,QAAyB,EACzB,MAAiB;QAJO,eAAU,GAAV,UAAU,CAAK;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QA7B3B,YAAO,GAAQ,EAAE,CAAC;QAGlB,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,2BAA2B;QAE3B,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC;QAC1C,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvC,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAG3C,iBAAY,GAAQ,EAAE,CAAC;QAEvB,qBAAgB,GAAa;YAC3B,QAAQ;YACR,UAAU;YACV,eAAe;YACf,WAAW;YACX,QAAQ;SACT,CAAC;QAEF,cAAS,GAAG,IAAI,uEAAc,CAAiB,IAAI,EAAE,EAAE,CAAC,CAAC;IAQtD,CAAC;IAEJ,2CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,qDAAqD;QACrD,sDAAsD;IACxD,CAAC;IAGC,gFAAgF;IAChF,gDAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,+CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACxE,CAAC;IAED,mDAAmD;IACnD,gDAAa,GAAb,UAAc,GAAoB;QAChC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAC9D;QACD,+CAA+C;QAC/C,qDAAqD;QACrD,IAAI;QACJ,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAChD,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;IAC7B,CAAC;IAEH,mDAAgB,GAAhB;QAAA,iBAYC;QAXC,OAAO,IAAI,CAAC,cAAc;aACvB,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,aAAG;YACH,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;YAC9D,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAC/D,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;QAC9B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0DAAuB,GAAvB,UAAwB,SAAS;QAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,SAAS,CAAC,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAAwB,EAAE;YAC3D,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B;SACF,CAAC,CAAC;QAEH,iCAAiC;IACnC,CAAC;IACD,4CAAS,GAAT;QAAA,iBAcC;QAbC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,cAAI;YACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,+CAA+C;YAC/C,wEAAwE;YACxE,gBAAgB;YAChB,oCAAoC;YACpC,IAAI,CAAC,QAAQ,GAAM,KAAI,CAAC,YAAY,SAAM,CAAC,CAAC,2CAA2C;YACvF,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,EACD,eAAK,IAAK,CAAC,CACZ,CAAC;IACJ,CAAC;IAED,iDAAc,GAAd;QAAA,iBAcC;QAbC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACpD,cAAI;YACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,+CAA+C;YAC/C,uEAAuE;YACvE,oCAAoC;YACpC,IAAI,CAAC,QAAQ,GAAM,KAAI,CAAC,YAAY,SAAM,CAAC,CAAC,2CAA2C;YACvF,8BAA8B;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,EACD,eAAK,IAAK,CAAC,CACZ,CAAC;IACJ,CAAC;IAED,4DAAyB,GAAzB,UAA0B,mBAAmB,EAAE,kBAAkB;QAAjE,iBAcC;QAbC,IAAI,MAAM,GAAG,OAAO,CAAC,kEAAkE,CAAC,CAAC;QACzF,IAAI,MAAM,EAAE;YACV,OAAO,IAAI,CAAC,cAAc;iBACvB,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,EAAE,kBAAkB,CAC7E;iBACA,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;gBACtD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,EAAE,eAAK;gBACP,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChE,CAAC,CAAC;SACL;IACH,CAAC;IAED,qEAAkC,GAAlC,UAAmC,OAAO;QACxC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAA4B,EAAE;YAC/D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;SACF,CAAC,CAAC;IACL,CAAC;IAED,qEAAkC,GAAlC,UAAmC,OAAO;QACxC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAA4B,EAAE;YAC/D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;SACF,CAAC,CAAC;IACL,CAAC;IAhKU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sJAAgD;;SAEjD,CAAC;QA4BG,6GAAM,CAAC,iEAAe,CAAC;uFACA,8EAAc;YACtB,sDAAM;YACJ,gFAAe;YACjB,2DAAS;OA/BhB,wBAAwB,CAiKpC;IAAD,+BAAC;CAAA;AAjKoC;;;;;;;;;;;;ACfrC,+DAA+D,mL;;;;;;;;;;;ACA/D,u4GAAu4G,iCAAiC,wVAAwV,oBAAoB,kWAAkW,kBAAkB,67EAA67E,mBAAmB,25GAA25G,iCAAiC,6pFAA6pF,mBAAmB,0zBAA0zB,mBAAmB,woDAAwoD,mBAAmB,6uDAA6uD,mBAAmB,68CAA68C,0BAA0B,ycAAyc,mBAAmB,+oBAA+oB,oBAAoB,6BAA6B,uBAAuB,07BAA07B,8BAA8B,+cAA+c,mBAAmB,u6BAAu6B,6BAA6B,kwBAAkwB,+BAA+B,w0BAAw0B,uCAAuC,2vBAA2vB,2CAA2C,myBAAmyB,kDAAkD,wxBAAwxB,+CAA+C,+2BAA+2B,0CAA0C,gzBAAgzB,kDAAkD,oyBAAoyB,kDAAkD,swBAAswB,0CAA0C,8lBAA8lB,wBAAwB,knBAAknB,0BAA0B,+vBAA+vB,8CAA8C,oXAAoX,gT;;;;;;;;;;;;;;;;;;;;;;;;;;ACArv/B;AAM1C;AACuC;AACE;AAC3B;AAEgB;AACmB;AACyC;AACN;AACzC;AAOtE;IACE,gCACkC,UAAe,EACvC,cAA8B,EAC9B,mBAAwC,EACxC,QAAyB,EACzB,MAAiB,EACjB,gBAAkC,EAClC,MAAc;QANU,eAAU,GAAV,UAAU,CAAK;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QACjB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAGxB,UAAK,GAAQ,EAAE,CAAC;QAChB,6BAA6B;QAC7B,kBAAkB;QAClB,YAAO,GAAQ,EAAE,CAAC;QAClB,WAAM,GAAQ,EAAE,CAAC;QACjB,eAAU,GAAQ,EAAE,CAAC;QAGrB,eAAU,GAAQ,EAAE,CAAC;QAcrB,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9C,uBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC;QAChE,eAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;QAChD,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACpD,eAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAEzD,0BAAqB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC1C,qBAAgB,GAAsB;YACpC;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAE;oBAC1C,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE;oBACnC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE;oBAChC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE;oBACnC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;iBACnC;aACF;SACF,CAAC;QAEF,sBAAiB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACtC,iBAAY,GAAwB;YAClC;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,mBAAmB,EAAE;oBAC9C,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,4BAA4B,EAAE;iBACxD;aACF;SACF,CAAC;QAEF,0BAAqB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC1C,qBAAgB,GAAsB;YACpC;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;oBAClC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE;oBACjC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,iBAAiB,EAAE;oBAC5C,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;iBACnC;aACF;SACF,CAAC;QAEF,8BAAyB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9C,yBAAoB,GAAgC;YAClD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,cAAc,EAAE;oBACd,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAE;oBAC1C;wBACE,KAAK,EAAE,GAAG;wBACV,SAAS,EAAE,qDAAqD;qBACjE;oBACD;wBACE,KAAK,EAAE,GAAG;wBACV,SAAS,EAAE,kDAAkD;qBAC9D;oBACD,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,kBAAkB,EAAE;oBAC7C,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,sBAAsB,EAAE;oBAClD,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,4BAA4B,EAAE;iBACzD;aACF;SACF,CAAC;QA+DF,yBAAoB,GAAG,KAAK,CAAC;QAyC7B,+CAA+C;QAC/C,kBAAkB;QAElB,wCAAwC;QACxC,iBAAiB;QACjB,qBAAqB;QACrB,eAAe;QAEf,oCAAoC;QACpC,iCAAiC;QACjC,+CAA+C;QAC/C,+DAA+D;QAC/D,IAAI;QAEJ,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAiBnE,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QA6DrE,eAAU,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAG5C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAU9D,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBpE,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBlE,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBtE,aAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBtD,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBvD,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAkBnE,gCAA2B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAkBzE,+BAA0B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAkBxE,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBrE,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBnE,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBpE,gCAA2B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAkBzE,8BAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAhfpE,CAAC;IAyFJ,yCAAQ,GAAR;QACE,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC1C,IAAI,CAAC,gCAAgC,EAAE,CAAC;QAExC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,iCAAiC,EAAE,CAAC;QACzC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAE1C,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACzE,CAAC;IAED,+CAAc,GAAd,UAAe,cAAc;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,IAAI,cAAc,EAAE;YAC5B,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACjD,CAAC;IAED,uDAAsB,GAAtB,UAAuB,sBAAsB;QAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,IAAI,sBAAsB,EAAE;YACpC,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;SACxC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjE,CAAC;IAED,mDAAkB,GAAlB,UAAmB,kBAAkB;QACnC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,IAAI,kBAAkB,EAAE;YAChC,kDAAkD;YAClD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7C,CAAC;IAID,mDAAkB,GAAlB,UAAmB,QAAQ;QACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YAEjC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC;YACjC,mCAAmC;YACnC,kDAAkD;YAClD,iEAAiE;SAClE;QACD,2DAA2D;IAC7D,CAAC;IAED,6DAA4B,GAA5B;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kIAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,yDAAwB,GAAxB,UAAyB,QAAQ;QAC/B,wDAAwD;QACxD,8DAA8D;QAC9D,wBAAwB;QACxB,YAAY;QACZ,IAAI;QACJ,QAAQ;QACR,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAAyB,EAAE;YAC5D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAC9B,GAAG;IACL,CAAC;IAsBD,4DAA2B,GAA3B,UAA4B,mBAAmB;QAC7C,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;IAClD,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YACzD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,8DAA6B,GAA7B,UAA8B,qBAAqB;QACjD,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACtD,CAAC;IAED,sDAAqB,GAArB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UAAqB,QAAqB,EAAE,KAA8B;QACxE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC;IAC1C,CAAC;IAED,6CAAY,GAAZ;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UACE,QAAqB,EACrB,KAAgC;QAEhC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC;IACzC,CAAC;IAED,+CAAc,GAAd;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAsB,GAAtB,UACE,QAAqB,EACrB,KAAkC;QAElC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,eAAe,CAAC;IACnD,CAAC;IAED,qDAAoB,GAApB;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACrE,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,8EAA8E;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,YAAY;IAEZ,sDAAqB,GAArB,UAAsB,QAAQ;QAC5B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1C,CAAC;IAOD,4DAA2B,GAA3B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,aAAG;YAChE,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA4B,GAA5B,UAA6B,0BAA0B;QACrD,IAAI,CAAC,iBAAiB,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC/D,CAAC;IAOD,0DAAyB,GAAzB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA0B,GAA1B,UAA2B,wBAAwB;QACjD,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC;IAC3D,CAAC;IAOD,2DAA0B,GAA1B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iEAAgC,GAAhC,UAAiC,uBAAuB;QACtD,IAAI,CAAC,mBAAmB,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC;IAC1D,CAAC;IAOD,gDAAe,GAAf;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAc,GAAd,UAAe,YAAY;QACzB,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IAC1C,CAAC;IAOD,iDAAgB,GAAhB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAe,GAAf,UAAgB,aAAa;QAC3B,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;IAC5C,CAAC;IAOD,6DAA4B,GAA5B;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,gBAAgB;aACzB,6BAA6B,EAAE;aAC/B,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4DAA2B,GAA3B,UAA4B,yBAAyB;QACnD,IAAI,CAAC,2BAA2B,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,2BAA2B,CAAC;IACpE,CAAC;IAOD,mEAAkC,GAAlC;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,gBAAgB;aACzB,mCAAmC,EAAE;aACrC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAAiC,GAAjC,UAAkC,+BAA+B;QAC/D,IAAI,CAAC,iCAAiC,GAAG,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,iCAAiC,CAAC;IAChF,CAAC;IAOD,kEAAiC,GAAjC;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,gBAAgB;aACzB,4BAA4B,EAAE;aAC9B,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iEAAgC,GAAhC,UAAiC,8BAA8B;QAC7D,IAAI,CAAC,gCAAgC,GAAG,8BAA8B,CAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,gCAAgC,CAAC;IAC9E,CAAC;IAOD,+DAA8B,GAA9B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8DAA6B,GAA7B,UAA8B,2BAA2B;QACvD,IAAI,CAAC,6BAA6B,GAAG,2BAA2B,CAAC,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,6BAA6B,CAAC;IACxE,CAAC;IAOD,6DAA4B,GAA5B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAA2B,GAA3B,UAA4B,yBAAyB;QACnD,IAAI,CAAC,2BAA2B,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,2BAA2B,CAAC;IACpE,CAAC;IAOD,8DAA6B,GAA7B;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,aAAG;YACnE,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA4B,GAA5B,UAA6B,0BAA0B;QACrD,IAAI,CAAC,4BAA4B,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAAC;IACtE,CAAC;IAOD,mEAAkC,GAAlC;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,gBAAgB;aACzB,6BAA6B,EAAE;aAC/B,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAAiC,GAAjC,UAAkC,+BAA+B;QAC/D,IAAI,CAAC,iCAAiC,GAAG,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,iCAAiC,CAAC;IAChF,CAAC;IAOD,iEAAgC,GAAhC;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,gBAAgB;aACzB,2BAA2B,EAAE;aAC7B,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gEAA+B,GAA/B,UAAgC,6BAA6B;QAC3D,IAAI,CAAC,+BAA+B,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,+BAA+B,CAAC;IAC5E,CAAC;IAED,uDAAsB,GAAtB;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,cAAc;aACvB,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC;aACtC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yDAAwB,GAAxB;QAAA,iBAqBC;QApBC,eAAe;QACf,wEAAwE;QACxE,KAAK;QACL,OAAO,IAAI,CAAC,cAAc;aACvB,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;aAC7C,SAAS,CACR,aAAG;YACD,KAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAI,CAAC,MAAM,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,yDAAyD;YACzD,eAAe;YACf,mEAAmE;YACnE,KAAK;YAEL,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QACpD,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACF,CAAC;IACN,CAAC;IAxiBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,gJAA8C;;SAE/C,CAAC;QAGG,6GAAM,CAAC,iEAAe,CAAC;uFACA,8EAAc;YACT,wFAAmB;YAC9B,gFAAe;YACjB,2DAAS;YACC,mFAAgB;YAC1B,sDAAM;OARb,sBAAsB,CAyiBlC;IAAD,6BAAC;CAAA;AAziBkC;;;;;;;;;;;;ACtBnC,8BAA8B,oBAAoB,kCAAkC,kBAAkB,kBAAkB,4BAA4B,6BAA6B,GAAG,aAAa,kBAAkB,kBAAkB,8BAA8B,4BAA4B,yBAAyB,GAAG,kBAAkB,oBAAoB,+BAA+B,qCAAqC,kBAAkB,wBAAwB,qBAAqB,6BAA6B,kBAAkB,4BAA4B,UAAU,yBAAyB,6BAA6B,kBAAkB,iBAAiB,yBAAyB,GAAG,cAAc,iBAAiB,GAAG,eAAe,iBAAiB,GAAG,qDAAqD,2sD;;;;;;;;;;;ACAxyB,+ZAA+Z,cAAc,wIAAwI,cAAc,ofAAof,0BAA0B,yQAAyQ,cAAc,sgBAAsgB,8BAA8B,+QAA+Q,kBAAkB,8BAA8B,yXAAyX,gEAAgE,8SAA8S,uBAAuB,mCAAmC,WAAW,0TAA0T,uBAAuB,mCAAmC,WAAW,gYAAgY,qgBAAqgB,8SAA8S,gEAAgE,2RAA2R,sBAAsB,mCAAmC,WAAW,09CAA09C,s/BAAs/B,spBAAspB,gHAAgH,iNAAiN,yBAAyB,qBAAqB,iBAAiB,s1BAAs1B,0aAA0a,wFAAwF,MAAM,yBAAyB,2PAA2P,wFAAwF,sBAAsB,qBAAqB,wPAAwP,wFAAwF,oBAAoB,0BAA0B,+PAA+P,wFAAwF,oBAAoB,yBAAyB,oQAAoQ,wFAAwF,oBAAoB,0BAA0B,8PAA8P,wFAAwF,oBAAoB,uBAAuB,kQAAkQ,wFAAwF,oBAAoB,yBAAyB,uPAAuP,wFAAwF,MAAM,yBAAyB,+OAA+O,wFAAwF,wsBAAwsB,wFAAwF,gXAAgX,2BAA2B,6eAA6e,2EAA2E,yT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSx7c;AAWI;AAC4B;AACM;AACE;AACA;AAE2B;AAEP;AAEM;AACN;AACX;AACjB;AACQ;AACG;AACK;AACN;AACG;AACJ;AACN;AACf;AAGM;AACkB;AAEmD;AAEtH;IAAA;IAQA,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAED,iEAAiE;AACjE;IAAA;IAQA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAQD;IACE,wBAAwB;IAExB,mCACU,WAAwB,EACxB,cAA8B,EAC9B,QAAyB,EACzB,IAAgB,EAChB,MAAiB,EACjB,WAAwB,EACxB,eAAgC,EAChC,YAA8B,EAC9B,eAAgC,EAChC,KAAqB,EACtB,iBAAoC;QAX7C,iBAgCC;QA/BS,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAwB7C,wBAAmB,GAAY,IAAI,CAAC;QAEpC,iBAAY,GAAQ,EAAE,CAAC;QAGvB,UAAK,GAAG,EAAE,CAAC;QAEX,+CAA+C;QACrC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAI5C,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,mBAAc,GAAQ,EAAE,CAAC;QACzB,gBAAW,GAAQ,EAAE,CAAC;QAYtB,WAAM,GAAQ,EAAE,CAAC;QAEjB,mBAAc,GAAQ,EAAE,CAAC;QAIzB,UAAK,GAAQ;YACX,SAAS,EAAE,IAAI;YACf,mBAAmB,EAAE,IAAI;YACzB,kBAAkB,EAAE,IAAI;SACzB,CAAC;QAGF,sBAAiB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxF,sBAAiB,GAAG,MAAM,CAAC;QAE3B,iBAAY,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAQnF,gBAAgB;QAChB,YAAO,GAAG;YACR,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SACd,CAAC;QAEF,oBAAe,GAAG,EAAE,CAAC;QAErB,qBAAgB,GAAa;YAC3B,QAAQ;YACR,SAAS;YACT,cAAc;YACd,SAAS;YACT,cAAc;YACd,cAAc;YACd,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,cAAc;YACd,QAAQ;SAIT,CAAC;QAmBF,SAAI,GAAG,IAAI,yDAAS,CAAC;YACnB,sBAAsB,EAAE,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;SACrE,CAAC,CAAC;QAqDI,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;YAC5D,gEAAgE;QAClE,CAAC,CAAC;QA2BF,kBAAa,GAAQ,EAAE,CAAC;QAYf,cAAS,GAAW,CAAC,CAAC;QACtB,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAqYjD,0BAAqB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAI5F,2BAAsB,GAAQ,EAAE,CAAC;QA0BjC,4BAAuB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAI9F,6BAAwB,GAAQ,EAAE,CAAC;QAuHnC,mBAAc,GAAQ,EAAE,CAAC;QAkCzB,uFAAuF;QAEvF,0BAAqB,GAAQ,EAAE,CAAC;QAChC,aAAQ,GAAmB,EAAE,CAAC;QAC9B,oBAAe,GAAa,EAAE,CAAC;QAC/B,mBAAc,GAAa,EAAE,CAAC;QAC9B,gBAAW,GAAG,IAAI,6CAAO,EAAQ,CAAC;QAGlC,cAAS,GAAG,IAAI,wEAAc,CAAiB,IAAI,EAAE,EAAE,CAAC,CAAC;QA6DzD,8FAA8F;QAC9F,4CAA4C;QAC5C,gBAAW,GAAG,IAAI,GAAG,EAAkC,CAAC;QAExD,kGAAkG;QAClG,4CAA4C;QAC5C,kBAAa,GAAG,IAAI,GAAG,EAAkC,CAAC;QAE1D,4CAA4C;QAC5C,4CAA4C;QAC5C,mBAAc,GAA4B,IAAI,CAAC;QAE/C,0BAA0B;QAC1B,4CAA4C;QAC5C,gBAAW,GAAG,EAAE,CAAC;QAWjB,kCAAkC;QAClC,uBAAkB,GAAG,IAAI,wEAAc,CAAmB,IAAI,CAAC,CAAC;QAEhE,YAAY;QACZ,cAAc;QACd,+BAA+B;QAC/B,gCAAgC;QAChC,KAAK;QAEL,kBAAkB;QAClB,cAAc;QACd,2BAA2B;QAC3B,+BAA+B;QAC/B,gCAAgC;QAChC,KAAK;QAEL,aAAQ,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAElD,gBAAW,GAAG,UAAC,IAAkB,IAAK,WAAI,CAAC,MAAM,EAAX,CAAW,CAAC;QAElD,iBAAY,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE3D,gBAAW,GAAG,UAAC,IAAkB,IAAqB,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC;QAEpE,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA2B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;QAE5E,iBAAY,GAAG,UAAC,CAAS,EAAE,SAA2B;YACpD,gBAAS,CAAC,IAAI,KAAK,EAAE;QAArB,CAAqB,CAAC;QAExB;;WAEG;QACH,gBAAW,GAAG,UAAC,IAAkB,EAAE,KAAa;YAC9C,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClD,IAAM,QAAQ,GACZ,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;gBAC7C,CAAC,CAAC,YAAY;gBACd,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAC7B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAChD,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC5D,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACxD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;aAC7B;YAED,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACvC,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;QAEF,eAAU,GAAG,IAAI,qDAAe,CAAiB,EAAE,CAAC,CAAC;QAj7BnD,IAAI,CAAC,aAAa,GAAG,IAAI,kEAAgB,CACvC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,CACjB,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,kEAAe,CACpC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,CAClB,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAqB,CACzC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAsFD,4CAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,uBAAuB;QACvB,iCAAiC;QACjC,sCAAsC;QACtC,iDAAiD;IACnD,CAAC;IAED,qDAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3C,6CAA6C;IAC/C,CAAC;IAMD,oDAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,iBAAiB,KAAK,MAAM,EAAE;YACrC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,OAAO,EAAE,CAAC;SAC/D;aAAM;YACL,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9D;IACH,CAAC;IAED,yDAAqB,GAArB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAC7D,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAI,IAAK,CAAC,CAAC,CAAC;QACxC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,6CAAS,GAAT,UAAU,OAAO;QAAjB,iBAYC;QAXC,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAC;YACvB,IAAI,CAAC,CAAC,QAAQ,KAAK,OAAO,EAAE;gBAC1B,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;gBAChE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,EAAE,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC;YAClC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAuB,GAAvB,UAAwB,SAAS;QAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,SAAS,CAAC,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YAC3D,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QAEH,iCAAiC;IACnC,CAAC;IAmDH,+CAAW,GAAX,UAAY,KAAgB;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;QAC/B,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QAED,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QAED,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QAED,IAAI,KAAK,CAAC,SAAS,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,kDAAc,GAAd;QAAA,iBA4IC;QA3IC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACxC,IAAM,iBAAiB,GAAG,CAAC,CAAC;QAC5B,sBAAsB;QACtB,gCAAgC;QAEhC,IAAI,OAAO,GAAyB;YAClC,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QAEA,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YAClD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YAClD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc,EAAE;YACnD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,OAAO,EAAE;YAC5C,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,eAAe,EAAE;YACpD,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,iBAAiB,KAAK,MAAM,EAAE;YACrC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;SAClC;QAEH,IAAI,iBAAiB,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACnD,OAAO,CAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC,KAAK;YAC7C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK;SACxC;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACxB,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM;YAC3C,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM;SAChD;QAED,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM;YAC3C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK;SACxC;QAEA,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,EAAE;YACvC,KAA+B,UAA2B,EAA3B,SAAI,CAAC,sBAAsB,EAA3B,cAA2B,EAA3B,IAA2B,EAAE;gBAAvD,IAAM,gBAAgB;gBACzB,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;aACtD;SACF;QACD,IAAI,IAAI,CAAC,wBAAwB,IAAI,IAAI,EAAE;YACzC,KAAiC,UAA6B,EAA7B,SAAI,CAAC,wBAAwB,EAA7B,cAA6B,EAA7B,IAA6B,EAAE;gBAA3D,IAAM,kBAAkB;gBAC3B,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;aAC1D;SACF;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SACnD;QAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,KAA4B,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;gBAA5C,IAAM,aAAa;gBACtB,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;aAC9D;SACA;QAED,IAAI,IAAI,CAAC,iBAAiB,KAAK,MAAM,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa;eAChH,IAAI,CAAC,uBAAuB,KAAK,aAAa,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc;eACjG,IAAI,CAAC,uBAAuB,KAAK,OAAO,IAAI,IAAI,CAAC,uBAAuB,KAAK,eAAe,EAAE;YAClG,OAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,SAAS,CACxE,UAAC,GAAQ;gBACT,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC;gBACzE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW;gBACvF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS;gBACjF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC;gBACrE,gFAAgF;gBAChF,8CAA8C;gBAChD,yEAAyE;gBACvE,yBAAyB;gBACzB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;gBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;gBAEnC,KAAI,CAAC,sBAAsB,GAAG,KAAI,CAAC,eAAe,CAAC;gBACnD,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,iBAAiB,CAAC;gBAEvD,IAAI,GAAG,IAAI,IAAI,EAAE;oBACf,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACjC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;oBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;oBACnC,yBAAyB;iBAC1B;qBAAM;oBACL,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,KAAuB,UAAkB,EAAlB,UAAI,CAAC,QAAQ,CAAC,IAAI,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;wBAAtC,IAAM,QAAQ;wBACjB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACjC;oBAED,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAU,GAAG,CAAC,CAAC;oBACzD,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;oBAClC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;oBAEnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACjC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;oBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;iBACpC;YACH,CAAC,EACD,eAAK;gBACH,+CAA+C;gBAC/C,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EACD;gBACE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAC3B,CAAC,CACF,CAAC;SACD;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;IAC3D,CAAC;IAED,qDAAiB,GAAjB,UAAkB,aAAqB;QACrC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;YACjB,eAAe,EAAE,EAAE;SACpB,CAAC;QAEF,wDAAwD;QACxD,+BAA+B;QAC/B,IAAI;QACJ,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YAClD,SAAS,CAAC,iBAAiB,GAAG,aAAa,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YAClD,SAAS,CAAC,iBAAiB,GAAG,aAAa,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc,EAAE;YACnD,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,OAAO,EAAE;YAC5C,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/C;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,qDAAiB,GAAjB,UAAkB,oBAA4B;QAC5C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;QACzC,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;YACjB,eAAe,EAAE,EAAE;SACpB,CAAC;QAEF,SAAS,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;QACnD,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACjC,SAAS,CAAC,aAAa,GAAG,EAAE,CAAC;QAC7B,4BAA4B;QAC5B,4BAA4B;QAC5B,wCAAwC;IAC1C,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAcC;QAbC,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CACtD,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAI;gBAC5B,yCAAyC;gBACzC,4CAA4C;YAC9C,CAAC,CAAC,CAAC;QACL,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2DAAuB,GAAvB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACzD,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,2DAAuB,GAAvB,UAAwB,OAAO;QAC7B,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YAC3D,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;SACF,CAAC,CAAC;QAEH,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC;YACzB,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC;YAC1B,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;SAC9B,CAAC;IACJ,CAAC;IAED,2DAAuB,GAAvB,UAAwB,OAAO;QAC7B,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mIAAiC,EAAE;YACpE,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;SACF,CAAC,CAAC;QAEH,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC;YACzB,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC;YAC1B,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;SAC9B,CAAC;IACJ,CAAC;IAED,0DAAsB,GAAtB,UAAuB,GAAG;QACxB,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,IAAI,GAAG,CAAC,oBAAoB,CAAC,IAAI,GAAG,EAAE;YACpC,GAAG,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;SACpC;aAAM;YACL,GAAG,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC;SACrC;QACD,YAAY,CAAC,IAAI,GAAG;YAClB,qCAAqC;YACrC,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;YACjC,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC;YACzB,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;YACjC,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC;YACrB,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;YACjC,gBAAgB,EAAE,GAAG,CAAC,kBAAkB,CAAC;YACzC,YAAY,EAAE,GAAG,CAAC,aAAa,CAAC;YAChC,kBAAkB,EAAE,GAAG,CAAC,oBAAoB,CAAC;YAC7C,WAAW,EAAE,GAAG,CAAC,cAAc,CAAC;YAChC,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;YACnC,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;YACnC,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC;YAC7B,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;YACjC,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;YACnC,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;SACpC,CAAC;QAEF,0EAA0E;QAC1E,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE,YAAY,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC3B,4GAA4G;QAE5G,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAS,GAAT,UAAU,OAAO;QAAjB,iBAsBC;QArBC,+EAA+E;QAC/E,OAAO,IAAI,CAAC,cAAc;aACvB,iBAAiB,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;aAC7C,SAAS,CACR,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,EAAE,CAAC;YAC7C,gCAAgC;YAChC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,4BAA4B;QAC9B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACN,CAAC;IAED,yDAAqB,GAArB,UAAsB,OAAO;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACzD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,OAAO,EAAE,OAAO;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;IAC7B,yCAAyC;IACzC,+DAA+D;IAC/D,cAAc;IACd,yBAAyB;IACzB,QAAQ;IACR,QAAQ;IACR,0EAA0E;IAC1E,kDAAkD;IAClD,2BAA2B;IAC3B,QAAQ;IACR,IAAI;IAEJ,6CAAS,GAAT,UAAU,GAAG;QACX,qBAAqB;QACrB,8BAA8B;QAC9B,oCAAoC;IACtC,CAAC;IAED,2CAA2C;IAC3C,yDAAyD;IACzD,wCAAwC;IACxC,4CAA4C;IAC5C,2BAA2B;IAC3B,IAAI;IAEJ,kDAAc,GAAd,UAAe,cAAsB;QACnC,oDAAoD;QACpD,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,wDAAwD;IACxD,oEAAoE;IACpE,0CAA0C;IAC1C,IAAI;IAEJ,kDAAc,GAAd;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qFAAmB,EAAE;YACtD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;aAC9B;SACF,CAAC,CAAC;IACP,CAAC;IAQD,+DAA2B,GAA3B,UAA4B,mBAAmB;QAC7C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,CAAC;IACtD,CAAC;IAED,6DAAyB,GAAzB,UAA0B,mBAAmB;QAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,uBAAuB,KAAK,EAAE,IAAI,mBAAmB,KAAK,IAAI,EAAE;gBACxG,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC;gBAC3C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC;gBACnD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;gBAChD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAO;YACN,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,kDAAc,GAAd;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,iEAA6B,GAA7B,UAA8B,qBAAqB;QACjD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IAED,yDAAqB,GAArB,UAAsB,qBAAqB;QACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,uBAAuB,KAAK,EAAE,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9G,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;gBAC/C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;gBAC/C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAO;YACN,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,yDAAqB,GAArB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YACvD,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAuB,GAAvB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAc,GAAd;QAAA,iBAOC;QANC,OAAO,IAAI,CAAC,WAAW;aACpB,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC;aACnD,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAU,GAAV,UAAW,GAAG;QAAd,iBAwBC;QAvBC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC;QAE5C,KAA4B,UAAU,EAAV,QAAG,CAAC,MAAM,EAAV,cAAU,EAAV,IAAU,EAAE;YAApC,IAAM,cAAc;YACtB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,cAAc,CAAC;SACzC;QAED,KAAuB,UAAoB,EAApB,SAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB,EAAE;YAAxC,IAAM,QAAQ;YACjB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;SACjD;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACrE,aAAG;YACD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC1D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iDAAa,GAAb;QAAA,iBAsCC;QArCC,IAAI,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAClC,IAAI,EAAE,gBAAgB,CAAC;QAEvB,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YAE/F,IAAI,MAAM,GAAG,OAAO,CAAC,+DAA+D,CAAC,CAAC;YACtF,IAAI,MAAM,EAAE;gBACZ,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;gBAEnC,KAA8B,UAAuB,EAAvB,SAAI,CAAC,SAAS,CAAC,QAAQ,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;oBAAlD,IAAM,eAAe;oBACxB,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACjE,uFAAuF;iBACxF;gBAED,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gBAE3D,KAA4B,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;oBAA5C,IAAM,aAAa;oBACtB,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;iBACrE;gBACD,sHAAsH;gBACtH,qEAAqE;gBACrE,iBAAiB;gBACjB,WAAW;gBACT,OAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAClG,aAAG;oBACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;oBAErB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;gBAC1D,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;gBACjE,CAAC,CACF,CAAC;gBACF,IAAI;aACP;SACF;QACC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC;IACzE,CAAC;IAID,0CAAM,GAAN;QAAA,iBA+BC;QA9BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,sCAAsC;QACtC,mDAAmD;QACnD,oCAAoC;QACpC,IAAI;QAEJ,KAA2B,UAAuB,EAAvB,SAAI,CAAC,SAAS,CAAC,QAAQ,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;YAAhD,IAAM,aAAa;YACnB,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACnF,cAAI;YACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAC9D,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAcD,gFAAgF;IAChF,iDAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,gDAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE;gBACpB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;gBACxB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;SACrE;IACH,CAAC;IAED,mDAAmD;IACnD,iDAAa,GAAb,UAAc,GAAoB;QAChC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAC9D;QACD,+CAA+C;QAC/C,qDAAqD;QACrD,IAAI;QACJ,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAChD,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;IAC7B,CAAC;IAED,mDAAe,GAAf;QAAA,iBAcC;QAbC,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;YACjC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,qBAAqB,CAAC;YAE3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC;YACrC,8BAA8B;YAC9B,qDAAqD;YACrD,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;YAEvD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,8BAA8B;YAC9B,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,2CAAI;aAAR;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAED,iDAAa,GAAb,UAAc,OAAO;QACnB,OAAO,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAoFD,4DAA4D;IAC5D,0DAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAuBC;QAtBC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,4BAA4B;QAC5B,IAAG,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACjD;QAED,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,4EAA4E;QAC5E,mCAAmC;QACnC,0BAA0B;QAC1B,qCAAqC;QACrC,qEAAqE;QACrE,qDAAqD;QACrD,iDAAiD;QACjD,uBAAuB;QACvB,2BAA2B;QAC3B,yCAAyC;QACzC,mBAAmB;QACnB,IAAI;QACJ,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,mDAAmD;IACnD,gEAA4B,GAA5B,UAA6B,IAAsB;QAAnD,iBAQC;QAPC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,eAAK;YACnC,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,uBAAuB;QAEvB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,2DAAuB,GAAvB,UAAwB,eAAe,EAAE,WAAW;QAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/F,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBACvC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;gBAClC,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChG,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gFAAgF;IAChF,2DAAuB,GAAvB,UAAwB,IAAsB;QAA9C,iBAyBC;;QAxBC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,MAAM,WAAI,WAAW,EAC/C,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,QAAQ,WAAI,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,8BAA8B;QAC9B,WAAW,CAAC,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAzC,CAAyC,CAAC,CAAC;QACtE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;QAElC,+DAA+D;QAC/D,qBAAqB;QACrB,qCAAqC;QAEnC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;QAEpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,uFAAuF;IACvF,+DAA2B,GAA3B,UAA4B,IAAsB;QAChD,uCAAuC;QACvC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAEpC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,yBAAyB;QACzB,oDAAoD;QACpD,qBAAqB;QACrB,qBAAqB;IACvB,CAAC;IAED,oEAAoE;IACpE,4DAAwB,GAAxB,UAAyB,IAAsB;QAC7C,IAAI,MAAM,GAA4B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,uBAAuB;QACvB,OAAO,MAAM,EAAE;YACb,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,yBAAyB;QACzB,uBAAuB;QACvB,qBAAqB;IACvB,CAAC;IAED,8DAA8D;IAC9D,0DAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAqBC;QApBC,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9D,6BAA6B;QAC7B,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,qBAAqB;QACrB,IAAI,YAAY,IAAI,CAAC,eAAe,EAAE;YACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,qDAAqD;QACrD,gCAAgC;QAChC,gDAAgD;QAEhD,6BAA6B;QAC7B,4BAA4B;QAC5B,yBAAyB;IAC3B,CAAC;IAED,mCAAmC;IACnC,iDAAa,GAAb,UAAc,IAAsB;QAClC,uCAAuC;QAEvC,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,YAAY,GAAG,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QACD,6BAA6B;QAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChE,2BAA2B;QAC3B,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClD,8DAA8D;YAC9D,oDAAoD;YACpD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,YAAY,EAAE;gBAC7C,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAjjCS;QAAT,4DAAM,EAAE;;mEAAmC;IACnB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;gEAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;2DAAC;IACb;QAApB,+DAAS,CAAC,0DAAQ,CAAC;wEAAQ,0DAAQ;4DAAM;IAqLjC;QAAR,2DAAK,EAAE;;iEAAoB;IACnB;QAAR,2DAAK,EAAE;;kEAAqB;IACpB;QAAR,2DAAK,EAAE;;mEAAsB;IACrB;QAAR,2DAAK,EAAE;;iEAAoB;IACnB;QAAR,2DAAK,EAAE;;iEAAsB;IACrB;QAAR,2DAAK,EAAE;;gEAAuB;IACtB;QAAR,2DAAK,EAAE;;sEAAyC;IACxC;QAAR,2DAAK,EAAE;;+DAAkB;IACjB;QAAR,2DAAK,EAAE;;+DAAkB;IACjB;QAAR,2DAAK,EAAE;;mEAAsB;IA/OnB,yBAAyB;QANrC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,uIAAiD;;SAElD,CAAC;+EAMuB,iEAAW;YACR,uEAAc;YACpB,yEAAe;YACnB,+DAAU;YACR,2DAAS;YACJ,kEAAW;YACP,0EAAe;YAClB,4EAAgB;YACb,2EAAe;YACzB,+DAAc;YACH,8EAAiB;OAdlC,yBAAyB,CAgmCrC;IAAD,gCAAC;CAAA;AAhmCqC;;;;;;;;;;;;AC5EtC,+DAA+D,mN;;;;;;;;;;;ACA/D,81FAA81F,sBAAsB,6BAA6B,2BAA2B,gMAAgM,wLAAwL,yNAAyN,wBAAwB,mKAAmK,uQAAuQ,iCAAiC,kBAAkB,gV;;;;;;;;;;;;;;;;;;;;;ACAx7H;AACQ;AACzB;AAC2B;AACL;AAO/D;IAEE,2CACkC,UAAe,EACvC,cAA8B,EAC9B,MAAc,EACd,QAAyB,EACzB,MAAiB;QAJO,eAAU,GAAV,UAAU,CAAK;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAI3B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC;QACrC,SAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;IALxB,CAAC;IAOJ,oDAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED,qEAAyB,GAAzB;QAAA,iBAgBC;QAfC,OAAO,IAAI,CAAC,cAAc,CAAC,kCAAkC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAChF,aAAG;YACH,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,KAAkB,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAAlC,IAAM,IAAI;gBACZ,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;aACzC;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAClC,gEAAgE;YAChE,mEAAmE;YACnE,iCAAiC;QACjC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;YAC1C,oLAA0D;;SAE3D,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;uFACA,8EAAc;YACtB,sDAAM;YACJ,gFAAe;YACjB,2DAAS;OAPhB,iCAAiC,CAuC7C;IAAD,wCAAC;CAAA;AAvC6C;;;;;;;;;;;;ACX9C,+DAA+D,mM;;;;;;;;;;;ACA/D,ujB;;;;;;;;;;;;;;;;;;;;;ACA0D;AACK;AACG;AACzB;AAC2B;AAOpE;IAEE,sCACkC,UAAe,EACvC,cAA8B,EAC9B,MAAc,EACd,QAAyB,EACzB,MAAiB;QAJO,eAAU,GAAV,UAAU,CAAK;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAG3B,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC;QAC1C,uBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC5D,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;QAClD,wBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAE9D,UAAK,GAAQ,EAAE,CAAC;IAPb,CAAC;IASJ,+CAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAClE,CAAC;IAGD,iEAA0B,GAA1B;QAAA,iBAcC;QAbC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAE1D,OAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YACtF,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAI,CAAC,mBAAmB,CAAC,CAAC;YAChE,KAAI,CAAC,KAAK,GAAI,GAAG,CAAC;YAClB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QAC/D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IApCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,kKAAoD;;SAErD,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;uFACA,8EAAc;YACtB,sDAAM;YACJ,gFAAe;YACjB,2DAAS;OAPhB,4BAA4B,CAqCxC;IAAD,mCAAC;CAAA;AArCwC;;;;;;;;;;;;ACXzC,8BAA8B,mBAAmB,mBAAmB,iBAAiB,6CAA6C,oBAAoB,OAAO,6CAA6C,+d;;;;;;;;;;;ACA1M,sHAAsH,sBAAsB,yXAAyX,kBAAkB,iRAAiR,gBAAgB,yTAAyT,sBAAsB,0RAA0R,sBAAsB,gSAAgS,sBAAsB,oyBAAoyB,2TAA2T,6KAA6K,uG;;;;;;;;;;;;;;;;;;;;;;ACA/7F;AACR;AACN;AACW;AACd;AACsB;AAS/D;IACA,gBAAgB;IAChB,oBAAoB;IAElB,yBAAoB,IAAgB,EACzB,GAAe,EACd,WAAwB,EACxB,MAAc,EACd,QAAyB;QAJjB,SAAI,GAAJ,IAAI,CAAY;QACzB,QAAG,GAAH,GAAG,CAAY;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QAErC,YAAO,GAAG,sCAAsC,CAAC;QAMnD,UAAK,GAAQ;YACX,eAAe,EAAE,IAAI;YACrB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SAEV;QAWD,yBAAoB,GAAG,EAAE,CAAC;IAzBiB,CAAC;IA2B1C,kCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,0DAA0D;QAC1D,sBAAsB;QACtB,gCAAgC;QAEhC,kEAAkE;QAClE,wBAAwB;QACxB,oCAAoC;QACpC,QAAQ;QAER,kEAAkE;QAClE,wBAAwB;QACxB,oCAAoC;QACpC,QAAQ;QAER,kEAAkE;QAClE,wBAAwB;QACxB,oCAAoC;QACpC,QAAQ;IACR,CAAC;IAEH,+BAA+B;IAC/B,+DAA+D;IAC/D,IAAI;IAEJ,wBAAwB;IACxB,+EAA+E;IAC/E,mEAAmE;IACnE,wBAAwB;IACxB,8BAA8B;IAC9B,QAAQ;IACR,IAAI;IAEJ,8BAA8B;IAC9B,oFAAoF;IACpF,uDAAuD;IACvD,IAAI;IAEJ,8BAA8B;IAC9B,oFAAoF;IACpF,uDAAuD;IACvD,IAAI;IAEJ,8BAA8B;IAC9B,oFAAoF;IACpF,uDAAuD;IACvD,IAAI;IAEJ,2CAAiB,GAAjB;QAAA,iBAMC;QALC,4EAA4E;QAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YACvD,mBAAmB;YACnB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAuB,GAAvB;QAAA,iBAOC;QANC,iFAAiF;QACjF,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,uFAAuF;QAEzF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAuB,GAAvB;QAAA,iBAKC;QAJC,+EAA+E;QAC/E,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAuB,GAAvB;QAAA,iBAMC;QALA,kFAAkF;QACjF,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,mBAAmB;YACnB,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAU,GAAV;QAAA,iBAsBC;QArBC,wCAAwC;QACxC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACpD,8CAA8C;QAC9C,4CAA4C;QAC5C,6CAA6C;QAE/C,yDAAyD;QACzD,0DAA0D;QAC1D,qEAAqE;QAEnE,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACjE,aAAG;YACD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA6B,KAAI,CAAC,KAAK,CAAC,KAAO,CAAC,CAAC;YACvE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CACF;IACH,CAAC;IAED,wCAAc,GAAd;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACpD,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAClE,mBAAmB;YACnB,gIAAgI;YAChI,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAvJU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,sGAAsC;;SAEvC,CAAC;+EAM0B,+DAAU;YACpB,uDAAU;YACD,iEAAW;YAChB,sDAAM;YACJ,yEAAe;OAR1B,eAAe,CA2J3B;IAAD,sBAAC;CAAA;AA3J2B;;;;;;;;;;;;ACd5B,iCAAiC,uBAAuB,uBAAuB,kBAAkB,KAAK,6BAA6B,kBAAkB,KAAK,6CAA6C,mf;;;;;;;;;;;ACAvM,iYAAiY,QAAQ,gWAAgW,sBAAsB,kF;;;;;;;;;;;;;;;;;;;;;ACA7sB;AACP;AAEG;AACS;AACX;AAO5C;IAOE,6BAAoB,WAAwB,EAAU,GAAe;QAAjD,gBAAW,GAAX,WAAW,CAAa;QAAU,QAAG,GAAH,GAAG,CAAY;QANrE,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,YAAO,GAAa,CAAC,yBAAyB,EAAE,0BAA0B,EAAE,mCAAmC,CAAC,CAAC;IAKxC,CAAC;IAG1E,sCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAExD,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aAC/C,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC,CAClC,CAAC;IACN,CAAC;IAED,6CAA6C;IACnC,qCAAO,GAAf,UAAgB,KAAa;QAC7B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA1C,CAA0C,CAAC,CAAC;QAC7F,4BAA4B;QAC5B,OAAO,YAAY,CAAC,CAAC,4EAA4E;IACnG,CAAC;IAED,qDAAuB,GAAvB;QACE,kFAAkF;QADpF,iBAOE;QAJC,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,mBAAmB;YACnB,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IApCS,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAQiC,iEAAW,EAAe,uDAAU;OAP1D,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;ACZhC,+DAA+D,uJ;;;;;;;;;;;ACA/D,0NAA0N,oBAAoB,gC;;;;;;;;;;;;;;;;;;;;;ACA5L;AACA;AACa;AACF;AACY;AAQzE;IAEE,+BACU,cAA8B,EAC9B,IAAgB,EAChB,eAAgC,EAChC,oBAA0C;QAH1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAoB,GAApB,oBAAoB,CAAsB;IACjD,CAAC;IAQJ,wCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,kDAAkB,GAAlB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAsB,GAAtB,UAAuB,QAAqB,EAAE,KAAkC;QAC9E,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,eAAe,CAAC;IACjD,CAAC;IA5BU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAI0B,uEAAc;YACxB,+DAAU;YACC,yEAAe;YACV,mFAAoB;OANzC,qBAAqB,CA8BjC;IAAD,4BAAC;CAAA;AA9BiC;;;;;;;;;;;;ACZlC,sCAAsC,oBAAoB,6BAA6B,KAAK,gCAAgC,kBAAkB,KAAK,6CAA6C,+b;;;;;;;;;;;ACAhM,yMAAyM,sBAAsB,gwBAAgwB,wCAAwC,sEAAsE,4uBAA4uB,sBAAsB,g2CAAg2C,wCAAwC,kEAAkE,2nB;;;;;;;;;;;;;;;;;;;;;;ACAvuG;AACK;AACd;AACsB;AAEjB;AACmC;AAOjF;IAKE,wBACU,WAAwB,EACxB,MAAc,EACd,QAAyB,EACzB,MAAiB,EAClB,EAAe;QAJd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAClB,OAAE,GAAF,EAAE,CAAa;QATxB,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAQ,EAAE,CAAC;QAUd,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC;YACxB,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACrC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;gBAChB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SACtC;IACH,CAAC;IAED,uDAA8B,GAA9B;QACE,IAAI,OAAO,GAAG,wRAE6B,CAAC;IAC9C,CAAC;IAED,8BAAK,GAAL;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CACrE,cAAI;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACxD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,4CAAmB,GAAnB;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;IA1DU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,mGAAqC;;SAEtC,CAAC;+EAOuB,iEAAW;YAChB,sDAAM;YACJ,yEAAe;YACjB,2DAAS;YACd,0DAAW;OAVb,cAAc,CA2D1B;IAAD,qBAAC;CAAA;AA3D0B;;;;;;;;;;;;ACb3B,+DAA+D,+K;;;;;;;;;;;ACA/D,ylBAAylB,oBAAoB,+H;;;;;;;;;;;;;;;;;;ACA3jB;AACL;AAO7C;IAKE;QAHF,UAAK,GAAQ,EAAE,CAAC;QAKd,+BAA0B,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC/C,0BAAqB,GAA2B;YAC9C;gBACE,IAAI,EAAE,kBAAkB;gBACxB,eAAe,EAAE;oBACf,EAAC,0BAA0B,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC;oBACvD,EAAC,0BAA0B,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACtD,EAAC,0BAA0B,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;oBACnD,EAAC,0BAA0B,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACtD,EAAC,0BAA0B,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACtD;aACF;SACF,CAAC;IAdc,CAAC;IAgBlB,0DAAuB,GAAvB,UAAwB,QAAQ;QAC7B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAGD,2CAAQ,GAAR;IACA,CAAC;IA5BU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8IAA+C;;SAEhD,CAAC;;OACW,wBAAwB,CA8BpC;IAAD,+BAAC;CAAA;AA9BoC;;;;;;;;;;;;ACRrC,+DAA+D,2L;;;;;;;;;;;ACA/D,kYAAkY,sBAAsB,u0CAAu0C,mBAAmB,89CAA89C,8IAA8I,sJ;;;;;;;;;;;;;;;;;;;;;ACAlxG;AAC1B;AACL;AACuB;AAC3B;AAOzC;IA4BE,qCACU,mBAAwC,EACxC,QAAyB,EACzB,MAAc;QAFd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QA7B1B,UAAK,GAAQ,EAAE,CAAC;QAMhB,+BAA0B,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7C,0BAAqB,GAA2B;YAC9C;gBACE,IAAI,EAAE,kBAAkB;gBACxB,eAAe,EAAE;oBACf,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC;oBAClC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;oBAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACjC;aACF;SACF,CAAC;IAW0B,CAAC;IAT5B,6DAAuB,GAAvB,UAAwB,mBAAmB;QAC1C,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAOD,8CAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAEH,yDAAmB,GAAnB;QAAA,iBAUC;QATC,OAAO,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAE3E,KAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC;YAChD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;YACxE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC7C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACA,CAAC;IACN,CAAC;IA/CY,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,0JAAmD;;SAEpD,CAAC;+EA8B+B,wFAAmB;YAC9B,gFAAe;YACjB,sDAAM;OA/Bb,2BAA2B,CAgDvC;IAAD,kCAAC;CAAA;AAhDuC;;;;;;;;;;;;ACXxC,+DAA+D,uL;;;;;;;;;;;ACA/D,yNAAyN,sBAAsB,s+CAAs+C,mBAAmB,m+C;;;;;;;;;;;;;;;;;;;;;;ACA9qD;AACN;AACwB;AACR;AAEvB;AACJ;AAOzC;IAEE,mCACkC,UAAe,EACvC,mBAAwC,EACxC,QAAyB,EACzB,MAAc;QAHU,eAAU,GAAV,UAAU,CAAK;QACvC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QAM1B,UAAK,GAAQ,EAAE,CAAC;QAEhB,+BAA0B,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7C,0BAAqB,GAA2B;YAC9C;gBACE,IAAI,EAAE,kBAAkB;gBACxB,eAAe,EAAE;oBACf,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC;oBAClC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;oBAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACjC;aACF;SACF,CAAC;QAQF,mBAAc,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IA3BtC,CAAC;IAqBL,2DAAuB,GAAvB,UAAwB,mBAAmB;QACzC,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAGD,uCAAuC;IACvC,+CAA+C;IAC/C,6DAA6D;IAC7D,iCAAiC;IACjC,yCAAyC;IACzC,mDAAmD;IACnD,+CAA+C;IAC/C,+DAA+D;IAC/D,2DAA2D;IAC3D,uDAAuD;IACvD,qCAAqC;IACrC,mEAAmE;IAEnE,YAAY;IACZ,0BAA0B;IAC1B,6BAA6B;IAC7B,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,oBAAoB;IACpB,4BAA4B;IAC5B,0BAA0B;IAC1B,wBAAwB;IACxB,eAAe;IACf,mCAAmC;IACnC,KAAK;IAEP,eAAe;IACf,2FAA2F;IAC3F,wBAAwB;IACxB,uEAAuE;IACvE,OAAO;IACP,eAAe;IACf,kCAAkC;IAClC,QAAQ;IACR,IAAI;IAEF,4CAAQ,GAAR;QACE,4DAA4D;QAC5D,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE3B,CAAC;IAGD,qDAAiB,GAAjB;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,YAA0B;YAE5G,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iEAA6B,GAA7B;QAAA,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAE/F,KAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC;YAClD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QACzD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAlGU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,oJAAiD;;SAElD,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;uFACK,wFAAmB;YAC9B,gFAAe;YACjB,sDAAM;OANb,yBAAyB,CAmGrC;IAAD,gCAAC;CAAA;AAnGqC;;;;;;;;;;;;ACbtC,+DAA+D,uJ;;;;;;;;;;;ACA/D,4PAA4P,yBAAyB,sPAAsP,cAAc,oZAAoZ,8P;;;;;;;;;;;;;;;;;;ACA33B;AACN;AAO5C;IAGE,+BAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QADnC,cAAS,GAAG,KAAK,CAAC;IACoB,CAAC;IAEvC,wCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,4CAAY,GAAZ,UAAa,YAAY;QAEvB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAG;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAjBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAIyB,uDAAU;OAHxB,qBAAqB,CAkBjC;IAAD,4BAAC;CAAA;AAlBiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AAEkB;AACJ;AACW;AACT;AACI;AACN;AACM;AACJ;AACF;AACA;AACQ;AACR;AACA;AACuB;AACvB;AACA;AACM;AACF;AACE;AAmD7D;IAAA;IAA6B,CAAC;IAAjB,cAAc;QA9C1B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,wEAAe;gBACf,oEAAa;gBACb,+EAAkB;gBAClB,sEAAc;gBACd,0EAAgB;gBAChB,oEAAa;gBACb,0EAAgB;gBAChB,sEAAc;gBACd,qEAAkB;gBAClB,qEAAa;gBACb,6EAAiB;gBACjB,qEAAa;gBACb,qEAAa;gBACb,4FAAwB;gBACxB,qEAAa;gBACb,qEAAa;gBACb,2EAAgB;gBAChB,yEAAe;gBACf,2EAAgB;aAEnB;YACD,OAAO,EAAE;gBACL,wEAAe;gBACf,oEAAa;gBACb,+EAAkB;gBAClB,sEAAc;gBACd,0EAAgB;gBAChB,oEAAa;gBACb,0EAAgB;gBAChB,sEAAc;gBACd,qEAAkB;gBAClB,qEAAa;gBACb,6EAAiB;gBACjB,qEAAa;gBACb,qEAAa;gBACb,4FAAwB;gBACxB,qEAAa;gBACb,qEAAa;gBACb,2EAAgB;gBAChB,yEAAe;gBACf,2EAAgB;aACnB;SACJ,CAAC;OAEW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACvE3B,+DAA+D,2J;;;;;;;;;;;ACA/D,uD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;ACPnC,+DAA+D,+H;;;;;;;;;;;ACA/D,4uBAA4uB,wDAAwD,iCAAiC,qnC;;;;;;;;;;;;;;;;;;;;;ACAnxB;AACA;AACT;AACc;AACQ;AAO/D;IAEE,sBAAoB,IAAgB,EAC3B,WAAwB,EACvB,MAAc,EACd,QAAyB;QAHf,SAAI,GAAJ,IAAI,CAAY;QAC3B,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;IAAI,CAAC;IAExC,+BAAQ,GAAR;IACA,CAAC;IAED,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAnBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,6FAAmC;;SAEpC,CAAC;+EAG0B,+DAAU;YACd,iEAAW;YACf,sDAAM;YACJ,yEAAe;OALxB,YAAY,CAoBxB;IAAD,mBAAC;CAAA;AApBwB;;;;;;;;;;;;ACXzB,sIAAsI,iCAAiC,GAAG,sBAAsB,iCAAiC,GAAG,YAAY,kBAAkB,aAAa,eAAe,iBAAiB,gCAAgC,yBAAyB,GAAG,iDAAiD,m1B;;;;;;;;;;;ACA5Z,iFAAiF,uCAAuC,gFAAgF,+EAA+E,2EAA2E,uFAAuF,2EAA2E,uEAAuE,kFAAkF,oBAAoB,2BAA2B,kBAAkB,gF;;;;;;;;;;;;;;;;;ACA5qB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAED,wCAAc,GAAd;QACE,OAAO,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IATU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,iHAAsC;;SAEvC,CAAC;;OACW,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;;;;;;;;;;;;ACP5B,qBAAqB,4BAA4B,mBAAmB,GAAG,uBAAuB,uBAAuB,GAAG,qBAAqB,uBAAuB,oBAAoB,mBAAmB,GAAG,gBAAgB,4BAA4B,wBAAwB,GAAG,YAAY,yBAAyB,4BAA4B,sCAAsC,KAAK,yBAAyB,yBAAyB,mBAAmB,6BAA6B,kBAAkB,yBAAyB,yBAAyB,qBAAqB,yBAAyB,iBAAiB,mBAAmB,gBAAgB,yBAAyB,iBAAiB,+BAA+B,KAAK,gCAAgC,oBAAoB,yBAAyB,gBAAgB,gBAAgB,wBAAwB,wBAAwB,0BAA0B,6DAA6D,KAAK,+BAA+B,0BAA0B,iBAAiB,KAAK,6CAA6C,uwE;;;;;;;;;;;ACA5kC,owBAAowB,4dAA4d,+VAA+V,+IAA+I,+HAA+H,sLAAsL,iHAAiH,oIAAoI,iCAAiC,gGAAgG,uFAAuF,iCAAiC,ggBAAggB,+EAA+E,sCAAsC,qbAAqb,4XAA4X,6FAA6F,0H;;;;;;;;;;;;;;;;;;;;;;;;ACA56H;AACd;AACR;AACT;AACyB;AACH;AACjB;AAC2C;AAOzF;IAGE,yBACU,IAAgB,EACjB,WAAwB,EACvB,MAAc,EACd,QAAyB,EACzB,MAAiB;QAJjB,SAAI,GAAJ,IAAI,CAAY;QACjB,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAPjB,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAQhD,CAAC;IAEJ,kCAAQ,GAAR,cAAY,CAAC;IAEb,yCAAe,GAAf;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,kCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,oBAAoB;IACpB,uHAAuH;IACvH,0CAA0C;IAC1C,aAAa;IACb,mBAAmB;IACnB,MAAM;IACN,IAAI;IAEJ,6CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAChD,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,KAAK,MAAM,EAAE;YACnD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,KAAK,OAAO,EAAE;YACpD,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,wCAAc,GAAd;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,KAAK,MAAM,EAAE;YACvD,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,oDAA0B,GAA1B,UAA2B,EAAE;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,EAAE;aACT;SACF,CAAC,CAAC;IACL,CAAC;IAED,8CAAoB,GAApB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4EAAc,EAAE;YACjD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAlES;QAAT,4DAAM,EAAE;;0DAA0C;IADxC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAKgB,+DAAU;YACJ,iEAAW;YACf,sDAAM;YACJ,yEAAe;YACjB,2DAAS;OARhB,eAAe,CAoE3B;IAAD,sBAAC;CAAA;AApE2B;;;;;;;;;;;;ACd5B,qBAAqB,4BAA4B,mBAAmB,GAAG,uBAAuB,uBAAuB,GAAG,iDAAiD,ue;;;;;;;;;;;ACAzK,gyB;;;;;;;;;;;;;;;;;ACAwE;AAOxE;IAEE;QADU,iBAAY,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAClC,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IARS;QAAT,4DAAM,EAAE;;8DAAyC;IADvC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,mIAA4C;;SAE7C,CAAC;;OACW,oBAAoB,CAWhC;IAAD,2BAAC;CAAA;AAXgC;;;;;;;;;;;;ACPjC,s8BAAs8B,qBAAqB,8SAA8S,qCAAqC,6TAA6T,qBAAqB,+SAA+S,0BAA0B,+KAA+K,YAAY,mDAAmD,yBAAyB,yEAAyE,aAAa,ygB;;;;;;;;;;;;;;;;;;ACAzuE;AACG;AAGhE,IAAM,YAAY,GAAG;IACnB;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;IACD;QACE,SAAS,EAAC,IAAI,IAAI,EAAE;QACpB,WAAW,EAAC,GAAG;QACf,KAAK,EAAC,KAAK;QACX,WAAW,EAAC,cAAc;QAC1B,SAAS,EAAC,KAAK;KAChB;CACF,CAAC;AAOF;IAaE;QAZA,qBAAgB,GAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAG3F,WAAM,GAAG,GAAG,CAAC;QACb,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,oBAAe,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC;IAMb,CAAC;IAEjB,yCAAY,GAAZ,UAAa,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,qCAAQ,GAAR,UAAS,SAAS,EAAE,QAAQ;QAE1B,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAS,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACxG,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,sCAAS,GAAT;QACE,KAAe,UAAY,EAAZ,6BAAY,EAAZ,0BAAY,EAAZ,IAAY,EAC3B;YADI,IAAI,GAAG;YAET,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;SAChC;IACH,CAAC;IA3BmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAM,yDAAO;oDAAC;IATtB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;SAE3C,CAAC;;OACW,kBAAkB,CAsC9B;IAAD,yBAAC;CAAA;AAtC8B;;;;;;;;;;;;AC3E/B,+DAA+D,2J;;;;;;;;;;;ACA/D,8C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,+DAA+D,2J;;;;;;;;;;;ACA/D,4kC;;;;;;;;;;;;;;;;;;ACAyD;AACb;AAQ5C;IAWE,gCAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QARnC,YAAO,GAAG;YACR,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,kBAAkB,EAAE,EAAE;SACvB,CAAC;IACqC,CAAC;IAExC,yCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAChC,UAAC,OAAO;YACN,KAAI,CAAC,OAAO,GAAG,OAAO;YACtB,wDAAwD;QAC1D,CAAC,CACA,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpF,sFAAsF;QACtF,mCAAmC;QACnC,mFAAmF;QACnF,yBAAyB;QACzB,2EAA2E;QAC3E,qEAAqE;QACrE,IAAI;IAGN,CAAC;IA7BQ;QAAR,2DAAK,EAAE;;uDAAK;IACJ;QAAR,2DAAK,EAAE;;+DAAa;IAFV,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;+EAYyB,uDAAU;OAXxB,sBAAsB,CAgClC;IAAD,6BAAC;CAAA;AAhCkC;;;;;;;;;;;;ACTnC,+DAA+D,2J;;;;;;;;;;;ACA/D,6KAA6K,yBAAyB,qBAAqB,iBAAiB,uhBAAuhB,gBAAgB,0MAA0M,gBAAgB,+CAA+C,aAAa,oBAAoB,oBAAoB,+CAA+C,4BAA4B,mkBAAmkB,8SAA8S,oBAAoB,oBAAoB,8CAA8C,uBAAuB,uNAAuN,oDAAoD,wOAAwO,oBAAoB,oBAAoB,0DAA0D,2BAA2B,4UAA4U,uBAAuB,yMAAyM,uBAAuB,k8CAAk8C,qBAAqB,mDAAmD,qBAAqB,eAAe,gKAAgK,oBAAoB,oBAAoB,wCAAwC,QAAQ,mDAAmD,aAAa,mFAAmF,gBAAgB,YAAY,wDAAwD,YAAY,wCAAwC,aAAa,qFAAqF,0BAA0B,0D;;;;;;;;;;;;;;;;;;;;;;ACAh7K;AAK/B;AAC8B;AAOjC;AACyC;AACF;AAO/D;IACE,+BACkC,UAAe,EACvC,YAA0B,EAC1B,WAAwB,EACxB,gBAAkC,EAClC,QAAyB;QAJD,eAAU,GAAV,UAAU,CAAK;QACvC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QAGnC,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAQ,EAAE,CAAC;QAKrB,UAAK,GAAQ,EAAE,CAAC;QAOhB,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QACtC,gBAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC1C,gBAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC1C,eAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAGxC,cAAS,GAAQ,EAAE,CAAC;QACpB,SAAI,GAAQ,EAAE,CAAC;QAYf,mCAAmC;QACnC,gCAAgC;QAChC,iCAAiC;QAEjC,mDAAmD;QACnD,mDAAmD;QACnD,MAAM;QACN,gCAAgC;QAChC,mBAAmB;QACnB,kDAAkD;QAClD,kDAAkD;QAClD,QAAQ;QACR,MAAM;QACN,KAAK;QAEL,iCAAiC;QACjC,+DAA+D;QAC/D,yCAAyC;QACzC,wCAAwC;QAExC,2CAA2C;QAC3C,0CAA0C;QAC1C,yDAAyD;QACzD,wEAAwE;QACxE,MAAM;QACN,gEAAgE;QAChE,IAAI;QAEJ,eAAU,GAAsB;YAC9B;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,MAAM;aACvB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,MAAM;aACvB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,MAAM;aACvB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,MAAM;aACvB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,OAAO;aACxB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,OAAO;aACxB;YACD;gBACE,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,OAAO;aACxB;SACF,CAAC;QAEF,gBAAW,GAAkB;YAC3B;gBACE,QAAQ,EAAE,CAAC;gBACX,UAAU,EAAE,QAAQ;aACrB;YACD;gBACE,QAAQ,EAAE,CAAC;gBACX,UAAU,EAAE,SAAS;aACtB;YACD;gBACE,QAAQ,EAAE,CAAC;gBACX,UAAU,EAAE,MAAM;aACnB;SACF,CAAC;IAhIC,CAAC;IAmIJ,wCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,wCAAwC;YACxC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,wBAAwB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;QAEH,UAAU,CAAC,UAAC,GAAG;YACb,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,gCAAgC;QAEhC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC3C,CAAC;IAED,iDAAiB,GAAjB,UAAkB,MAAM;QACtB,IAAM,UAAU,GAAc,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAErF,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,UAAU,CAAC,IAAI,CAAC,IAAI,0DAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACvD;aAAM;YACL,IAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,MAAM,CAAC,MAAM,CAAC,KAAK,EAA/B,CAA+B,CAAC,CAAC;YAC9E,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACxB;QAED,6CAA6C;QAC7C,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;IACpC,CAAC;IAED,yDAAyB,GAAzB,UAA0B,MAAsB;QAC9C,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QAElD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;QACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,qDAAqB,GAArB,UAAsB,MAAsB;QAE1C,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IAED,mDAAmB,GAAnB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,2BAA2B;IAC3B,0DAA0D;IAC1D,MAAM;IACN,gDAAgD;IAChD,sCAAsC;IACtC,uBAAuB;IACvB,4BAA4B;IAE5B,gDAAgD;IAChD,0CAA0C;IAC1C,sCAAsC;IACtC,0CAA0C;IAC1C,4CAA4C;IAC5C,wCAAwC;IACxC,iDAAiD;IACjD,4CAA4C;IAC5C,8BAA8B;IAC9B,oCAAoC;IACpC,2BAA2B;IAC3B,+BAA+B;IAC/B,IAAI;IAEJ,6CAAa,GAAb;QACE,sCAAsC;QACtC,wDAAwD;QACxD,kDAAkD;QAClD,mDAAmD;QACnD,uDAAuD;QACvD,6CAA6C;QAC7C,2CAA2C;QAC3C,8CAA8C;QAC9C,mDAAmD;QACnD,iDAAiD;QAVnD,iBAuDC;QA1CC,uCAAuC;QACvC,sCAAsC;QACtC,yDAAyD;QAEzD,IAAI;QACJ,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEtC,IAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,KAAoB,UAAc,EAAd,SAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAA/B,IAAM,KAAK;YACd,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;SACvC;QAED,kDAAkD;QAClD,kDAAkD;QAClD,mDAAmD;QACnD,uDAAuD;QACvD,6CAA6C;QAC7C,2CAA2C;QAC3C,8CAA8C;QAC9C,mDAAmD;QACnD,iDAAiD;QAEjD,OAAO,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAChF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,gBAAgB;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAEjC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;QAEnE,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAvVU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2HAA6C;;SAE9C,CAAC;QAGG,6GAAM,CAAC,iEAAe,CAAC;uFACF,mEAAY;YACb,0DAAW;YACN,2EAAgB;YACxB,yEAAe;OANxB,qBAAqB,CAwVjC;IAAD,4BAAC;CAAA;AAxViC;;;;;;;;;;;;ACtBlC,6HAA6H,yBAAyB,oeAAoe,qBAAqB,2dAA2d,qBAAqB,sTAAsT,wCAAwC,yTAAyT,0BAA0B,+TAA+T,4BAA4B,4TAA4T,0BAA0B,oBAAoB,4CAA4C,oKAAoK,YAAY,mDAAmD,yBAAyB,oGAAoG,aAAa,yFAAyF,yBAAyB,md;;;;;;;;;;;;;;;;;;;ACA57F;AACJ;AAEpB;AAG5C,IAAM,YAAY,GAAG;IACnB;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD;QACE,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,KAAK;KACjB;CACF,CAAC;AAOF;IA+BE,8BAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QA3BnC,kBAAa,GAAG,EAAE,CAAC;QACnB,sHAAsH;QACtH,qBAAgB,GAAa,CAAC,aAAa,EAAE,kBAAkB,EAAC,oBAAoB,EAAG,aAAa,EAAE,cAAc,EAAC,kBAAkB,EAAE,CAAC;QAG1I,WAAM,GAAG,CAAC,CAAC;QACX,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,cAAS,GAAG,KAAK,CAAC;QAElB,SAAI,GAAG,MAAM,CAAC;QACd,YAAO,GAAG;YACR,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,kBAAkB,EAAE,EAAE;SACvB,CAAC;QACF,gBAAW,GAAG,KAAK,CAAC;IAOmB,CAAC;IAExC,wCAAS,GAAT,UAAU,GAAG;QACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,uJAAuJ;QACtJ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAE;QACzD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,2CAAY,GAAZ,UAAa,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC3B,gDAAgD;QAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAGD,uCAAQ,GAAR,UAAS,SAAS,EAAE,QAAQ;QAE1B,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAS,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACxG,CAAC;IAED,wCAAS,GAAT,UAAU,SAAS,EAAE,QAAQ;QAA7B,iBA8BC;QA7BC,qCAAqC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,+CAA+C;SAC3E;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBACzD,QAAQ,GAAG,GAAG,CAAC;gBACf,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,QAAQ,CAAC,OAAO,CAAC,iBAAO;oBACtB,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;oBAChC,CAAC,EAAE,CAAC;gBACN,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACzE,kDAAkD;gBAClD,IAAI,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjC,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/E,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;oBAC3F,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;oBAC7E,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC;oBACxC,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAS,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAC5G,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;YAEH,CAAC,CAAC,CAAC;SACJ;IAGH,CAAC;IAED,uCAAQ,GAAR;QACE,kEAAkE;QAElE,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACvB,gEAAgE;YAChE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClC;QACD,SAAS;QACT,mEAAmE;QACnE,IAAI;IACN,CAAC;IAED,wCAAS,GAAT;QACE,KAAgB,UAAY,EAAZ,6BAAY,EAAZ,0BAAY,EAAZ,IAAY,EAAE;YAAzB,IAAI,GAAG;YACV,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;SAChC;QACD,mCAAmC;IACrC,CAAC;IAzGQ;QAAR,2DAAK,EAAE;;2DAAW;IAyBC;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;sDAAC;IA3BvB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;SAE7C,CAAC;+EAgCyB,uDAAU;OA/BxB,oBAAoB,CA6GhC;IAAD,2BAAC;CAAA;AA7GgC;;;;;;;;;;;;AC7EjC,+DAA+D,mK;;;;;;;;;;;ACA/D,ixBAAixB,cAAc,2XAA2X,gBAAgB,mZAAmZ,sBAAsB,mYAAmY,sBAAsB,mbAAmb,sBAAsB,8HAA8H,ghB;;;;;;;;;;;;;;;;;;;;;;;;ACAz/E;AAEE;AACQ;AAEX;AACb;AAC5C,mEAAmE;AAC2B;AAEjC;AAEE;AAO/D;IAiCE,kCACU,WAAwB,EACxB,UAAsB,EACtB,cAA8B,EAC9B,QAAyB,EACzB,MAAc,EACd,KAAqB,EACrB,eAAgC,EAChC,SAAiD,EACzB,UAAe;QARvC,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAwC;QACzB,eAAU,GAAV,UAAU,CAAK;QAtCjD,iBAAiB;QACjB,qBAAqB;QACrB,+BAA+B;QAC/B,qBAAqB;QACrB,KAAK;QAEL,UAAK,GAAQ,EAAE,CAAC;QAQhB,gBAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC1C,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QAI/B,sBAAiB,GAAQ,CAAC,CAAC;QAC3B,4BAAuB,GAAQ,CAAC,CAAC;QACjC,4BAAuB,GAAQ,CAAC,CAAE;QAClC,4BAAuB,GAAQ,CAAC,CAAC;IAkBpC,CAAC;IAEL,2CAAQ,GAAR;QACC,wBAAwB;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,8CAA8C;QAC9C,0CAA0C;QAC1C,sCAAsC;QACtC,4CAA4C;QAC5C,iDAAiD;QACjD,iDAAiD;QACjD,6CAA6C;QAC7C,8DAA8D;QAC9D,wEAAwE;QACxE,0EAA0E;QAC1E,8EAA8E;QAC9E,8DAA8D;QAC9D,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,gDAAa,GAAb;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,gGAAgG;QAElG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAc,GAAd;QAAA,iBAOC;QANC,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,OAAgB;YAE9F,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAElD,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAGH,2DAAwB,GAAxB,UAAyB,KAAK;QAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAEC,oDAAiB,GAAjB;QAAA,iBAQC;QAPC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA6D;IAC7D,iEAAiE;IACjE,8BAA8B;IAC9B,gDAAa,GAAb;QAAA,iBAoBC;QAnBC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,GAAC,GAAG,GAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;QAChC,kCAAkC;QAClC,+EAA+E;QAC/E,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QAChD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACrC,IAAG,IAAI,CAAC,uBAAuB,IAAI,IAAI,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,CAAC;SAC9D;aAAM;YACN,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,CAAC;SAC9D;QAEE,OAAO,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YACrD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAxJU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,oIAAgD;;SAEjD,CAAC;QA2CG,6GAAM,CAAC,iEAAe,CAAC;+EARH,wEAAW;YACZ,uDAAU;YACN,uEAAc;YACpB,gFAAe;YACjB,sDAAM;YACP,8DAAc;YACJ,yEAAe;YACrB,8DAAY;OAzCtB,wBAAwB,CA2JpC;IAAD,+BAAC;CAAA;AA3JoC;;;;;;;;;;;;ACnBrC,8CAA8C,6BAA6B,wBAAwB,oBAAoB,oCAAoC,GAAG,yBAAyB,oBAAoB,qCAAqC,GAAG,uDAAuD,6BAA6B,oBAAoB,iBAAiB,GAAG,iDAAiD,m1B;;;;;;;;;;;ACAha,ieAAie,wBAAwB,qGAAqG,kBAAkB,yRAAyR,sBAAsB,sIAAsI,kBAAkB,+RAA+R,sBAAsB,0IAA0I,qVAAqV,0EAA0E,qYAAqY,aAAa,kBAAkB,uBAAuB,sUAAsU,aAAa,kBAAkB,uBAAuB,iUAAiU,aAAa,kBAAkB,uBAAuB,oUAAoU,aAAa,kBAAkB,uBAAuB,qrCAAqrC,wBAAwB,8qB;;;;;;;;;;;;;;;;;;;;;;;ACA7kJ;AACjB;AACgB;AACQ;AACX;AACA;AAEC;AAa1D;IAyBE,0BACU,GAAe,EACf,WAAwB,EACzB,WAAwB,EACvB,QAAyB,EACzB,MAAc,EACd,KAAqB;QALrB,QAAG,GAAH,GAAG,CAAY;QACf,gBAAW,GAAX,WAAW,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QA9B/B,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAMtE,8BAA8B;QAC9B,8BAA8B;QAC9B,4BAA4B;QAC5B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,QAAQ,CAAC;QACzB,aAAQ,GAAG,KAAK,CAAC;QAUjB,kBAAa,GAAuB,EAAE,CAAC;IASnC,CAAC;IACL,mCAAQ,GAAR;QACC,8CAA8C;QAC9C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE1B,kCAAkC;QAClC,kCAAkC;IAGpC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,qCAAU,GAAV,UAAW,KAAa;QACtB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAE,IAAI,CAAC;SAE1B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IAEH,CAAC;IAED,kDAAuB,GAAvB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAuB,GAAvB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChC,CAAC;IAjDwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;uDAAC;IAxBtC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EA2Be,uDAAU;YACF,wEAAW;YACZ,iEAAW;YACb,gFAAe;YACjB,sDAAM;YACP,8DAAc;OA/BpB,gBAAgB,CA4E5B;IAAD,uBAAC;CAAA;AA5E4B;;;;;;;;;;;;ACpB7B,0iBAA0iB,oQ;;;;;;;;;;;;;;;;;;;;;;ACA/f;AACW;AACwD;AAC5D;AAE+E;AAGjI;IAEE,iBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,0BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,4CAA4C,CAAC;IAC/E,CAAC;IANU,OAAO;QADnB,gEAAU,EAAE;+EAGqB,+DAAU;OAF/B,OAAO,CAQnB;IAAD,cAAC;CAAA;AARmB;AAepB;IAsBE,+BAAoB,GAAe,EAAU,OAAgB;QAA7D,iBAWC;QAXmB,QAAG,GAAH,GAAG,CAAY;QAAU,YAAO,GAAP,OAAO,CAAS;QArB7D,SAAI,GAAG,EAAE,CAAG;QAkBZ,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAK9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aAC3C,IAAI,CACH,gEAAS,CAAC,IAAI,CAAC,EACf,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,gEAAS,CAAC,aAAG;YACX,OAAO,KAAI,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,CACH,CAAC;IACR,CAAC;IA9BD,0CAA0C;IAE1C,wCAAQ,GAAR;QAAA,iBAKC;QAJM,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,aAAG;YACrC,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,0CAAU,GAAV;QAEE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAG;QACjC,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAkBD,sCAAM,GAAN,UAAO,GAAW;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aAC7B,IAAI,CACH,0DAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,MAAM,CAAC,gBAAM;YACpC,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC;QACnE,CAAC,CAAC,EAFc,CAEd,CAAC,CACJ;IACH,CAAC;IA1CU,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,2GAA4C;SAC7C,CAAC;+EAuByB,uDAAU,EAAmB,OAAO;OAtBlD,qBAAqB,CA2CjC;IAAD,4BAAC;CAAA;AA3CiC;;;;;;;;;;;;ACvBlC,sCAAsC,oBAAoB,6BAA6B,KAAK,gCAAgC,kBAAkB,KAAK,6CAA6C,+c;;;;;;;;;;;ACAhM,gMAAgM,sBAAsB,s3CAAs3C,wCAAwC,sEAAsE,kdAAkd,wCAAwC,sEAAsE,6T;;;;;;;;;;;;;;;;;;;;;ACA3qE;AACxB;AACd;AACsB;AACjB;AAO9C;IAME,2BAAoB,WAAwB,EACjC,MAAc,EACd,QAAyB,EACzB,MAAiB;QAHR,gBAAW,GAAX,WAAW,CAAa;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QAR5B,UAAK,GAAQ,EAAE,CAAC;QAER,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC9C,SAAI,GAAG,IAAI,CAAC;IAMH,CAAC;IAER,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAaC;QAZC,2BAA2B;QAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,cAAI;YACF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACH,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IA/BM;QAAR,2DAAK,EAAE;;6DAAqB;IACnB;QAAT,4DAAM,EAAE;;6DAAqC;IAHjC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,4GAAwC;;SAEzC,CAAC;+EAOiC,iEAAW;YACzB,sDAAM;YACJ,yEAAe;YACjB,2DAAS;OATjB,iBAAiB,CAkC7B;IAAD,wBAAC;CAAA;AAlC6B;;;;;;;;;;;;ACX9B,4CAA4C,oBAAoB,4BAA4B,0BAA0B,mBAAmB,KAAK,yBAAyB,qBAAqB,KAAK,6CAA6C,+lB;;;;;;;;;;;ACA9O,qKAAqK,mNAAmN,mBAAmB,0HAA0H,oLAAoL,iBAAiB,8MAA8M,iBAAiB,yMAAyM,iBAAiB,oNAAoN,iPAAiP,qNAAqN,mBAAmB,0GAA0G,mHAAmH,iBAAiB,0HAA0H,+GAA+G,iBAAiB,uKAAuK,oKAAoK,kBAAkB,o6G;;;;;;;;;;;;;;;;;;;ACAnkF;AACc;AACI;AAOpE;IAIE,gCACU,aAA4B,EAC5B,QAAyB;QADzB,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAiB;QAKnC,cAAS,GAAG,KAAK,CAAC;QAGlB,uBAAkB,GAAG,KAAK,CAAC;QAG3B,eAAU,GAAG,KAAK,CAAC,CAAC,EAAE;QAGtB,kBAAa,GAAG,KAAK,CAAC;QAGtB,2BAAsB,GAAG,KAAK,CAAC;QAG/B,wBAAmB,GAAG,KAAK,CAAC;QAG5B,0BAAqB,GAAG,KAAK,CAAC;QAG9B,sBAAiB,GAAG,KAAK,CAAC;QAG1B,qBAAgB,GAAG,KAAK,CAAC;QAGzB,iCAA4B,GAAG,KAAK,CAAC;QAGrC,wBAAmB,GAAG,KAAK,CAAC;QAG5B,uBAAkB,GAAG,KAAK,CAAC;IArCxB,CAAC;IAuCJ,yCAAQ,GAAR;IACA,CAAC;IAGD,qDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;SACvC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,6CAAY,GAAZ;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SACzB;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,yDAAwB,GAAxB;QACE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC;SAC1C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5C,CAAC;IAED,sDAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,oDAAmB,GAAnB;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,qDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;SAClC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,wDAAuB,GAAvB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;SACxC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3C,CAAC;IAED,0DAAyB,GAAzB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,+DAA8B,GAA9B;QACE,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACrC,IAAI,CAAC,qBAAqB,GAAG,mBAAmB,CAAC;SAClD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAClD,CAAC;IAED,sDAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAxIU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,qIAA8C;;SAE/C,CAAC;+EAMyB,4EAAa;YAClB,gFAAe;OANxB,sBAAsB,CA0KlC;IAAD,6BAAC;CAAA;AA1KkC;;;;;;;;;;;;ACTnC,+DAA+D,uJ;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,mHAAwC;;SAEzC,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,+DAA+D,+J;;;;;;;;;;;ACA/D,+GAA+G,cAAc,mCAAmC,cAAc,yDAAyD,oFAAoF,qDAAqD,+EAA+E,sEAAsE,kC;;;;;;;;;;;;;;;;;ACAnd;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,4HAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,8BAA8B,qCAAqC,uBAAuB,kBAAkB,kBAAkB,GAAG,6CAA6C,2a;;;;;;;;;;;ACA9K,mEAAmE,cAAc,wDAAwD,yBAAyB,qBAAqB,iBAAiB,iQAAiQ,cAAc,kiQAAkiQ,kBAAkB,qQAAqQ,wOAAwO,8KAA8K,+5CAA+5C,oFAAoF,oL;;;;;;;;;;;;;;;;;;;;;;;;;ACAvmV;AAC0B;AAMjD;AAC4B;AACQ;AACb;AACgB;AACA;AACP;AAO3D;IA6ME,yBACU,WAAwB,EACxB,QAAyB,EACzB,IAAgB,EAChB,MAAiB,EACjB,aAA4B;QAJ5B,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,kBAAa,GAAb,aAAa,CAAe;QAjNtC,wBAAmB,GAAG,KAAK,CAAC;QAC5B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,yBAAoB,GAAG,KAAK,CAAC;QAC7B,yBAAoB,GAAG,KAAK,CAAC;QAC7B,6BAAwB,GAAG,KAAK,CAAC;QAGjC,uBAAkB,GAAG,KAAK,CAAC;QAG3B,uBAAkB,GAAG,KAAK,CAAC;QAG3B,qBAAgB,GAAG,KAAK,CAAC;QAGzB,4BAAuB,GAAG,KAAK,CAAC;QAEhC,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,6BAAwB,GAAG,KAAK,CAAC;QAGjC,mBAAc,GAAG,KAAK,CAAC;QAGvB,wBAAmB,GAAG,KAAK,CAAC;QAG5B,wBAAmB,GAAG,KAAK,CAAC;QAG5B,wBAAmB,GAAG,KAAK,CAAC;QAG5B,wBAAmB,GAAG,KAAK,CAAC;QAG5B,qBAAgB,GAAG,KAAK,CAAC;QAGzB,qBAAgB,GAAG,KAAK,CAAC;QAGzB,wBAAmB,GAAG,KAAK,CAAC;QAG5B,uBAAkB,GAAG,KAAK,CAAC;QAM3B,8BAAyB,GAAG,KAAK,CAAC;QAGlC,8BAAyB,GAAG,KAAK,CAAC;QAGlC,iBAAY,GAAG,KAAK,CAAC;QAMrB,eAAU,GAAG,KAAK,CAAC;QAGnB,kBAAa,GAAG,KAAK,CAAC;QAGtB,2BAAsB,GAAG,KAAK,CAAC;QAG/B,wBAAmB,GAAG,KAAK,CAAC;QAK5B,0BAAqB,GAAG,KAAK,CAAC;QAG9B,iCAA4B,GAAG,KAAK,CAAC;QAErC,cAAS,GAAG,KAAK,CAAC;QAuFlB,UAAK,GAAQ,EAAE,CAAC;QAOhB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAgS7B,iBAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAI1D,WAAM,GAAQ,EAAE,CAAC;IAnQd,CAAC;IA7HJ,qDAA2B,GAA3B;QACE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,yBAAyB,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC;QACjE,IAAI,CAAC,yBAAyB,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC;QACjE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;QAC3D,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IAED,+BAA+B;IAC/B,mCAAmC;IAEnC,IAAI;IAEJ,4DAAkC,GAAlC;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACrD,CAAC;IAED,wDAA8B,GAA9B;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACrD,CAAC;IAED,0DAAgC,GAAhC;QACE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QAErC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAC7D,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACrD,CAAC;IAoED,kCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,2CAAiB,GAAjB,UAAkB,YAAoB;QACpC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAED,2CAAiB,GAAjB;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC5C,aAAG;YACD,oBAAoB;YACpB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAmB,GAAnB,UAAoB,SAAS;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAiB,EAAE;YACpD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAmB,GAAnB,UAAoB,SAAS;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAiB,EAAE;YACpD,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;SAClC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,8CAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;SAClC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,mDAAyB,GAAzB;QACE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;SAC5C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAED,oDAA0B,GAA1B;QACE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;SAC9C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC1B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;SACnC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,8CAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;SAClC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,8BAA8B;IAC9B,6BAA6B;IAC7B,sCAAsC;IACtC,6CAA6C;IAC7C,MAAM;IACN,8CAA8C;IAC9C,IAAI;IAEJ,qDAA2B,GAA3B;QACE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC;SAChD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IAED,sDAA4B,GAA5B;QACE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,kBAAkB,GAAG,qBAAqB,CAAC;SACjD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IAED,wCAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,sBAAsB;IACtB,qBAAqB;IACrB,8BAA8B;IAC9B,6BAA6B;IAC7B,MAAM;IACN,sCAAsC;IACtC,IAAI;IAEJ,sCAAY,GAAZ;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SACzB;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,kDAAwB,GAAxB;QACE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC;SAC1C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5C,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IACD,sCAAsC;IACtC,sCAAsC;IACtC,8CAA8C;IAC9C,8DAA8D;IAC9D,MAAM;IACN,sDAAsD;IACtD,IAAI;IAEJ,iDAAuB,GAAvB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;SACxC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3C,CAAC;IAED,wDAA8B,GAA9B;QACE,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACrC,IAAI,CAAC,qBAAqB,GAAG,uBAAuB,CAAC;SACtD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAClD,CAAC;IAQD,YAAY;IAEZ,2CAAiB,GAAjB,UAAkB,QAAQ;QACxB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1C,CAAC;IAED,6CAAmB,GAAnB;QAAA,iBAqDC;QApDC,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,mDAAmD;QACnD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,2DAA2D;QAC3D,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,2CAA2C;QAC3C,KAA2B,UAAsB,EAAtB,SAAI,CAAC,iBAAiB,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;YAA9C,IAAM,YAAY;YACrB,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CACjD,cAAI;YACF,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,SAAS,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;YACjC,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;YAChE,4CAA4C;YAC5C,mDAAmD;YACnD,2DAA2D;YAC3D,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CACjB,qDAAqD,CACtD,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wCAAc,GAAd,UAAe,WAAW;QACxB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAE7B,wEAAwE;QAExE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IA9hBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,sGAAsC;;SAEvC,CAAC;+EA+MuB,iEAAW;YACd,yEAAe;YACnB,+DAAU;YACR,2DAAS;YACF,qEAAa;OAlN3B,eAAe,CA+hB3B;IAAD,sBAAC;CAAA;AA/hB2B;;;;;;;;;;;;ACpB5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,mJAAmJ,oMAAoM,ilB;;;;;;;;;;;;;;;;;ACArS;AAOlD;IAIE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IAED,8CAAkB,GAAlB,UAAmB,OAAO;QAExB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,UAAU;QACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,UAAU;QACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,8CAA8C,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC7F,CAAC;IArBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mHAAwC;;SAEzC,CAAC;;OACW,iBAAiB,CAuB7B;IAAD,wBAAC;CAAA;AAvB6B;;;;;;;;;;;;ACP9B,+BAA+B,mBAAmB,KAAK,0BAA0B,oBAAoB,gCAAgC,0BAA0B,mBAAmB,KAAK,yBAAyB,qBAAqB,KAAK,uBAAuB,4BAA4B,KAAK,6CAA6C,uwB;;;;;;;;;;;ACA/U,uJAAuJ,yBAAyB,qBAAqB,iBAAiB,2JAA2J,6TAA6T,sOAAsO,oMAAoM,6MAA6M,iQAAiQ,uLAAuL,mMAAmM,gMAAgM,yQAAyQ,+LAA+L,oLAAoL,0LAA0L,iQAAiQ,4MAA4M,iMAAiM,gNAAgN,gRAAgR,8X;;;;;;;;;;;;;;;;;;;ACAl9H;AACkB;AACJ;AAOhE;IAwCE,6BACU,QAAyB,EACzB,aAA4B;QAD5B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,kBAAa,GAAb,aAAa,CAAe;QAxCtC,aAAQ,GAAG,KAAK,CAAC;QAEjB,qBAAgB,GAAG,KAAK,CAAC;QAEzB,oBAAe,GAAG,KAAK,CAAC;QAExB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,mBAAc,GAAG,KAAK,CAAC;QAEvB,gBAAW,GAAG,KAAK,CAAC;QAEpB,oBAAe,GAAG,KAAK,CAAC;QAExB,mBAAc,GAAG,KAAK,CAAC;QAEvB,sBAAiB,GAAG,KAAK,CAAC;QAE1B,iBAAY,GAAG,KAAK,CAAC;QAErB,eAAU,GAAG,KAAK,CAAC;QAEnB,iBAAY,GAAG,KAAK,CAAC;QAErB,oBAAe,GAAG,KAAK,CAAC;QAExB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,gBAAW,GAAG,KAAK,CAAC;QAEpB,wBAAmB,GAAG,KAAK,CAAC;QAE5B,iBAAY,GAAG,KAAK,CAAC;QAErB,cAAS,GAAG,KAAK,CAAC;IAOd,CAAC;IAEL,sCAAQ,GAAR;IACA,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,gDAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,WAAW;SAC7B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,+CAAiB,GAAjB;QAEE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAErC,CAAC;IAED,kDAAoB,GAApB;QACC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;SAClC;QACD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC1B;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAa,GAAb;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACpB;QACD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC1B;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,iDAAmB,GAAnB;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IAED,4CAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,4CAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED,kDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,aAAa;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,2CAAa,GAAb;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SACxB;QACD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,mDAAqB,GAArB;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,4CAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAGD,uDAAyB,GAAzB;QAAA,iBAqCC;QApCC,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CACrD,cAAI;YACF,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YAE7D,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAC1E,CAAC,CACF,CAAC;IACJ,CAAC;IA5OU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,4HAA2C;;SAE5C,CAAC;+EA0CoB,gFAAe;YACV,4EAAa;OA1C3B,mBAAmB,CA8O/B;IAAD,0BAAC;CAAA;AA9O+B;;;;;;;;;;;;ACThC,+DAA+D,2K;;;;;;;;;;;ACA/D,6D;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,yIAA+C;;SAEhD,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;ACPpC,+DAA+D,2I;;;;;;;;;;;ACA/D,4GAA4G,oJAAoJ,mvEAAmvE,4IAA4I,8dAA8d,kBAAkB,kQAAkQ,kBAAkB,6kBAA6kB,cAAc,ygBAAygB,cAAc,4jBAA4jB,cAAc,iWAAiW,cAAc,ucAAuc,cAAc,2lBAA2lB,cAAc,2aAA2a,2GAA2G,+rHAA+rH,uBAAuB,wiBAAwiB,6BAA6B,mlBAAmlB,6BAA6B,slBAAslB,6BAA6B,kmBAAkmB,6BAA6B,+lBAA+lB,6BAA6B,y9I;;;;;;;;;;;;;;;;;;;;;;;;;ACAtrb;AAO7C;AACqB;AAMlB;AAE4B;AACQ;AACC;AACsB;AACnB;AAOnE;IA6HE,0BACU,MAAiB,EAClB,EAAe,EACf,WAAwB,EACvB,QAAyB,EACzB,eAAgC,EAChC,SAA4B,EAC5B,iBAAoC;QAE5C,gCAAgC;QAChC,+CAA+C;QAC/C,8CAA8C;QAC9C,4CAA4C;QAC5C,oDAAoD;QACpD,8CAA8C;QAbtC,WAAM,GAAN,MAAM,CAAW;QAClB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAnI9C,gCAAgC;QAChC,sBAAsB;QACtB,qBAAqB;QACrB,uBAAuB;QACvB,kBAAkB;QAClB,sBAAsB;QACtB,qBAAqB;QACrB,yBAAyB;QACzB,kBAAkB;QAClB,oBAAoB;QACpB,qBAAqB;QACrB,KAAK;QAEL,cAAc;QAEd,UAAK,GAAG;YACN,EAAE,EAAE,IAAI;YACR,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,oBAAoB;YACpB,iBAAiB;YACjB,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;SACf,CAAC;QAGF,iBAAY,GAAW,EAAE,CAAC;QAC1B,gBAAW,GAAW,EAAE,CAAC;QACzB,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,oBAAe,GAAW,EAAE,CAAC;QAC7B,YAAO,GAAW,EAAE,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;QACtB,eAAU,GAAW,EAAE,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC;QAKvB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,oBAAe,GAAQ,EAAE,CAAC;QAC1B,mBAAc,GAAQ,EAAE,CAAC;QACzB,kBAAa,GAAQ,EAAE,CAAC;QACxB,kBAAa,GAAQ,EAAE,CAAC;QACxB,kBAAa,GAAQ,EAAE,CAAC;QACxB,kBAAa,GAAQ,EAAE,CAAC;QACxB,kBAAa,GAAQ,EAAE,CAAC;QAoBxB,4BAAuB,GAAG,KAAK,CAAC;QAE9B,eAAU,GAAsB;YAC9B,MAAM,EAAE,IAAI;YACZ,EAAE,EAAE,IAAI;YACR,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,kBAAkB,EAAE,EAAE;YACtB,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,aAAa,EAAE,EAAE;YACjB,aAAa,EAAE,EAAE;YACjB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,cAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;QAyFhD,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACvC,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QAoSH,YAAO,GAAG,CAAC,CAAC;QA9WV,2BAA2B;QAC3B,oEAAoE;QACpE,kDAAkD;QAClD,2CAA2C;QAC3C,4CAA4C;QAC5C,0BAA0B;QAC1B,MAAM;QAEN,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC;YAC7B,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACrC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;gBAChB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC;YACF,sBAAsB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC3C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;aAClC,CAAC;YACF,0BAA0B,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC/C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,qBAAqB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1C,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,kBAAkB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACpC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,mBAAmB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,qBAAqB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1C,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;aACxB,CAAC;YACF,kBAAkB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,kBAAkB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,uBAAuB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACrC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,uBAAuB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAChD,uBAAuB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAChD,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACzD,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;SAClD,CAAC,CAAC;IACL,CAAC;IAMD,yDAA8B,GAA9B,UAA+B,KAAK;QAElC,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;YACzB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5C;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC5C,CAAC;IAED,oCAAS,GAAT;QACE,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEM,sCAAW,GAAlB,UAAmB,IAAS;QAC1B,6CAA6C;QAC7C,+BAA+B;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzB,8CAA8C;QAC9C,2DAA2D;QAC3D,kDAAkD;QAClD,oDAAoD;QACpD,8CAA8C;QAC9C,gCAAgC;QAC9B,uCAAuC;QACvC,iCAAiC;QACjC,6CAA6C;QAC7C,qDAAqD;QACrD,uCAAuC;QACvC,2CAA2C;QAC3C,qCAAqC;QACrC,oCAAoC;QACpC,0CAA0C;QAC1C,gDAAgD;QAChD,wDAAwD;QACxD,0CAA0C;QAC1C,8CAA8C;QAC9C,wCAAwC;IAC1C,CAAC;IASH,0DAA+B,GAA/B,UAAgC,KAAK;QACnC,sBAAsB;QACtB,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,uCAAuC;YACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,6CAA6C;IAC/C,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,sBAAsB;YACtB,6CAA6C;SAC9C;IACH,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,sBAAsB;YACtB,6CAA6C;SAC9C;IACD,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,sCAAsC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,sBAAsB;YACtB,6CAA6C;SAC9C;IACD,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,sCAAsC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,sBAAsB;YACtB,6CAA6C;SAC9C;IACD,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,KAAK;QAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,sCAAsC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,sBAAsB;YACtB,6CAA6C;SAC9C;IACD,CAAC;IAEC,8CAAmB,GAAnB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAE9E,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAA2B,UAAoB,EAApB,UAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB,EAAE;gBAA5C,IAAM,YAAY;gBACtB,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,YAAY,CAAC;gBAClD,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,WAAW,CAAC;gBAChD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,eAAe,CAAC;gBACnD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;aACnF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3F,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAA4B,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAA3C,IAAM,aAAa;gBACtB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3F,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAA4B,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAA3C,IAAM,aAAa;gBACtB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACrF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3F,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAA4B,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAA3C,IAAM,aAAa;gBACtB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACvF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3F,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAA4B,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAA3C,IAAM,aAAa;gBACtB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aAClG;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3F,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAA4B,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;gBAA3C,IAAM,aAAa;gBACtB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aAC1F;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,qCAAU,GAAV;QAAA,iBAsEC;QArEC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QAChF,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC;QACtF,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;QAC9F,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QAChF,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAC9E,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACxE,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QAChF,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAE9E,iCAAiC;QACjC,+CAA+C;QAC/C,yCAAyC;QACzC,6CAA6C;QAC7C,qDAAqD;QACrD,uCAAuC;QACvC,2CAA2C;QAC3C,qCAAqC;QAErC,KAAsB,UAAkB,EAAlB,SAAI,CAAC,IAAI,CAAC,QAAQ,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;YAArC,IAAM,OAAO;YAEhB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YAC9C,IACE,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;gBACnC,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAC5D;gBACA,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;aAChD;iBAAM,IACL,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;gBACnC,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,YAAY,EAC7D;gBACA,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;aAChD;iBAAM,IACL,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;gBACnC,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,YAAY,EAC7D;gBACA,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;aAChD;iBAAM,IACL,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;gBACnC,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,YAAY,EAC7D;gBACA,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;aAChD;SACF;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC/D,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;QAC7D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,4CAAiB,GAAxB;QACE,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;YACd,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SAUd,CAAC,CAAC;IACL,CAAC;IAID,uCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,wCAAa,GAAb;QACE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAEM,+CAAoB,GAA3B,UAA4B,KAAa;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,6CAAkB,GAAlB,UAAmB,IAAI;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YAC1D,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAxhBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,yGAAuC;;SAExC,CAAC;+EA+HkB,2DAAS;YACd,0DAAW;YACF,iEAAW;YACb,yEAAe;YACR,0EAAe;YACrB,+DAAiB;YACT,6EAAiB;OApInC,gBAAgB,CA8iB5B;IAAD,uBAAC;CAAA;AA9iB4B;AA8kB7B;IAAA;IA8BA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;ACvoBD,+DAA+D,mJ;;;;;;;;;;;ACA/D,oIAAoI,sBAAsB,4rBAA4rB,qHAAqH,0F;;;;;;;;;;;;;;;;;;;;;ACAj5B;AACH;AACQ;AACtB;AACW;AAOpD;IAEE,YAAY;IACZ,cAAc;IACd,KAAK;IAEL,8BAAoB,WAAwB,EAClC,MAAc,EACb,QAAyB,EACD,UAAe;QAH9B,gBAAW,GAAX,WAAW,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAiB;QACD,eAAU,GAAV,UAAU,CAAK;QARlD,UAAK,GAAQ,EAAE,CAAC;QAUb,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC;QACnD,UAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;IAFtC,CAAC;IAIR,uCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC;QACX,qCAAqC;IACvC,CAAC;IAGH,sDAAuB,GAAvB;QAAA,iBAUC;QATC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACvD,cAAI;YACF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACnD,oCAAoC;QACtC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;IACJ,CAAC;IAhCY,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,qHAA2C;;SAE5C,CAAC;QAUI,6GAAM,CAAC,iEAAe,CAAC;+EAHM,iEAAW;YAC1B,sDAAM;YACH,yEAAe;OARzB,oBAAoB,CAkChC;IAAD,2BAAC;CAAA;AAlCgC;;;;;;;;;;;;ACXjC,+DAA+D,2J;;;;;;;;;;;ACA/D,iKAAiK,sBAAsB,wdAAwd,eAAe,qaAAqa,wCAAwC,kEAAkE,0aAA0a,wCAAwC,kEAAkE,wQ;;;;;;;;;;;;;;;;;;;;;ACA/oD;AACK;AACE;AACM;AAER;AAOvD;IAIE,uBAAuB;IAEvB,yBAAyB;IACzB,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;IACf,wBAAwB;IACxB,mBAAmB;IACnB,kBAAkB;IAClB,sBAAsB;IACtB,4BAA4B;IAC5B,uBAAuB;IACvB,0BAA0B;IAC1B,uBAAuB;IACvB,gCAAgC;IAChC,4BAA4B;IAC5B,sBAAsB;IACtB,0BAA0B;IAC1B,4BAA4B;IAC5B,KAAK;IAGL,gCACU,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,KAAqB,EACrB,QAAyB;QAJzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAiB;QA/BnC,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAQ,EAAE,CAAC;IA+Bb,CAAC;IAEJ,yCAAQ,GAAR;QACA,qBAAqB;QACrB,wCAAwC;QACxC,gCAAgC;QAChC,mCAAmC;QACnC,oDAAoD;QACpD,4DAA4D;QAC5D,OAAO;IACP,CAAC;IAED,8CAAa,GAAb;QAAA,iBAmBD;QAlBG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAE7F,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAEnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACzB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACzD,cAAI;gBACF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/C,CAAC,CACF,CAAC;SACJ;aACK;YACH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC/C;IACH,CAAC;IAhEY,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,2HAA6C;;SAE9C,CAAC;+EA6BuB,iEAAW;YACX,iEAAW;YAChB,sDAAM;YACP,8DAAc;YACX,yEAAe;OAhCxB,sBAAsB,CA+ElC;IAAD,6BAAC;CAAA;AA/EkC;;;;;;;;;;;;ACZnC,oCAAoC,4BAA4B,KAAK,gDAAgD,uV;;;;;;;;;;;ACArH,w6JAAw6J,iCAAiC,kBAAkB,sqB;;;;;;;;;;;;;;;;;;;;;;ACAj6J;AAM/B;AACuC;AACoB;AAC5B;AACU;AAOpE;IACE,8BACU,SAA6C,EACrB,IAAI,EAC5B,cAA8B,EAC9B,MAAiB,EACjB,WAAwB,EACxB,QAAyB;QALzB,cAAS,GAAT,SAAS,CAAoC;QACrB,SAAI,GAAJ,IAAI;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QAGnC,cAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,WAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,iBAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QACtC,iBAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QACtC,uBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAClD,WAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1B,eAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAClC,WAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1B,YAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,aAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEjC,sBAAiB,GAAQ,EAAE,CAAC;IAbzB,CAAC;IAeJ,uCAAQ,GAAR;QACE,wCAAwC;QACzC,kCAAkC;QACjC,0BAA0B;QAC1B,0DAA0D;QAC1D,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAWC;QAVC,OAAO,IAAI,CAAC,cAAc;aACvB,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,aAAG;YACH,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,mCAAmC;YACnC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC/D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAS,GAAT;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,cAAI;YACF,qBAAqB;YACrB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,mCAAmC;YACnC,8BAA8B;YAC9B,0BAA0B;YAC1B,yBAAyB;YACzB,gDAAgD;YAChD,+CAA+C;YAC/C,IAAI,CAAC,QAAQ,GAAM,KAAI,CAAC,YAAY,SAAM,CAAC,CAAC,2CAA2C;YACvF,8BAA8B;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,oCAAoC;QACtC,CAAC,EACD,eAAK,IAAK,CAAC,CACZ,CAAC;IACJ,CAAC;IAED,uCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,6CAAc,GAAd;QAAA,iBAcC;QAbC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACpD,cAAI;YACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,+CAA+C;YAC/C,uEAAuE;YACvE,oCAAoC;YACpC,IAAI,CAAC,QAAQ,GAAM,KAAI,CAAC,YAAY,SAAM,CAAC,CAAC,2CAA2C;YACvF,8BAA8B;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,EACD,eAAK,IAAK,CAAC,CACZ,CAAC;IACJ,CAAC;IAED,yDAA0B,GAA1B,UAA2B,SAAS;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAqB,EAAE;YACxD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B;SACF,CAAC,CAAC;IACL,CAAC;IA/FU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,+HAA4C;;SAE7C,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;+EADL,8DAAY,UAEP,8EAAc;YACtB,2DAAS;YACJ,iEAAW;YACd,gFAAe;OAPxB,oBAAoB,CAgGhC;IAAD,2BAAC;CAAA;AAhGgC;;;;;;;;;;;;ACjBjC,4BAA4B,oBAAoB,GAAG,cAAc,iBAAiB,mBAAmB,qCAAqC,uBAAuB,GAAG,eAAe,iBAAiB,mBAAmB,qCAAqC,uBAAuB,GAAG,mBAAmB,oBAAoB,8BAA8B,0BAA0B,kBAAkB,GAAG,4BAA4B,4BAA4B,gCAAgC,qDAAqD,sDAAsD,wCAAwC,GAAG,eAAe,oBAAoB,gCAAgC,mBAAmB,uBAAuB,2BAA2B,eAAe,wBAAwB,mBAAmB,wBAAwB,mBAAmB,sBAAsB,wBAAwB,sBAAsB,uBAAuB,KAAK,qBAAqB,mBAAmB,KAAK,6CAA6C,2gE;;;;;;;;;;;ACA/hC,oEAAoE,yBAAyB,4HAA4H,eAAe,+BAA+B,q+BAAq+B,g3BAAg3B,6PAA6P,mBAAmB,KAAK,SAAS,kJAAkJ,UAAU,kBAAkB,SAAS,uEAAuE,y1CAAy1C,cAAc,ygBAAygB,0BAA0B,yQAAyQ,cAAc,2hBAA2hB,8BAA8B,ylBAAylB,gEAAgE,8RAA8R,uBAAuB,mCAAmC,WAAW,0SAA0S,uBAAuB,mCAAmC,WAAW,4WAA4W,qeAAqe,8RAA8R,gEAAgE,uQAAuQ,sBAAsB,mCAAmC,WAAW,iRAAiR,4EAA4E,yBAAyB,qBAAqB,iBAAiB,y5BAAy5B,4FAA4F,2CAA2C,wBAAwB,ucAAuc,4FAA4F,2CAA2C,sBAAsB,qcAAqc,4FAA4F,2CAA2C,wBAAwB,wcAAwc,4FAA4F,2CAA2C,wBAAwB,ycAAyc,4FAA4F,4EAA4E,wBAAwB,gEAAgE,8BAA8B,6PAA6P,yZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA11Y;AAC8D;AAMvG;AAC4B;AACM;AACE;AACb;AAG2B;AACtB;AACd;AACO;AACmB;AACc;AAC7B;AACM;AACK;AACE;AAGjE;IAAA;IAQA,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAED,iEAAiE;AACjE;IAAA;IAQA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAOD;IAgDE,yBACU,WAAwB,EACxB,cAA8B,EAC9B,QAAyB,EACzB,IAAgB,EAChB,MAAiB,EACjB,WAAwB,EACxB,MAAc,EACd,eAAgC,EAChC,YAA8B,EAC/B,EAAe;QAVxB,iBAoCC;QAnCS,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAkB;QAC/B,OAAE,GAAF,EAAE,CAAa;QAzDxB,cAAS,GAAG,EAAE,CAAC;QAEf,wBAAmB,GAAG,IAAI,CAAC;QAQ3B,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QAGnB,UAAK,GAAG,EAAE,CAAC;QAEX,oBAAoB;QACpB,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAQ,EAAE,CAAC;QACtB,aAAQ,GAAQ,EAAE,CAAC;QACnB,mBAAc,GAAQ,EAAE,CAAC;QACzB,gBAAW,GAAQ,EAAE,CAAC;QAEtB,qBAAgB,GAAa;YAC3B,SAAS;YACT,YAAY;YACZ,SAAS;YACT,cAAc;YACd,cAAc;YACd,SAAS;YACT,gBAAgB;SACjB,CAAC;QAEF,iBAAY,GAAG;YACb,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,EAAE;YAChB,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;SACf,CAAC;QAEJ,uBAAkB,GAAG,IAAI,2DAAW,CAAC,EAAE,CAAC,CAAC;QACzC,sBAAiB,GAAG,IAAI,2DAAW,CAAC,EAAE,CAAC,CAAC;QACxC,oBAAe,GAAG,IAAI,2DAAW,CAAC,EAAE,CAAC,CAAC;QACtC,sBAAiB,GAAG,IAAI,2DAAW,CAAC,EAAE,CAAC,CAAC;QA+JxC,0BAAqB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAK5F,2BAAsB,GAAQ,EAAE,CAAC;QA0BjC,4BAAuB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,0DAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAI9F,6BAAwB,GAAQ,EAAE,CAAC;QAuCnC,sBAAiB,GAAG,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,0DAAU,CAAC,QAAQ,CAAC,CAAC;QACtF,sBAAiB,GAAG,cAAc,CAAC;QACnC,uBAAkB,GAAG,KAAK,CAAC;QAM3B,SAAI,GAAG,IAAI,yDAAS,CAAC;YACnB,mBAAmB,EAAE,IAAI,2DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;SAClE,CAAC,CAAC;QAqGI,aAAQ,GAAG,UAAC,KAAa;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;YAC5D,gEAAgE;QAClE,CAAC;QAEM,cAAS,GAAG,UAAC,KAAa;YAC/B,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;YAC7D,gEAAgE;QAClE,CAAC,CAAC;QAaF,iBAAY,GAAQ,EAAE,CAAC;QAqBd,cAAS,GAAW,CAAC,CAAC;QACtB,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QA4OhD,uFAAuF;QAEvF,0BAAqB,GAAQ,EAAE,CAAC;QAChC,aAAQ,GAAmB,EAAE,CAAC;QAC9B,oBAAe,GAAa,EAAE,CAAC;QAC/B,mBAAc,GAAa,EAAE,CAAC;QAC9B,gBAAW,GAAG,IAAI,6CAAO,EAAQ,CAAC;QAGlC,cAAS,GAAG,IAAI,wEAAc,CAAiB,IAAI,EAAE,EAAE,CAAC,CAAC;QA6DzD,8FAA8F;QAC9F,4CAA4C;QAC5C,gBAAW,GAAG,IAAI,GAAG,EAAkC,CAAC;QAExD,kGAAkG;QAClG,4CAA4C;QAC5C,kBAAa,GAAG,IAAI,GAAG,EAAkC,CAAC;QAE1D,4CAA4C;QAC5C,4CAA4C;QAC5C,mBAAc,GAA4B,IAAI,CAAC;QAE/C,0BAA0B;QAC1B,4CAA4C;QAC5C,gBAAW,GAAG,EAAE,CAAC;QAWjB,kCAAkC;QAClC,uBAAkB,GAAG,IAAI,wEAAc,CAAmB,IAAI,CAAC,CAAC;QAEhE,YAAY;QACZ,cAAc;QACd,+BAA+B;QAC/B,gCAAgC;QAChC,KAAK;QAEL,kBAAkB;QAClB,cAAc;QACd,2BAA2B;QAC3B,+BAA+B;QAC/B,gCAAgC;QAChC,KAAK;QAEL,aAAQ,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAElD,gBAAW,GAAG,UAAC,IAAkB,IAAK,WAAI,CAAC,MAAM,EAAX,CAAW,CAAC;QAElD,iBAAY,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE3D,gBAAW,GAAG,UAAC,IAAkB,IAAqB,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC;QAEpE,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA2B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;QAE5E,iBAAY,GAAG,UAAC,CAAS,EAAE,SAA2B;YACpD,gBAAS,CAAC,IAAI,KAAK,EAAE;QAArB,CAAqB,CAAC;QAExB;;WAEG;QACH,gBAAW,GAAG,UAAC,IAAkB,EAAE,KAAa;YAC9C,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClD,IAAM,QAAQ,GACZ,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;gBAC7C,CAAC,CAAC,YAAY;gBACd,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAC7B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAChD,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC5D,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACxD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;aAC7B;YAED,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACvC,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;QAEF,eAAU,GAAG,IAAI,qDAAe,CAAiB,EAAE,CAAC,CAAC;QAvvBpD,IAAI,CAAC,aAAa,GAAG,IAAI,kEAAgB,CACvC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,CACjB,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,kEAAe,CACpC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,CAClB,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAqB,CACzC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACxD;IACH,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,cAAc,GAAG,UAAS,IAAI,EAAE,MAAM;YACxC,qBAAqB;YACrB,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAErC,IAAI,WAAW,CAAC,UAAU,KAAK,EAAE,EAAE;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC7E;iBAAM,IAAI,WAAW,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC1C,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5F;iBAAM,IAAI,WAAW,CAAC,MAAM,KAAK,EAAE,EAAE;gBACpC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aAChF;iBAAM,IAAI,WAAW,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC1C,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aACjF;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;QACF,OAAO,cAAc,CAAC;IACtB,CAAC;IAEH,kCAAQ,GAAR;QAAA,iBAwDO;QAvDL,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,oEAAY,CAAC,IAAI,CAAC,CAAC;aAC5D,SAAS,CACR,oBAAU;YACR,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC7D,IAAI,KAAI,CAAC,YAAY,CAAC,UAAU,KAAK,IAAI,EAAE;gBACzC,KAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;gBACxC,KAAI,CAAC,uBAAuB,GAAG,cAAc,CAAC;gBAC9C,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oEAAY,CAAC,IAAI,CAAC,CAAC;aAC7D,SAAS,CACR,sBAAY;YACV,KAAI,CAAC,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC;YAC9C,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC7D,IAAI,KAAI,CAAC,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC3C,KAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;gBACxC,KAAI,CAAC,uBAAuB,GAAG,cAAc,CAAC;gBAC9C,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,oEAAY,CAAC,IAAI,CAAC,CAAC;aACzD,SAAS,CACR,gBAAM;YACJ,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC7D,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,KAAK,IAAI,EAAE;gBACrC,KAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;gBACxC,KAAI,CAAC,uBAAuB,GAAG,cAAc,CAAC;gBAC9C,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oEAAY,CAAC,IAAI,CAAC,CAAC;aAC3D,SAAS,CACR,sBAAY;YACV,KAAI,CAAC,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC;YAC9C,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC7D,IAAI,KAAI,CAAC,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC3C,KAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;gBACxC,KAAI,CAAC,uBAAuB,GAAG,cAAc,CAAC;gBAC9C,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEP,kCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,gDAAsB,GAAtB,UAAuB,GAAG;QAExB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACvD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE;gBACN,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC;gBAC3B,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;gBACjC,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC;gBAC7B,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;gBACjC,kBAAkB,EAAE,GAAG,CAAC,oBAAoB,CAAC;gBAC7C,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACrB,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;gBACjC,YAAY,EAAE,GAAG,CAAC,aAAa,CAAC;gBAChC,mBAAmB,EAAE,GAAG,CAAC,qBAAqB,CAAC;gBAC/C,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACrB,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACrB,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC;gBACtB,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC;aACxB;SACF,CAAC,CAAC;IACL,CAAC;IAID,oDAA0B,GAA1B;QACE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,2LAC2F,CAAC;SAE9G;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;IACD,CAAC;IASD,qDAA2B,GAA3B,UAA4B,mBAAmB;QAC7C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,CAAC;IACtD,CAAC;IAED,mDAAyB,GAAzB,UAA0B,mBAAmB;QAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,uBAAuB,KAAK,EAAE,IAAI,mBAAmB,KAAK,IAAI,EAAE;gBACxG,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC;gBAC3C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC;gBACnD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;gBAChD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAO;YACN,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,wCAAc,GAAd;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,uDAA6B,GAA7B,UAA8B,qBAAqB;QACjD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IAED,+CAAqB,GAArB,UAAsB,qBAAqB;QACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,uBAAuB,KAAK,EAAE,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9G,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;gBAC/C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;gBAC/C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAO;YACN,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,+CAAqB,GAArB;QAAA,iBAIC;QAHC,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YACvD,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAOD,2CAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,CAAC;IAMD,0CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,iBAAiB,KAAK,cAAc,EAAE;YAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,OAAO,EAAE,CAAC;SAC5D;aAAM;YACL,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC;SAC3D;IACH,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAiB,GAAjB,UAAkB,aAAqB;QACrC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;SAClB,CAAC;QACF,IAAG,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YACjD,SAAS,CAAC,iBAAiB,GAAG,aAAa,CAAC;SAC7C;QACD,IAAG,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YACjD,SAAS,CAAC,iBAAiB,GAAG,aAAa,CAAC;SAC7C;QACD,IAAG,IAAI,CAAC,uBAAuB,KAAK,cAAc,EAAE;YAClD,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;SACzC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAiB,GAAjB,UAAkB,oBAA4B;QAC5C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;QACzC,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,SAAS,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;QACnD,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACjC,SAAS,CAAC,aAAa,GAAG,EAAE,CAAC;QAC7B,4BAA4B;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,4BAA4B;QAC5B,wCAAwC;IAC1C,CAAC;IAED,2CAAiB,GAAjB,UAAkB,oBAA4B;QAC5C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;QACzC,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACjC,SAAS,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;QACnD,SAAS,CAAC,aAAa,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,4BAA4B;QAC5B,4BAA4B;QAC5B,wCAAwC;IAC1C,CAAC;IAED,4CAAkB,GAAlB,UAAmB,qBAA6B;QAC9C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;QAC1C,IAAI,SAAS,GAAiB;YAC5B,iBAAiB,EAAE,EAAE;YACrB,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACjC,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACjC,SAAS,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAEhD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,4BAA4B;QAC5B,4BAA4B;QAC5B,wCAAwC;IAC1C,CAAC;IAED,wCAAc,GAAd,UAAe,cAAc;QAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,4BAA4B;QAC5B,4BAA4B;IAC9B,CAAC;IAaD,mCAAS,GAAT,UAAU,GAAG;QACX,oBAAoB;QACpB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAUD,2CAAiB,GAAjB;QAAA,iBAYC;QAXC,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CACtD,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAI;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAaD,qCAAW,GAAX,UAAY,KAAgB;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;QAC/B,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QACD,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QACD,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QACD,IAAI,KAAK,CAAC,SAAS,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;SAClC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,gDAAsB,GAAtB;QACE,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACrF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACb;QACD,2HAA2H;QAC3H,4BAA4B;QAC5B,8DAA8D;QAC9D,iBAAiB;QACjB,IAAI;QACJ,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;YAC9E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;SAC1D;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;YAC/E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;SAC1D;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;YACxE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;SAC1D;QACD,mDAAmD;QACnD,2BAA2B;QAC3B,IAAI;IACN,CAAC;IAED,wCAAc,GAAd;QAAA,iBAqJC;QApJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,0BAA0B;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACxC,IAAM,iBAAiB,GAAG,CAAC,CAAC;QAE5B,IAAI,OAAO,GAAyB;YAClC,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QAEC,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YACrD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,EAAE,EAAE;YACzC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC7D;QACD,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,EAAE;YAChD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAChD;QACH,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,EAAE,EAAE;YACzC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC7D;QACC,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc,EAAE;YACnD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC5C;QACA,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,KAAK,EAAE,EAAE;YAC1C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACvD;QACC,IAAI,IAAI,CAAC,uBAAuB,KAAK,OAAO,EAAE;YAC5C,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1C;QACC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,EAAE,EAAE;YACvC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACjD;QACC,IAAI,IAAI,CAAC,uBAAuB,KAAK,cAAc,EAAE;YACnD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC1C;QAED,IAAI,iBAAiB,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACnD,OAAO,CAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC,IAAI;YAC5C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK;SACxC;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACxB,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM;YAC/C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK;SACxC;QAED,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM;YAC/C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK;SACxC;QACD,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QAEnC,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,EAAE;YACvC,KAA+B,UAA2B,EAA3B,SAAI,CAAC,sBAAsB,EAA3B,cAA2B,EAA3B,IAA2B,EAAE;gBAAvD,IAAM,gBAAgB;gBACzB,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;aACtD;SACF;QACD,IAAI,IAAI,CAAC,wBAAwB,IAAI,IAAI,EAAE;YACzC,KAAiC,UAA6B,EAA7B,SAAI,CAAC,wBAAwB,EAA7B,cAA6B,EAA7B,IAA6B,EAAE;gBAA3D,IAAM,kBAAkB;gBAC3B,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;aAC1D;SACF;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SACnD;QAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,KAA4B,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;gBAA5C,IAAM,aAAa;gBACtB,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;aAC9D;SACA;QAED,mDAAmD;QACnD,mCAAmC;QACnC,WAAW;QACX,iBAAiB;QACjB,IAAI;QACJ,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,gEAAgE;QAChE,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAClG,UAAC,GAAQ;YACP,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC;YACzE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW;YACvF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS;YACjF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC;YAEvE,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;YACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,KAAI,CAAC,sBAAsB,GAAG,KAAI,CAAC,eAAe,CAAC;YACnD,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,iBAAiB,CAAC;YAEvD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACjB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;gBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;aACpC;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACpB,KAAuB,UAAkB,EAAlB,UAAI,CAAC,QAAQ,CAAC,IAAI,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;oBAAtC,IAAM,QAAQ;oBACjB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjC;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,wBAAwB;gBACxB,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBAElC,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAU,GAAG,CAAC,CAAC;gBACzD,6CAA6C;gBAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBAClC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,EAAE,CAAC;gBAEvD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;gBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;aACpC;QACH,CAAC,EACD,eAAK;YACH,+CAA+C;YAC/C,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,2BAA2B;QAC7B,CAAC,EACD;YACE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAGD,gCAAM,GAAN;QAAA,iBA0BC;QAzBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QAEnC,KAAsB,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAA7B,IAAM,OAAO;YAChB,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACnF,cAAI;YACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAC9D,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAeA,gFAAgF;IAChF,uCAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,sCAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE;gBACpB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;gBACxB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;SACrE;IACH,CAAC;IAED,mDAAmD;IACnD,uCAAa,GAAb,UAAc,GAAoB;QAChC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAC9D;QACD,+CAA+C;QAC/C,qDAAqD;QACrD,IAAI;QACJ,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAChD,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;IAC7B,CAAC;IAED,yCAAe,GAAf;QAAA,iBAcC;QAbC,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;YACjC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,qBAAqB,CAAC;YAE3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC;YACrC,8BAA8B;YAC9B,qDAAqD;YACrD,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;YAEvD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,8BAA8B;YAC9B,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,iCAAI;aAAR;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAED,uCAAa,GAAb,UAAc,OAAO;QACnB,OAAO,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAoFD,4DAA4D;IAC5D,gDAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAuBC;QAtBC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,4BAA4B;QAC5B,IAAG,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACjD;QAED,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,4EAA4E;QAC5E,mCAAmC;QACnC,0BAA0B;QAC1B,qCAAqC;QACrC,qEAAqE;QACrE,qDAAqD;QACrD,iDAAiD;QACjD,uBAAuB;QACvB,2BAA2B;QAC3B,yCAAyC;QACzC,mBAAmB;QACnB,IAAI;QACJ,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,mDAAmD;IACnD,sDAA4B,GAA5B,UAA6B,IAAsB;QAAnD,iBAQC;QAPC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,eAAK;YACnC,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,uBAAuB;QAEvB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,iDAAuB,GAAvB,UAAwB,eAAe,EAAE,WAAW;QAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/F,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBACvC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;gBAClC,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChG,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAC9B;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gFAAgF;IAChF,iDAAuB,GAAvB,UAAwB,IAAsB;QAA9C,iBAyBC;;QAxBC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,MAAM,WAAI,WAAW,EAC/C,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,QAAQ,WAAI,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,8BAA8B;QAC9B,WAAW,CAAC,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAzC,CAAyC,CAAC,CAAC;QACtE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;QAElC,+DAA+D;QAC/D,qBAAqB;QACrB,qCAAqC;QAEnC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;QAEpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,uFAAuF;IACvF,qDAA2B,GAA3B,UAA4B,IAAsB;QAChD,uCAAuC;QACvC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAEpC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,yBAAyB;QACzB,oDAAoD;QACpD,qBAAqB;QACrB,qBAAqB;IACvB,CAAC;IAED,oEAAoE;IACpE,kDAAwB,GAAxB,UAAyB,IAAsB;QAC7C,IAAI,MAAM,GAA4B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,uBAAuB;QACvB,OAAO,MAAM,EAAE;YACb,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,yBAAyB;QACzB,uBAAuB;QACvB,qBAAqB;IACvB,CAAC;IAED,8DAA8D;IAC9D,gDAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAqBC;QApBC,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9D,6BAA6B;QAC7B,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,qBAAqB;QACrB,IAAI,YAAY,IAAI,CAAC,eAAe,EAAE;YACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,qDAAqD;QACrD,gCAAgC;QAChC,gDAAgD;QAEhD,6BAA6B;QAC7B,4BAA4B;QAC5B,yBAAyB;IAC3B,CAAC;IAED,mCAAmC;IACnC,uCAAa,GAAb,UAAc,IAAsB;QAClC,uCAAuC;QAEvC,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,YAAY,GAAG,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QACD,6BAA6B;QAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChE,2BAA2B;QAC3B,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClD,8DAA8D;YAC9D,oDAAoD;YACpD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,YAAY,EAAE;gBAC7C,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAx8BuB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;sDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;iDAAC;IAkazB;QAAR,2DAAK,EAAE;;uDAAoB;IACnB;QAAR,2DAAK,EAAE;;wDAAqB;IACpB;QAAR,2DAAK,EAAE;;yDAAsB;IACrB;QAAR,2DAAK,EAAE;;uDAAoB;IACnB;QAAR,2DAAK,EAAE;;uDAAsB;IACrB;QAAR,2DAAK,EAAE;;sDAAuB;IACtB;QAAR,2DAAK,EAAE;;4DAAyC;IACxC;QAAR,2DAAK,EAAE;;qDAAkB;IACjB;QAAR,2DAAK,EAAE;;qDAAkB;IACjB;QAAR,2DAAK,EAAE;;yDAAsB;IArbnB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,sGAAsC;;SAEvC,CAAC;+EAkDuB,iEAAW;YACR,uEAAc;YACpB,yEAAe;YACnB,+DAAU;YACR,2DAAS;YACJ,iEAAW;YAChB,sDAAM;YACG,0EAAe;YAClB,4EAAgB;YAC3B,2DAAW;OA1Db,eAAe,CAk9B3B;IAAD,sBAAC;CAAA;AAl9B2B;;;;;;;;;;;;ACpD5B,+DAA+D,2J;;;;;;;;;;;ACA/D,gPAAgP,eAAe,KAAK,WAAW,oEAAoE,0MAA0M,gEAAgE,8CAA8C,eAAe,+aAA+a,WAAW,mFAAmF,2VAA2V,8MAA8M,gEAAgE,oPAAoP,WAAW,wJ;;;;;;;;;;;;;;;;;;;;;;;;ACAv9D;AACN;AACE;AAC2B;AAC1C;AAErC;;GAEG;AACH;IAAA;IAGA,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAED,iEAAiE;AACjE;IAAA;IAIA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAED;;GAEG;AACH,IAAM,SAAS,GAAG;IAChB,OAAO,EAAE;QACP,+BAA+B,EAAG,IAAI;QACtC,4CAA4C,EAAG;YAC7C,0BAA0B,EAAE,IAAI;YAChC,wBAAwB,EAAE,IAAI;YAC9B,qBAAqB,EAAG,IAAI;YAC5B,6BAA6B,EAAG,IAAI;YACpC,sCAAsC,EAAG,IAAI;YAC7C,yBAAyB,EAAG,IAAI;YAChC,yBAAyB,EAAG,IAAI;SACjC;KACF;IACD,kCAAkC,EAAG;QACnC,aAAa,EAAE,IAAI;KACpB;IACD,6BAA6B,EAAG;QAC9B,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;KACZ;IACD,yBAAyB,EAAG;QAC1B,aAAa,EAAE,IAAI;KACpB;IACD,2BAA2B,EAAG;QAC5B,mCAAmC,EAAE,IAAI;KAC1C;CAgBF,CAAC;AAEF;;;;GAIG;AAEH;IAKE;QAJA,eAAU,GAAG,IAAI,oDAAe,CAAiB,EAAE,CAAC,CAAC;QAKnD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAJD,sBAAI,mCAAI;aAAR,cAA6B,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAM5D,sCAAU,GAAV;QACE,4FAA4F;QAC5F,6BAA6B;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAE9C,qBAAqB;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,yCAAa,GAAb,UAAc,GAAyB,EAAE,KAAa;QAAtD,iBAgBC;QAfC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAiB,UAAC,WAAW,EAAE,GAAG;YAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,IAAM,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;YAChC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAEhB,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC7B,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;iBACtD;qBAAM;oBACL,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACnB;aACF;YAED,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,gCAAgC;IAChC,sCAAU,GAAV,UAAW,MAAoB,EAAE,IAAY;QAC3C,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAiB,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAED,sCAAU,GAAV,UAAW,IAAkB,EAAE,IAAY;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAnDU,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAoD7B;IAAD,wBAAC;CAAA;AApD6B;AA4D9B;IAuBE,+BAAoB,QAA2B;QAA/C,iBASC;QATmB,aAAQ,GAAR,QAAQ,CAAmB;QArB/C,8FAA8F;QAC9F,gBAAW,GAAG,IAAI,GAAG,EAAkC,CAAC;QAExD,kGAAkG;QAClG,kBAAa,GAAG,IAAI,GAAG,EAAkC,CAAC;QAE1D,4CAA4C;QAC5C,mBAAc,GAA4B,IAAI,CAAC;QAE/C,0BAA0B;QAC1B,gBAAW,GAAG,EAAE,CAAC;QAQjB,kCAAkC;QAClC,uBAAkB,GAAG,IAAI,uEAAc,CAAmB,IAAI,CAAC,cAAc,CAAC,CAAC;QAa/E,aAAQ,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAElD,iBAAY,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE3D,gBAAW,GAAG,UAAC,IAAkB,IAAqB,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC;QAEpE,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA2B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;QAE5E,iBAAY,GAAG,UAAC,CAAS,EAAE,SAA2B,IAAK,gBAAS,CAAC,IAAI,KAAK,EAAE,EAArB,CAAqB,CAAC;QAEjF;;WAEG;QACH,gBAAW,GAAG,UAAC,IAAkB,EAAE,KAAa;YAC9C,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClD,IAAM,QAAQ,GAAG,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;gBAC5D,CAAC,CAAC,YAAY;gBACd,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAC7B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACvC,OAAO,QAAQ,CAAC;QAClB,CAAC;QAlCC,IAAI,CAAC,aAAa,GAAG,IAAI,uEAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EACvE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAe,CAAmB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3F,IAAI,CAAC,UAAU,GAAG,IAAI,4EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAElF,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI;YAChC,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IA4BD,4DAA4D;IAC5D,sDAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAMC;QALC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,mDAAmD;IACnD,4DAA4B,GAA5B,UAA6B,IAAsB;QAAnD,iBAIC;QAHC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAzC,CAAyC,CAAC,CAAC;QACpF,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,gFAAgF;IAChF,uDAAuB,GAAvB,UAAwB,IAAsB;QAA9C,iBAYC;;QAXC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,MAAM,WAAI,WAAW,EAC/C,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,QAAQ,WAAI,WAAW,CAAC,CAAC;QAErD,8BAA8B;QAC9B,WAAW,CAAC,KAAK,CAAC,eAAK;YACrB,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,uFAAuF;IACvF,2DAA2B,GAA3B,UAA4B,IAAsB;QAChD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,oEAAoE;IACpE,wDAAwB,GAAxB,UAAyB,IAAsB;QAC7C,IAAI,MAAM,GAA4B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,OAAO,MAAM,EAAE;YACb,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACrC;IACH,CAAC;IAED,8DAA8D;IAC9D,sDAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAWC;QAVC,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,IAAI,YAAY,IAAI,CAAC,eAAe,EAAE;YACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtC;IACH,CAAC;IAED,mCAAmC;IACnC,6CAAa,GAAb,UAAc,IAAsB;QAClC,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,YAAY,GAAG,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEhE,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAElD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,YAAY,EAAE;gBAC7C,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,yDAAyD;IACzD,0CAAU,GAAV,UAAW,IAAsB;QAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAW,EAAE,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,gCAAgC;IAChC,wCAAQ,GAAR,UAAS,IAAsB,EAAE,SAAiB;QAChD,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAW,EAAE,SAAS,CAAC,CAAC;IACnD,CAAC;IAvJU,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2HAA6C;YAE7C,SAAS,EAAE,CAAC,iBAAiB,CAAC;;SAC/B,CAAC;+EAwB8B,iBAAiB;OAvBpC,qBAAqB,CAwJjC;IAAD,4BAAC;CAAA;AAxJiC;;;;;;;;;;;;ACrIlC,8BAA8B,kCAAkC,qCAAqC,GAAG,6CAA6C,2Z;;;;;;;;;;;ACArJ,6VAA6V,sBAAsB,kjGAAkjG,wCAAwC,kEAAkE,0aAA0a,wCAAwC,kEAAkE,8HAA8H,iKAAiK,2IAA2I,4E;;;;;;;;;;;;;;;;;;;;ACA35I;AACU;AACQ;AAC3B;AAOzC;IAKE,6BACU,WAAwB,EACxB,QAAyB,EACzB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QANxB,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAQ,EAAE,CAAC;IAMZ,CAAC;IAEL,sCAAQ,GAAR;IACA,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBASC;QARC,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;YAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAChE,CAAC,CACA,CAAC;IAEJ,CAAC;IAvBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,2HAA2C;;SAE5C,CAAC;+EAOuB,wEAAW;YACd,gFAAe;YACjB,sDAAM;OARb,mBAAmB,CAyB/B;IAAD,0BAAC;CAAA;AAzB+B;;;;;;;;;;;;ACVhC,+DAA+D,2J;;;;;;;;;;;ACA/D,oD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,2HAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,+BAA+B,mBAAmB,uBAAuB,iBAAiB,6CAA6C,oBAAoB,KAAK,6CAA6C,+gB;;;;;;;;;;;ACA7M,yUAAyU,sBAAsB,mKAAmK,sBAAsB,svEAAsvE,qJAAqJ,mIAAmI,0H;;;;;;;;;;;;;;;;;;;;;ACAn9F;AAEvB;AACQ;AACX;AAEL;AAQpD;IAqCA,mDAAmD;IAEnD,oCAAoC;IACpC,4BAA4B;IAC5B,MAAM;IACN,iCAAiC;IACjC,MAAM;IACN,IAAI;IAGF,6BAAoB,WAAwB,EAClC,QAAyB,EACzB,MAAc,EACd,KAAqB,EACG,UAAe;QAJ7B,gBAAW,GAAX,WAAW,CAAa;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACG,eAAU,GAAV,UAAU,CAAK;QAjDnD,2CAA2C;QAE3C,qBAAqB;QACrB,UAAK,GAAG;YACN,YAAY,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;SACpB,CAAC;QAEF,SAAI,GAAG;YACL,YAAY,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;SACpB,CAAC;QAqBE,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;QAE3C,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC;IAJ/C,CAAC;IAOP,sCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC7B,IAAM,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV;QAAA,iBAQC;QAPC,8BAA8B;QAC9B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;QAC7D,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACA,CAAC;IACJ,CAAC;IAEH,sCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAChE,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAnFY,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,2HAA2C;;SAE5C,CAAC;QAqDG,6GAAM,CAAC,iEAAe,CAAC;+EAJO,wEAAW;YACxB,gFAAe;YACjB,sDAAM;YACP,8DAAc;OAlDpB,mBAAmB,CAqF/B;IAAD,0BAAC;CAAA;AArF+B;AAuFhC,6BAA6B;AAC7B,oBAAoB;AACpB,uBAAuB;AACvB,4BAA4B;AAC5B,yBAAyB;AACzB,wBAAwB;AACxB,wBAAwB;AACxB,4BAA4B;AAC5B,4BAA4B;AAC5B,uBAAuB;AACvB,oBAAoB;AACpB,qBAAqB;AACrB,uBAAuB;AACvB,yBAAyB;AACzB,2BAA2B;AAC3B,0BAA0B;AAC1B,IAAI;;;;;;;;;;;;ACrHJ,+DAA+D,2L;;;;;;;;;;;ACA/D,8SAA8S,sBAAsB,8HAA8H,mBAAmB,kCAAkC,qMAAqM,wIAAwI,8F;;;;;;;;;;;;;;;;;;;;;ACA1wB;AACE;AACQ;AACX;AAEL;AAOpD;IAEE,mCAAoB,WAAwB,EAClC,QAAyB,EACzB,MAAc,EACd,KAAqB,EACG,UAAe;QAJ7B,gBAAW,GAAX,WAAW,CAAa;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACG,eAAU,GAAV,UAAU,CAAK;QAG/C,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAKvC,UAAK,GAAQ,EAAE,CAAC;QAEhB,SAAI,GAAG;YACL,YAAY,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;SACpB,CAAC;IAtBI,CAAC;IAwBP,4CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,mCAAmC;QACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,uDAAmB,GAAnB;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,aAAG;YACvE,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,+BAA+B;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAChE,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,0BAA0B;QAC5B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAmB,GAAnB,UAAoB,eAAe;QAAnC,iBAWD;QAVG,IAAI,MAAM,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC;QACvE,IAAI,MAAM,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBAClE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YACzD,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAjEY,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wJAAgD;;SAEjD,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EAJO,wEAAW;YACxB,gFAAe;YACjB,sDAAM;YACP,8DAAc;OALpB,yBAAyB,CAkErC;IAAD,gCAAC;CAAA;AAlEqC;;;;;;;;;;;;ACZtC,+DAA+D,mK;;;;;;;;;;;ACA/D,yYAAyY,sBAAsB,2aAA2a,gBAAgB,0XAA0X,gBAAgB,qHAAqH,mBAAmB,gVAAgV,sBAAsB,qbAAqb,sBAAsB,gZAAgZ,sBAAsB,uaAAua,sBAAsB,mZAAmZ,sBAAsB,ycAAyc,sBAAsB,8IAA8I,wRAAwR,2M;;;;;;;;;;;;;;;;;;;;ACA5vI;AACU;AACQ;AACX;AASzD;IACE,+BACU,WAAwB,EACxB,QAAyB,EACzB,MAAc,EACd,KAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAK/B,UAAK,GAAQ;YACX,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,IAAI;SACtB,CAAC;IAPC,CAAC;IAwBJ,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAGD,iDAAiB,GAAjB;QAAA,iBAQC;QAPC,4EAA4E;QAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG;YACvD,mBAAmB;YACnB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,yEAAyE;YACzE,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAKH,2CAAW,GAAX,UAAY,KAAK;QAChB,oEAAoE;QACpE,0DAA0D;QAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,2BAA2B;QAC5B,4BAA4B;IAC5B,CAAC;IAED,kDAAkB,GAAlB,UAAmB,KAAK;QACvB,oEAAoE;QACnE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,kDAAkB,GAAlB,UAAmB,KAAK;QACtB,mEAAmE;QACnE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,kDAAkB,GAAlB,UAAmB,KAAK;QACtB,mEAAmE;QACnE,2BAA2B;QAC3B,uBAAuB;IACzB,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAMC;QALC,eAAe;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1E,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACtB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAMC;QALC,eAAe;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAChF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACtB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YAChF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAC7B,kBAAkB;QACtB,CAAC,CAAC,CAAC;IACH,CAAC;IACC,8BAA8B;IAC9B,sFAAsF;IACtF,yEAAyE;IACzE,oCAAoC;IACpC,8FAA8F;IAC9F,QAAQ;IACR,IAAI;IAEJ,8BAA8B;IAC9B,oFAAoF;IACpF,yEAAyE;IACzE,oCAAoC;IACpC,QAAQ;IACR,IAAI;IAEJ,8BAA8B;IAC9B,uFAAuF;IACvF,yEAAyE;IACzE,oCAAoC;IACpC,QAAQ;IACR,IAAI;IAEJ,8CAAc,GAAd;QAAA,iBAeC;QAdE,oDAAoD;QACtD,uDAAuD;QACvD,6DAA6D;QAC7D,IAAG,IAAI,CAAC,uBAAuB,IAAI,IAAI,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;SAC1D;aACI;YACJ,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;SAC1D;QAEA,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAClD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,wCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAClE,UAAC,IAAU;YACT,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,qDAAqD;YACrD,gDAAgD;QAClD,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAtJU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,iIAA6C;;SAE9C,CAAC;+EAGuB,wEAAW;YACd,gFAAe;YACjB,sDAAM;YACP,8DAAc;OALpB,qBAAqB,CAuJjC;IAAD,4BAAC;CAAA;AAvJiC;;;;;;;;;;;;ACZlC,+DAA+D,uK;;;;;;;;;;;ACA/D,gdAAgd,kBAAkB,wBAAwB,kBAAkB,+WAA+W,eAAe,2UAA2U,6TAA6T,gI;;;;;;;;;;;;;;;;;;;;;;ACAx9C;AACc;AACJ;AACX;AAEG;AACR;AAOpD;IAEE,iCACQ,cAAiC,EACjC,WAAwB,EACxB,QAAyB,EACzB,MAAc,EACd,KAAqB,EACG,UAAe;QALvC,mBAAc,GAAd,cAAc,CAAmB;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACG,eAAU,GAAV,UAAU,CAAK;QAM/C,UAAK,GAAQ,EAAE,CAAC;QAIhB,qBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;IAVF,CAAC;IAYpD,0CAAQ,GAAR;QAAA,iBAKC;QAJA,mBAAmB;QAClB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1C,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAgB,GAAhB;QAAA,iBAWE;QAVA,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YACzF,oEAAoE;YACjE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAW,KAAI,CAAC,YAAY,qBAAgB,KAAI,CAAC,gBAAkB,CAAC,CAAC;YAC3F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC7C,uCAAuC;QACzC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IA1CS,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,uIAA+C;;SAEhD,CAAC;QASC,6GAAM,CAAC,iEAAe,CAAC;+EALA,oFAAiB;YACpB,wEAAW;YACd,gFAAe;YACjB,sDAAM;YACP,8DAAc;OAPlB,uBAAuB,CAsDnC;IAAD,8BAAC;CAAA;AAtDmC;;;;;;;;;;;;ACbpC,+BAA+B,mBAAmB,uBAAuB,iBAAiB,6CAA6C,oBAAoB,KAAK,6CAA6C,mhB;;;;;;;;;;;ACA7M,2IAA2I,sBAAsB,iaAAia,wCAAwC,sEAAsE,8bAA8b,wCAAwC,sEAAsE,8kBAA8kB,sBAAsB,mKAAmK,yBAAyB,iwEAAiwE,mIAAmI,uhBAAuhB,sBAAsB,8MAA8M,uBAAuB,u3FAAu3F,qMAAqM,iL;;;;;;;;;;;;;;;;;;;;;ACAppQ;AACE;AACQ;AACX;AAEL;AAQpD;IAIE,8BAAoB,WAAwB,EAClC,QAAyB,EACzB,MAAc,EACd,KAAqB,EACG,UAAe;QAJ7B,gBAAW,GAAX,WAAW,CAAa;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACG,eAAU,GAAV,UAAU,CAAK;QANjD,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAG,IAAI,CAAC;QAUV,kBAAa,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAErC,SAAI,GAAG;YACL,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,yBAAyB;QACzB,eAAe;QACf,uBAAuB;QACvB,qBAAqB;QACrB,eAAe;QACf,2BAA2B;QAC3B,sBAAsB;QACtB,qBAAqB;QACrB,yBAAyB;QACzB,+BAA+B;QAC/B,0BAA0B;QAC1B,6BAA6B;QAC7B,0BAA0B;QAC1B,mCAAmC;QACnC,+BAA+B;QAC/B,yBAAyB;QACzB,6BAA6B;QAC7B,+BAA+B;QAC/B,KAAK;QAEL,YAAO,GAAG;YACR,YAAY,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;SACpB,CAAC;IA5CiD,CAAC;IA+CtD,uCAAQ,GAAR;QACC,2BAA2B;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,wCAAwC;QACxC,mCAAmC;QACnC,uDAAuD;QACvD,4DAA4D;QAC5D,OAAO;IACP,CAAC;IAED,uBAAuB;IACvB,6FAA6F;IAC7F,wBAAwB;IACxB,OAAO;IACP,eAAe;IACf,kCAAkC;IAClC,QAAQ;IACR,IAAI;IAEJ,0CAAW,GAAX;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAChE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAc,GAAd;QAAA,iBAgBC;QAfG,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,OAAO,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBAEtE,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;gBACxD,0CAA0C;gBAC1C,kCAAkC;YACpC,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,4CAAa,GAAb;QAAA,iBASC;QARC,8BAA8B;QAC9B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;QAC7D,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACA,CAAC;IAEJ,CAAC;IA9GU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,8HAA4C;;SAE7C,CAAC;QASG,6GAAM,CAAC,iEAAe,CAAC;+EAJO,wEAAW;YACxB,gFAAe;YACjB,sDAAM;YACP,8DAAc;OAPpB,oBAAoB,CAgHhC;IAAD,2BAAC;CAAA;AAhHgC;;;;;;;;;;;;ACbjC,6CAA6C,kBAAkB,KAAK,yBAAyB,sBAAsB,kBAAkB,KAAK,gBAAgB,eAAe,mCAAmC,4BAA4B,8BAA8B,KAAK,gDAAgD,ulB;;;;;;;;;;;ACA3T,mOAAmO,iBAAiB,gYAAgY,cAAc,4GAA4G,kBAAkB,8BAA8B,yVAAyV,gEAAgE,sRAAsR,uBAAuB,mCAAmC,WAAW,sOAAsO,uBAAuB,mCAAmC,WAAW,kWAAkW,4cAA4c,sRAAsR,gEAAgE,6PAA6P,sBAAsB,mCAAmC,WAAW,8tBAA8tB,y4BAAy4B,gWAAgW,iBAAiB,GAAG,gBAAgB,2SAA2S,mBAAmB,ytDAAytD,kBAAkB,gCAAgC,2BAA2B,qN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5uO;AAS1E;AAC4B;AACQ;AACb;AAEoB;AACI;AACE;AACf;AACa;AAEZ;AACC;AACX;AACoD;AAC7D;AAC2C;AAEtF;IAAA;IAQA,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAED,iEAAiE;AACjE;IAAA;IAOA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAOD;IACE,wBACU,WAAwB,EACxB,QAAyB,EACzB,IAAgB,EAChB,MAAiB,EACjB,eAAgC,EAChC,GAAsB;QANhC,iBA2BC;QA1BS,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,QAAG,GAAH,GAAG,CAAmB;QAuBxB,qBAAgB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAEnD,0BAAqB,GAAQ,EAAE,CAAC;QAChC,aAAQ,GAAmB,EAAE,CAAC;QAG9B,mBAAmB;QAEnB,iBAAY,GAAQ,EAAE,CAAC;QAMvB,qBAAgB,GAAa;YAC3B,QAAQ;YACR,MAAM;YACN,aAAa;YACb,eAAe;YACf,WAAW;YACX,QAAQ;SACT,CAAC;QACF,cAAS,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,EAAE,CAAC,CAAC;QAYpD,gBAAW,GAAG,IAAI,6CAAO,EAAQ,CAAC;QAGlC,oBAAe,GAAQ,EAAE,CAAC;QA0B1B,gBAAW,GAAU,EAAE,CAAC;QAiExB,mBAAc,GAAQ,EAAE,CAAC;QACzB,oBAAe,GAAQ,EAAE,CAAC;QAC1B,gBAAW,GAAQ,EAAE,CAAC;QA+Bf,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC9D,CAAC,CAAC;QAsDF,8FAA8F;QAC9F,4CAA4C;QAC5C,gBAAW,GAAG,IAAI,GAAG,EAAkC,CAAC;QAExD,kGAAkG;QAClG,4CAA4C;QAC5C,kBAAa,GAAG,IAAI,GAAG,EAAkC,CAAC;QAE1D,4CAA4C;QAC5C,4CAA4C;QAC5C,mBAAc,GAA4B,IAAI,CAAC;QAE/C,0BAA0B;QAC1B,4CAA4C;QAC5C,gBAAW,GAAG,EAAE,CAAC;QAWjB,kCAAkC;QAClC,uBAAkB,GAAG,IAAI,uEAAc,CAAmB,IAAI,CAAC,CAAC;QAEhE,UAAK,GAAG;YACN,IAAI,EAAE,EAAE;YACR,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;SAC5B,CAAC;QAEF,gBAAW,GAAG;YACZ,IAAI,EAAE,EAAE;YACR,eAAe,EAAE,IAAI;YACrB,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;SAC5B,CAAC;QAEF,aAAQ,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAElD,gBAAW,GAAG,UAAC,IAAkB,IAAK,WAAI,CAAC,MAAM,EAAX,CAAW,CAAC;QAElD,iBAAY,GAAG,UAAC,IAAsB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE3D,gBAAW,GAAG,UAAC,IAAkB,IAAqB,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC;QAEpE,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA2B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;QAE5E,iBAAY,GAAG,UAAC,CAAS,EAAE,SAA2B;YACpD,gBAAS,CAAC,IAAI,KAAK,EAAE;QAArB,CAAqB,CAAC;QAExB;;WAEG;QACH,gBAAW,GAAG,UAAC,IAAkB,EAAE,KAAa;YAC9C,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClD,IAAM,QAAQ,GACZ,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;gBAC7C,CAAC,CAAC,YAAY;gBACd,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAC7B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAChD,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC5D,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACxD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;aAC7B;YAED,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACvC,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;QAEF,eAAU,GAAG,IAAI,qDAAe,CAAiB,EAAE,CAAC,CAAC;QA7TnD,IAAI,CAAC,aAAa,GAAG,IAAI,kEAAgB,CACvC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,CACjB,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,kEAAe,CACpC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,CAClB,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAqB,CACzC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IA0BD,oCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,kCAAkC;QAClC,2BAA2B;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAKD,oCAAW,GAAX;QAAA,iBAcC;QAbC,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACnF,aAAG;YAED,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;YACjE,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC/C,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEO,qCAAY,GAApB;QACE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAGD,2CAAkB,GAAlB,UAAmB,EAAE;QAArB,iBAYC;QAXC,IAAI,MAAM,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;QACnE,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CACvC,aAAG;gBACD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;YAC1D,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;YACjE,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,gDAAuB,GAAvB,UAAwB,IAAI;QAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;IACL,CAAC;IAGD,sDAA6B,GAA7B,UAA8B,IAAI;QAChC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;IACL,CAAC;IAED,oDAA2B,GAA3B,UAA4B,IAAI;QAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;IACL,CAAC;IAED,kDAAyB,GAAzB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;YAClD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,+CAAsB,GAAtB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,oDAA2B,GAA3B,UAA4B,IAAI;QAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAAyB,EAAE;YAC5D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;IACL,CAAC;IAOD,uCAAc,GAAd;QAAA,iBA2BC;QA1BC,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QAEnC,KAA2B,UAAuB,EAAvB,SAAI,CAAC,SAAS,CAAC,QAAQ,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;YAA/C,IAAM,YAAY;YACrB,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;SAC5D;QAED,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAExD,KAA4B,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;YAA5C,IAAM,aAAa;YACtB,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;SAClE;QACD,IAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YAChH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YAC7D,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAC5F,aAAG;gBACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBAErB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YACpD,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;YACjE,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAMD,gFAAgF;IAChF,sCAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,qCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACxE,CAAC;IAED,mDAAmD;IACnD,sCAAa,GAAb,UAAc,GAAe;QAC3B,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAC9D;QACD,+CAA+C;QAC/C,qDAAqD;QACrD,IAAI;QACJ,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAChD,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;IAC7B,CAAC;IAED,sFAAsF;IAEtF,wCAAe,GAAf;QAAA,iBAcC;QAbC,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,iEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;YACjC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,qBAAqB,CAAC;YAE3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC;YACrC,8BAA8B;YAC9B,qDAAqD;YACrD,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;YAEvD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,8BAA8B;YAC9B,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,gCAAI;aAAR;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAoFD,4DAA4D;IAC5D,+CAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAYC;QAXC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,4BAA4B;QAC5B,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACA,gCAAgC;QAChC,4BAA4B;QAC9B,4BAA4B;QAC5B,gCAAgC;QAChC,8CAA8C;QAC9C,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,mDAAmD;IACnD,qDAA4B,GAA5B,UAA6B,IAAsB;QAAnD,iBAQC;QAPC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,eAAK;YACnC,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,uBAAuB;QAEvB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,gFAAgF;IAChF,gDAAuB,GAAvB,UAAwB,IAAsB;QAA9C,iBA0BC;;QAzBC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,qDAAqD;QACrD,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,sDAAsD;QACtD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,MAAM,WAAI,WAAW,EAC/C,CAAC,CAAC,UAAI,CAAC,kBAAkB,EAAC,QAAQ,WAAI,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,oDAAoD;QACpD,8BAA8B;QAC9B,WAAW,CAAC,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAzC,CAAyC,CAAC,CAAC;QACtE,sFAAsF;QACtF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAEpC,+DAA+D;QAC/D,qBAAqB;QACrB,qCAAqC;QAErC,4CAA4C;QAC5C,2DAA2D;QAC3D,4BAA4B;QAE5B,gDAAgD;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;IACpC,CAAC;IAED,uFAAuF;IACvF,oDAA2B,GAA3B,UAA4B,IAAsB;QAChD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,oDAAoD;QACpD,qBAAqB;IACvB,CAAC;IAED,oEAAoE;IACpE,iDAAwB,GAAxB,UAAyB,IAAsB;QAC7C,IAAI,MAAM,GAA4B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,OAAO,MAAM,EAAE;YACb,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACrC;QACD,uBAAuB;QACvB,qBAAqB;IACvB,CAAC;IAED,8DAA8D;IAC9D,+CAAsB,GAAtB,UAAuB,IAAsB;QAA7C,iBAaC;QAZC,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,eAAK;YAC7C,YAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;QAAzC,CAAyC,CAC1C,CAAC;QACF,IAAI,YAAY,IAAI,CAAC,eAAe,EAAE;YACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxC;aAAM,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtC;QACD,gCAAgC;QAChC,gDAAgD;IAClD,CAAC;IAED,mCAAmC;IACnC,sCAAa,GAAb,UAAc,IAAsB;QAClC,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,YAAY,GAAG,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEhE,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAElD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,YAAY,EAAE;gBAC7C,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IA5YwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;qDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;gDAAC;IACb;QAApB,+DAAS,CAAC,0DAAQ,CAAC;wEAAQ,0DAAQ;iDAAM;IA1C/B,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,mGAAqC;;SAEtC,CAAC;+EAGuB,iEAAW;YACd,yEAAe;YACnB,+DAAU;YACR,2DAAS;YACA,0EAAe;YAC3B,+DAAiB;OAPrB,cAAc,CAqb1B;IAAD,qBAAC;CAAA;AArb0B;;;;;;;;;;;;;ACpD3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,4CAA4C;IAC5C,MAAM,EAAE,6CAA6C;CACtD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEvC;AAElB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".mat-tree {\\n    /* display: block !important; */\\n    /* float: left !important; */\\n    /* width: 30% !important; */\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9BdXRob3JpdHlUcmVlL0F1dGhvcml0eVRyZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLCtCQUErQjtJQUMvQiw0QkFBNEI7SUFDNUIsMkJBQTJCO0FBQy9CIiwiZmlsZSI6ImFwcC9BdXRob3JpdHlUcmVlL0F1dGhvcml0eVRyZWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdHJlZSB7XG4gICAgLyogZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgKi9cbiAgICAvKiBmbG9hdDogbGVmdCAhaW1wb3J0YW50OyAqL1xuICAgIC8qIHdpZHRoOiAzMCUgIWltcG9ydGFudDsgKi9cbn0iXX0= */\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n    <button mat-icon-button disabled></button>\\n    <!-- <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n      {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n    </mat-icon> -->\\n    <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                  [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                  (change)=\\\"todoLeafItemSelectionToggle(node)\\\"  style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n\\n                  <button mat-icon-button (click)=\\\"removeNode(node)\\\"><mat-icon>clear</mat-icon></button>\\n\\n                  <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\n                  <!-- <button mat-icon-button (click)=\\\"updateNode(node)\\\"><mat-icon>edit</mat-icon></button> -->\\n  </mat-tree-node>\\n\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n    <button mat-icon-button disabled></button>\\n    <mat-form-field>\\n      <input matInput #itemValue placeholder=\\\"New item...\\\">\\n    </mat-form-field>\\n    <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button>\\n  </mat-tree-node>\\n\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n    <button mat-icon-button matTreeNodeToggle\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n      </mat-icon>\\n    </button>\\n    <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\n                  [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\n                  (change)=\\\"todoItemSelectionToggle(node)\\\" style=\\\"font-size: 90% !important; font:bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n    <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button>\\n    <!-- <button mat-icon-button *ngIf=\\\"node.hasChild\\\" (click)=\\\"removeNode(node)\\\"><mat-icon>clear</mat-icon></button> -->\\n  </mat-tree-node>\\n</mat-tree>\\n\"","import { Component, OnInit, Injectable, Input, Output, EventEmitter } from '@angular/core';\nimport { LocationService } from '../_service/location.service';\nimport { BehaviorSubject, observable } from 'rxjs';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener\n} from '@angular/material/tree';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AuthoritytreeService } from '../_service/authoritytree.service';\nimport { AlertifyService } from '../_service/alertify.service';\n\nexport class TodoItemNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  name: string;\n  children?: TodoItemNode[];\n  hasChild: boolean;\n  exists: boolean;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n@Component({\n  selector: \"AuthorityTree\",\n  templateUrl: './AuthorityTree.component.html',\n  styleUrls: ['./AuthorityTree.component.css']\n  // providers: [ChecklistDatabase]\n})\n\nexport class AuthorityTreeComponent implements OnInit {\n  // tslint:disable-next-line: member-ordering\n  locationsFromResponse: any = [];\n  location: TodoItemNode[] = [];\n\n  ngOnInit() {\n    this.getTopLocations();\n  }\n\n  getTopLocations() {\n    return this.locationService.locationHiararchy().subscribe(res => {\n      this.locationsFromResponse = res;\n      this.location = this.locationsFromResponse;\n\n      this.dataSource.data = this.location;\n      // this.dataChange.next(data);\n      // const data = this.buildFileTree(this.location, 0);\n      this.dataChange.value.push(this.locationsFromResponse);\n\n      this.dataChange.next(this.location);\n      // this.dataChange.next(data);\n      // this.dataChange.next(this.data);\n    });\n  }\n\n  get data(): TodoItemNode[] {\n    return this.dataChange.value;\n  }\n\n  insertItem(parent: TodoItemNode, name: string) {\n    if (parent.children) {\n      parent.children.push({ name: name } as TodoItemNode);\n      this.dataChange.next(this.data);\n    }\n    console.log(name);\n    console.log(parent);\n  }\n\n  updateItem(node: TodoItemNode, name: string) {\n    node.name = name;\n    this.dataChange.next(this.data);\n  }\n\n  updateDeletedItem(node: TodoItemNode) {\n    this.model.name = node.name;\n    this.dataChange.next(this.data);\n  }\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  // tslint:disable-next-line: member-ordering\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  // tslint:disable-next-line: member-ordering\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  // tslint:disable-next-line: member-ordering\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  // tslint:disable-next-line: member-ordering\n  newItemName = '';\n\n  // tslint:disable-next-line: member-ordering\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true);\n\n  constructor(\n    // private _database: ChecklistDatabase,\n    private locationService: LocationService,\n    private authorityTreeService: AuthoritytreeService,\n    private alertify: AlertifyService\n  ) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren\n    );\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(\n      this.getLevel,\n      this.isExpandable\n    );\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n\n    this.getTopLocations();\n    this.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  model = {\n    name: '',\n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null\n  };\n\n  updateModel = {\n    name: '',\n    authorityUnitId: null,\n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null\n  }\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  levelsExist = (node: TodoItemNode) => node.exists;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) =>\n    _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.item === node.name\n        ? existingNode\n        : new TodoItemFlatNode();\n    flatNode.item = node.name;\n    flatNode.level = level;\n    flatNode.authorityUnitId = node.authorityUnitId;\n    flatNode.parentAuthorityUnitId = node.parentAuthorityUnitId;\n    flatNode.rootAuthorityUnitId = node.rootAuthorityUnitId;\n    if (node.hasChild) {\n      flatNode.expandable = true;\n    } else {\n      flatNode.expandable = false;\n    }\n\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n  itemSelected: boolean;\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    // console.log(descendants);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n\n    // console.log(descendants);\n    // console.log(descAllSelected);\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    // console.log(result);\n\n    return result && !this.descendantsAllSelected(node);\n  }\n  test2: any;\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n    this.checkAllParentsSelection(node);\n    // Force update for the parent\n    descendants.every(child => this.checklistSelection.isSelected(child));\n    console.log(descendants.every(child => this.checklistSelection.isSelected(child)));\n    this.checkAllParentsSelection(node);\n   // ==> node will give me the parent which has the expandable //\n    console.log(node.item);\n    console.log(node.authorityUnitId);\n\n    // decendants will give me the children of the parent... //\n    console.log(descendants);\n    for (const authUnitId of descendants) {\n      // console.log(parentAuthId.id);\n      if (authUnitId.level !== 0)\n        // this.model.authorityUnitId = authUnitId.authorityUnitId;\n        this.model.name = authUnitId.item;\n        this.test2 = this.model.name;\n        console.log('AuthUnitName: ' + authUnitId.item);\n       console.log(authUnitId.authorityUnitId);\n       console.log(this.itemSelected);\n    }\n    if (node.level === 0) {\n      // this.model.authorityUnitId = node.authorityUnitId;\n      this.model.name = node.item;\n      this.model.parentAuthorityUnitId = node.parentAuthorityUnitId;\n      this.model.rootAuthorityUnitId = node.rootAuthorityUnitId;\n    }\n  }\n\n\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n    console.log(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n    // console.log(parent);\n    // console.log(node);\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n    // console.log(node);\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n    const currentLevel = this.getLevel(node);\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: TodoItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.insertItem(parentNode!, '');\n    this.treeControl.expand(node);\n    console.log(parentNode);\n\n    this.model.parentAuthorityUnitId = node.authorityUnitId;\n    this.model.rootAuthorityUnitId = node.authorityUnitId;\n  }\n\n  /** Save the node to database */\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.model.name = itemValue;\n    if(itemValue === '') {\n      this.alertify.message('Please enter a location name');\n    } else {\n      this.updateItem(nestedNode!, itemValue);\n      this.createAuthLocation();\n    }\n  }\n\n  createAuthLocation() {\n    // console.log(this.model.name);\n    // console.log(this.model.parentAuthorityUnitId);\n    // console.log(this.model.rootAuthorityUnitId);\n      return this.authorityTreeService.createLocation(this.model).subscribe(\n        res => {\n          this.alertify.success('New Location created');\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again!');\n        }\n      );\n  }\n\n  removedItem: any;\n\n  removeNode(node: TodoItemFlatNode) {\n    this.model.parentAuthorityUnitId = node.authorityUnitId;\n    this.removeAuthLocation();\n  }\n\n  removeAuthLocation() {\n    var prompt = confirm('Are you sure you want to delete this location?');\n    if (prompt) {\n      return this.authorityTreeService\n        .removeLocation(this.model.parentAuthorityUnitId)\n        .subscribe(\n          res => {\n            this.removedItem = res;\n            // console.log(this.removedItem);\n            // this.dataChange.value.push(this.removedItem);\n            // this.data.push(this.removedItem);\n            this.alertify.success(\n              `Location has been successfully deleted`\n            );\n          },\n          error => {\n            this.alertify.error('Something went wrong, please try again!');\n          }\n        );\n    }\n  }\n\n  updateNode(node: TodoItemFlatNode) {\n    this.updateModel.authorityUnitId = node.authorityUnitId;\n    this.updateModel.rootAuthorityUnitId = node.rootAuthorityUnitId;\n    this.updateModel.parentAuthorityUnitId = node.parentAuthorityUnitId;\n    this.updateModel.name = node.item;\n    this.updateAuthLocation();\n  }\n\n  updateSiteItem: any;\n\n  updateAuthLocation() {\n    return this.authorityTreeService.updateLocation(this.updateModel).subscribe(res => {\n      this.updateSiteItem = res;\n    });\n  }\n}\n","import { Directive, ViewContainerRef, Input, TemplateRef, OnInit } from '@angular/core';\nimport { AuthService } from '../_service/auth.service';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService,\n    private router: Router) { }\n\n    ngOnInit() {\n      const userRoles = this.authService.decodedToken.role as Array<string>;\n\n      if (!userRoles) {\n        this.viewContainerRef.clear();\n      }\n\n      if (this.authService.roleFromToken(this.appHasRole)){\n        if (!this.isVisible) {\n\n          this.isVisible = true;\n          this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n          this.isVisible = false;\n          this.viewContainerRef.clear();\n        }\n      }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport {AuthService} from '../_service/auth.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HeaderComponent } from '../navigation/header/header.component';\nimport { MatDialog } from '@angular/material';\nimport { LoginComponent } from '../login/login.component';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private alertify: AlertifyService,\n        private dialog: MatDialog) {}\n\n\n        loginPrompt() {\n            const dialogRef = this.dialog.open(LoginComponent, {\n              width: '500px'\n            });\n          }\n\n        canActivate(next: ActivatedRouteSnapshot): boolean {\n            // const roles = next.firstChild.data['role'] as Array<string>;\n            // if (roles) {\n            //     const match = this.authService.roleFromToken(roles);\n            //     if (match) {\n            //         return true;\n            //     } else {\n            //         this.router.navigate(['/search']);\n            //         this.alertify.error('Please Log in');\n            //     }\n            // }\n            if (this.authService.loggedIn()) {\n                return true;\n            }\n\n            this.alertify.warning('Sorry your session has already expired. Please sign in again.');\n            this.loginPrompt();\n            this.router.navigate(['/search']);\n            return false;\n        }\n}","export class Pagination {\n    currentPage: number;\n    itemsPerPage: number[];\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\n\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any){\n  alertify.confirm(message, function(e){\n    if (e) {\n      okCallback();\n    }\n  });\n}\n\nsuccess(message: string){\n  alertify.success(message);\n}\n\nerror(message: string){\n  alertify.error(message);\n}\n\nwarning(message: string){\n  alertify.warning(message);\n}\n\nmessage(message: string){\n  alertify.message(message);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { tap } from 'rxjs/operators';\nimport { HeaderComponent } from '../navigation/header/header.component';\nimport { MatDialog } from '@angular/material';\nimport { LoginComponent } from '../login/login.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private dialog: MatDialog)\n    {}\n\n    loginPrompt() {\n      const dialogRef = this.dialog.open(LoginComponent, {\n        width: '500px'\n      });\n    }\n\n  // intercept(req, next) {\n  //    // console.log('Inteceptor req is: ' + req)\n  //    var token = localStorage.getItem('token');\n\n  //    var authRequest = req.clone({\n  //        headers: req.headers.set('Authorization', `Bearer ${token}`)\n  //    })\n  //     return next.handle(authRequest);\n  // }\n\n  // intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n  //     var token = localStorage.getItem('token');\n\n  //     request = request.clone({\n  //       withCredentials: true,\n  //       headers: request.headers.set('Authorization', `Bearer ${token}`)\n  //     });\n  //     return next.handle(request);\n  //   }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    var token = localStorage.getItem('token');\n    if (token) {\n      req = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(req).pipe(\n        tap(\n          succ => {},\n          error => {\n            if (error.status === 401) {\n              localStorage.removeItem('token');\n              this.loginPrompt();\n              this.router.navigateByUrl('login');\n            }\n          }\n        )\n      );\n    }\n    req = req.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { UserService } from './user.service';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  userToken: any;\n  private httpHeaders: HttpHeaders;\n\n  constructor(private http: HttpClient, private userService: UserService, private router: Router) {\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      withCredentials: 'true',\n      // 'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('token')),\n      'Access-Control-Allow-Origin': '*',\n      Accept: 'application/json'\n    });\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(this.baseUrl + 'account/login', { email, password })\n      .pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          }\n        })\n      );\n  }\n\n  roleFromToken(allowedRoles): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach(element => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    // returns a bool\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  loggedInWindowsUser() {\n    const token = localStorage.getItem('token');\n\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/search']);\n  }\n\n  forgotPassword(model: any) {\n    return this.http.post(this.baseUrl + 'account/forgotPassword', model);\n  }\n\n  resetPassword(model: any) {\n    return this.http.post(this.baseUrl + 'account/resetPassword', model);\n  }\n\n  resendEmail(email: string) {\n    console.log(email);\n    return this.http.post(this.baseUrl + `account/ResendEmail/${email}`, email);\n  }\n\n  windowsAuthentication() {\n    return this.http\n      .post(this.baseUrl + 'account/windowsAuthentication', {\n        headers: this.httpHeaders\n      })\n      .pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthoritytreeService {\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(\n  private http: HttpClient,\n) {}\n\n//return this.http.get(this.baseUrl + 'user/getAllUserLocationNames/' + id);\nbuildAuthorityTree(rootAuthorityUnitId: number) {\n  //console.log(\"in authoritytree server - getAuthorityTree: rootauthorityId \" + rootAuthorityUnitId);\n  var result = this.http.get(this.baseUrl + `authoritytree/GetAuthorityTree/` + rootAuthorityUnitId);\n  return result;\n}\n\ngetAllAuthorityLocations() {\n  return this.http.get(this.baseUrl + `authorities/authoritytree`);\n}\n\ngetLocationCheckBoxes() {\n  return this.http.get(this.baseUrl + 'authorities/LocationCheckBoxes');\n}\n\ncreateLocation(model: any) {\n  return this.http.post(this.baseUrl + `authorities/create`, model);\n}\n\nremoveLocation(id: number) {\n  return this.http.delete(this.baseUrl + 'authorities/' + id);\n}\n\nupdateLocation(updateModel: any) {\n  return this.http.post(this.baseUrl + 'authorities/updateHierarchy', updateModel);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactUsService {\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(\n  private http: HttpClient,\n) {}\n\ncontactUsForm(model: any) {\n  return this.http.post(this.baseUrl + 'contactus/ContactUs/', model);\n}\n}","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExporListService {\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  constructor(private http: HttpClient) {}\n\n  getExportList(selection: any): Observable<any> {\n    return this.http.get(\n      // this.baseUrl + `products/exportList?selection=${selection}`, { headers: new HttpHeaders({\n        this.baseUrl + `products/ExportInventoryList?${selection}`, { headers: new HttpHeaders({'Content-Type': 'application/json'}),\n        responseType: 'blob' as 'json' }\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelService {\n\nconstructor(private http: HttpClient) { }\n\nbaseUrl = environment.apiUrl;\n// baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\ngetSDSById(searchString){\n  return this.http.get(this.baseUrl + `products/MsdsId?searchString=${searchString}`);\n}\n\ngetPrecautionaryStatement(searchString){\n  return this.http.get(this.baseUrl + `products/PrecautionaryStatement?searchString=${searchString}`);\n}\n\ngetPictograms(searchString) {\n  return this.http.get(this.baseUrl + `products/Pictogram?searchString=${searchString}`);\n}\n\ngetPictogramUrls() {\n  return this.http.get(this.baseUrl + 'whmis2015/pictogramUrls');\n}\n\ngenerateWorkPlaceLabel(model: any, pictogramName: any): Observable<any> {\n  return this.http.post(this.baseUrl + `labelgenerator/CreateLabel?${pictogramName}`, model , {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }),\n    responseType: 'blob'});\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(private http: HttpClient) { }\n\n\ninsertNewSite(authority: any) {\n  console.log('Location Service Url: ' + this.baseUrl + 'authorities/addNewSite')\n  return this.http.post(this.baseUrl + 'authorities/addNewSite' , authority);\n}\n\nupdateLocations(model: any) {\n  return this.http.post(this.baseUrl + 'authorities/updatetree', model);\n}\n\nremoveLocation(id: number) {\n  return this.http.delete(this.baseUrl + 'authorities/' + id);\n}\n\ngetLocationDropDown() {\n  return this.http.get(this.baseUrl + 'authorities/authorityDropDown');\n}\n\ngetAllTopAuthorityNames() {\n  return this.http.get(this.baseUrl + 'authorities/GetAllTopAuthorities');\n}\n\nlevel1DropDown(id: number) {\n  return this.http.get(this.baseUrl + 'authorities/level1DropDown/' + id);\n}\n\nlevel2DropDown(id: number) {\n  return this.http.get(this.baseUrl + 'authorities/level2DropDown/' + id);\n}\n\nlevel3DropDown(id: number) {\n  return this.http.get(this.baseUrl + 'authorities/level3DropDown/' + id);\n}\n\nlevel4DropDown(id: number) {\n  return this.http.get(this.baseUrl + 'authorities/level4DropDown/' + id);\n}\n\nlocationHiararchy() {\n  return this.http.get(this.baseUrl + 'authorities/AuthorityHierarchy');\n  // return this.http.get(this.baseUrl + 'authorities/AdminLocationHierarchy');\n}\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { debounceTime, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManufacturerService {\n\nconstructor(private http: HttpClient) { }\n \nbaseUrl = environment.apiUrl;\n// baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n\n// manufacturerInformation(searchString) {\n//   return this.http.get(this.baseUrl + `manufacturers/manfucturerdropdown`, searchString);\n// }\n\nmanufacturerInformation() {\n  return this.http.get(this.baseUrl + `manufacturers/manfucturerdropdown`);\n}\n\n\n// manufacturerInformation(searchString) {\n//         const listOfManufacturers = this.http.get(this.baseUrl + `manufacturers/manfucturerdropdown?searchString=${searchString}`)\n//         .pipe(\n//             debounceTime(20),\n//             map(\n//                 (data: any) => {\n//                     return (\n//                         data.length !== 0 ? data as any[] : [{'Manufacturers': 'No Record Found'} as any]\n//                     );\n//                 }\n//         ));\n//         return listOfManufacturers;\n//     }\n\n\ncreateManufacturer(model: any) {\n  return this.http.post(this.baseUrl + 'manufacturers/create', model);\n}\n\nupdateManufacturer(id: string, model: any) {\n  return this.http.put(this.baseUrl + 'manufacturers/' + id, model);\n}\n\ngetByManufacturerId(id: number){\n  return this.http.get(this.baseUrl + 'manufacturers/' + id);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Pagination } from '../_models/pagination';\nimport { PageEvent } from '@angular/material';\n\n@Injectable()\n// @Injectable({\n//   providedIn: 'root'\n// })\nexport class PaginationService {\n\n  private paginationModal: Pagination;\n\nconstructor() {\n  this.paginationModal = new Pagination;\n}\n\nget page(): number {\n  return this.paginationModal.currentPage;\n}\nget selectedItemsPerPage(): number[] {\n  return this.paginationModal.itemsPerPage;\n}\nget pageCount() {\n  return this.paginationModal.totalItems;\n}\n\nchange(pageEvent: PageEvent) {\n  this.paginationModal.currentPage = pageEvent.pageIndex + 1;\n  this.paginationModal.totalPages = pageEvent.pageSize;\n  this.paginationModal.totalItems = pageEvent.length;\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionService {\n\nbaseUrl = environment.apiUrl;\n// baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(private http: HttpClient) { }\n\n// assigns this user with the email to a role\nuserPermission(email: string, role: string){\n  return this.http.post(this.baseUrl + `userrole/assign` , {email, role});\n}\n\n// this populates the drop down \ngetRoles(){\n  return this.http.get(this.baseUrl + `role/roles`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, Subscriber } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { ProductInventorySearch } from '../_models/ProductInventorySearch';\nimport { Product } from '../_models/product';\nimport { PaginationService } from './pagination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n   baseUrl = environment.apiUrl;\n   // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  constructor(private http: HttpClient, private paginationService: PaginationService) {}\n\n  searchProducts(searchString) {\n    return this.http.get(\n      this.baseUrl + `products/search?searchString=${searchString}`\n    );\n  }\n\n  searchVendorProducts(searchString) {\n    return this.http.get(\n      this.baseUrl + `products/vendorSearch?searchString=${searchString}`\n    );\n  }\n\n  searchVendorProductsNew(searchProductName, searchProductCode, searchMfgName) {\n    return this.http.get(\n      this.baseUrl +\n// tslint:disable-next-line: max-line-length\n        `products/vendorSearchNew?searchProductName=${searchProductName}&searchProductCode=${searchProductCode}&searchMfgName=${searchMfgName}`\n    );\n  }\n\n  getAllProductsByAuthority(searchString) {\n    return this.http.get(\n      this.baseUrl + `products/GetAllInventoryProducts?searchString=${searchString}`\n    );\n  }\n\n  createProduct(product: any) {\n    return this.http.post(this.baseUrl + 'products/create', product);\n  }\n\n  updateProductInfo(id: string, model: any): Observable<any> {\n    return this.http.put(this.baseUrl + 'products/' + id, model, {\n      responseType: 'json'\n    });\n  }\n\n  removeProductLocation(productId: number, rootAuthorityUnitId: number, productAuthorityId: number) {\n    return this.http.post(this.baseUrl + 'products/RemoveProductFromLocation', { productId, rootAuthorityUnitId, productAuthorityId\n    });\n  }\n\n  productCasNumberFilter() {\n    return this.http.get(this.baseUrl + 'products/productCasNumbers');\n  }\n\n  getPDF(productId: number): Observable<any> {\n    return this.http.get(this.baseUrl + 'products/GetSDSPDF/' + productId, {\n      responseType: 'blob' as 'json'\n    });\n  }\n\n  getCloudSDS(searchString): Observable<any> {\n    return this.http.get(this.baseUrl + `products/sdsdoc?searchString=${searchString}`, {\n      responseType: 'blob' as 'json'\n    });\n  }\n\n  createMultipleArchives(): Observable<any> {\n    return this.http.get(this.baseUrl + 'products/createMultipleBackup', {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      responseType: 'blob'\n    });\n  }\n\n  createArchive(productId: any): Observable<any> {\n   console.log(productId);\n    return this.http.post(this.baseUrl + `products/CreateBackUp?${productId}`, productId, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      responseType: 'blob'\n    });\n  }\n  \n  getProductbyId(id: number) {\n    return this.http.get(this.baseUrl + 'products/' + id);\n  }\n  getRelatedProductsById(id: number) {\n    return this.http.get(this.baseUrl + 'products/getrelatedProducts/' + id);\n  }\n\n  searchSDSProducts(searchString) {\n    return this.http.get(\n      this.baseUrl + `products/searchSDS?searchString=${searchString}`\n    );\n  }\n\n  findProducts(model: any, locationId: any) {\n    return this.http.post(this.baseUrl + `products/FindProducts?${locationId}`, model, {observe: 'response'});\n  }\n\n  findInventoryProducts(model: any, locationId: any) {\n    return this.http.post(this.baseUrl + `products/GetAllInventoryProducts?${locationId}`, model, {observe: 'response'});\n  }\n\n  createSecondaryName(id: number, model: any) {\n    return this.http.post(this.baseUrl + `products/createSecondaryName/` + id, model);\n  }\n\n  updateSecondaryName(id: number, model: any) {\n    return this.http.put(this.baseUrl + 'products/UpdateSecondaryName/' + id, model);\n  }\n\n  productLocation() {\n    return this.http.get(this.baseUrl + 'products/ProductLocationDropDown');\n  }\n\n  getinventoryProductDetail(productId: number) {\n    return this.http.get(this.baseUrl + 'products/GetInventoryProductDetail/' + productId);\n  }\n\n  getVendorAPIInventoryProductDetail(msdsId: string) {\n    return this.http.get(this.baseUrl + 'products/GetVendorAPIInventoryDetail/' + msdsId);\n  }\n\n  assignProductLocation(model: any){\n    return this.http.post(this.baseUrl + `products/AssignProductToLocation?${model}`,  model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n   baseUrl = environment.apiUrl;\n   // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(\n  private http: HttpClient) { }\n\ngenerateReport(selection: any) {\n  return this.http.get(this.baseUrl + `products/export?${selection}`, { headers: new HttpHeaders({'Content-Type': 'application/json'}),\n  responseType: 'blob' as 'json' });\n}\n\ngenerateUserReport(selection: any) {\n// tslint:disable-next-line: max-line-length\n  return this.http.get(this.baseUrl + `user/userReport?${selection}`, { headers: new HttpHeaders({'Content-Type': 'application/json'}),\n  responseType: 'blob' as 'json' });\n}\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SdsRequestService {\n\n\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\nconstructor(private http: HttpClient) { }\n\n// calgary user top health authority to display in text box\ncalgaryTopHealthAuthority(userOutSideId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/UserTopLocToDisplay/' + userOutSideId);\n}\n\ncalgaryLevel1Location(locationId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/CalgaryLevel1/' + locationId);\n}\n\ncalgaryLevel2Location(locationId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/CalgaryLevel2/' + locationId);\n}\n\ncalgaryLevel3Location(locationId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/CalgaryLevel3/' + locationId);\n}\n\ncalgaryLevel4Location(locationId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/CalgaryLevel4/' + locationId);\n}\n\ncalgaryLevel5Location(locationId: any) {\n  return this.http.get(this.baseUrl + 'SDSRequest/CalgaryLevel5/' + locationId);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendMailService {\n  constructor(public http: HttpClient) {}\n\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  sendRequest(request: any) {\n    return this.http.post(this.baseUrl + 'mail/send', request); // TO DO here mail/send doesn't exist\n  }\n\n  sdsRequest(model: any) {\n    return this.http.post(this.baseUrl + `SDSRequest/SDSRequestForm` , model);\n  }\n\n  siteAdminSDSRequest(request: any) {\n    return this.http.post(this.baseUrl + `SDSRequest/RequestToAddToInventory`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  baseUrl = environment.apiUrl;\n  // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  jwtHelper = new JwtHelperService();\n\n  getToken() {\n    const token = localStorage.getItem('token');\n    return token;\n  }\n\n  getUserByEmail(email) {\n    return this.http.get(this.baseUrl + `user/GetUserDetail?email=${email}`);\n  }\n\n  // return all top authorities, without any filtering\n  getAllTopAuthorities() {\n    return this.http.get(this.baseUrl + `user/AllTopAuthorityNames`);\n  }\n\n  getAuthorityNames() {\n    return this.http.get(this.baseUrl + `user/TopAuthorityNames`);\n  }\n\n  getLevel1AuthorityNames() {\n    return this.http.get(this.baseUrl + `user/Level1AuthorityNames`);\n  }\n  getLevel2AuthorityNames() {\n    return this.http.get(this.baseUrl + `user/Level2AuthorityNames`);\n  }\n  getLevel3AuthorityNames() {\n    return this.http.get(this.baseUrl + `user/Level3AuthorityNames`);\n  }\n\n// gets all users by Authority\n  getAllUsersByAuthority() {\n    return this.http.get(this.baseUrl + `user/GetAllUsers`);\n  }\n\n  // getAllUsersByAuthority(authorityUnitId: number) {\n  //   return this.http.get(this.baseUrl + `user/GetAllUsersFromSpecificAuth/` + authorityUnitId);\n  // }\n  \n// gets user by id\n  getUser(id: string): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'user/GetSDSUser/' + id);\n  }\n\n// update sds user\n  updateUserInfo(id: string, user: any) {\n    return this.http.put(this.baseUrl + 'user/' + id, user);\n  }\n // update identity user\n  updateIdentityPassword(user: any){\n    return this.http.post(this.baseUrl + 'user/UpdatePassword/' , user);\n  }\n\n  inviteUserBySiteAdmin(model: any) {\n    return this.http.post(this.baseUrl + 'user/invite' , model);\n  }\n\n  // return this.http.post(this.baseUrl + \"login\", { email, password })\n  assignUserLocation(model: any){\n    // console.log(model);\n    return this.http.post(this.baseUrl + `user/assign?${model}`,  model);\n  }\n\n  // completeInviteeRegistration(user: any){\n  //   // console.log('This is coming from the completeInviteeRegistration' + ' ' + this.baseUrl + 'update/');\n  //   return this.http.post(this.baseUrl + 'user/update/' , user);\n  // }\n\n  getUserByOutSideId(id: string){\n    return this.http.get(this.baseUrl + `user/getUserByOutSideId/` + id);\n  }\n\n  //returns the user object\n  getIdentityUser(id: string){\n    return this.http.get(this.baseUrl + 'user/GetIdentityUser/' + id);\n  }\n\n  createInternalUser(model: any) {\n    return this.http.post(this.baseUrl + 'admin/CreateInternalUser', model);\n  }\n\n  getUserId() {\n   // var userId = this.http.get(this.baseUrl + 'getUserId');\n    //console.log('this is in the userService' + userId[0].userId);\n    return this.http.get(this.baseUrl + 'user/getUserId');\n  }\n\n  /********DropDown*********/\n  // return this.http.post(this.baseUrl + \"login\", { email, password }).pipe(\n\n  level1DropDown(id: number) {\n    return this.http.get(this.baseUrl + 'user/level1DropDown/' + id);\n  }\n\n  level2DropDown(id: number) {\n    return this.http.get(this.baseUrl + 'user/level2DropDown/' + id);\n  }\n\n  level3DropDown(id: number) {\n    return this.http.get(this.baseUrl + 'user/level3DropDown/' + id);\n  }\n\n  getAllUserLocationNames(id: number){\n    return this.http.get(this.baseUrl + 'user/getAllUserLocationNames/' + id);\n  }\n\n  removeUser(id: number) {\n    //console.log(id);\n    return this.http.delete(this.baseUrl + 'user/deleteUser/' + id);\n  }\n  \n  getUserLocation(id: string) {\n    return this.http.get(this.baseUrl + 'user/GetUserLocation/' + id);\n  }\n\n  removeUserLocation(model: any) {\n    //console.log('from service: ' + model);\n    return this.http.post(this.baseUrl + 'user/RemoveUserLocation', model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Whmis2015Service {\n\nconstructor(private http: HttpClient) { }\n\nbaseUrl = environment.apiUrl;\n// baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\ngetHealthClass() {\n  return this.http.get(this.baseUrl + 'whmis2015/healthClasses');\n}\n\ngetPhysicalClass() {\n  return this.http.get(this.baseUrl + 'whmis2015/PhysicalClasses');\n}\n\ngetHealthRoutes() {\n  return this.http.get(this.baseUrl + 'whmis2015/healthRoutes');\n}\n\ngetPhysicalRoutes() {\n  return this.http.get(this.baseUrl + 'whmis2015/physicalRoutes');\n}\n\ngetHealthCategories() {\n  return this.http.get(this.baseUrl + 'whmis2015/healthHazardCategorys');\n}\n\ngetPhysicalCategories() {\n  return this.http.get(this.baseUrl + 'whmis2015/physicalHazardCategorys');\n}\n\ngetTransportHazardClasses() {\n  return this.http.get(this.baseUrl + 'whmis2015/transportHazardClasses');\n}\n\ngetAllIArcValues() {\n  return this.http.get(this.baseUrl + 'whmis2015/iarcValues');\n}\n\ngetAllAcgihValues() {\n  return this.http.get(this.baseUrl + 'whmis2015/acgihValues');\n}\n\ngetAllNFPARatingsHealthValues() {\n  return this.http.get(this.baseUrl + 'whmis2015/nfpaRatingsHealth');\n}\n\ngetAllNfpaRatingsFlammabilityValues() {\n  return this.http.get(this.baseUrl + 'whmis2015/nfpaRatingsFlammability');\n}\n\ngetAllNfpaRatingsInstability() {\n  return this.http.get(this.baseUrl + 'whmis2015/nfpaRatingsInstability');\n}\n\ngetAllNfpaRatingsSpecific() {\n  return this.http.get(this.baseUrl + 'whmis2015/nfpaRatingsSpecific');\n}\n\ngetAllHmisRatingsHealth() {\n  return this.http.get(this.baseUrl + 'whmis2015/hmisRatingshealth');\n}\n\ngetAllHmisRatingsChronic() {\n  return this.http.get(this.baseUrl + 'whmis2015/hmisRatingsChronic');\n}\n\ngetAllHmisRatingsFlammability() {\n  return this.http.get(this.baseUrl + 'whmis2015/hmisRatingsFlammability');\n}\n\ngetAllHmisRatingsReactivity() {\n  return this.http.get(this.baseUrl + 'whmis2015/hmisRatingsReactivity');\n}\n\ngetPictograms() {\n  return this.http.get(this.baseUrl + 'whmis2015/pictograms');\n}\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ApiService {\n baseUrl = environment.apiUrl;\n // baseUrl = 'https://ohssdsapidev.azurewebsites.net/api/v1/';\n\n  private selectedProduct = new Subject<any>();\n  productSelected = this.selectedProduct.asObservable();\n  \n\n  constructor(private http: HttpClient) {}\n\n  getProductAlias() {\n    return this.http.get(this.baseUrl + `productalias/`);\n  }\n\n  getCompanies() {\n    return this.http.get(this.baseUrl + `manufacturers/`);\n  }\n\n  searchProducts(searchString) {\n    // console.log(this.baseUrl + `products/search?searchString=${searchString}`);\n    return this.http.get(this.baseUrl + `products/search?=${searchString}`);\n  }\n\n  selectProduct(product) {\n    this.selectedProduct.next(product);\n    // console.log(\"selectProduct was called with value \" + product.productName);\n  }\n\n  getProducts(){\n    return this.http.get(this.baseUrl + 'products/getAllProducts')\n  }\n  \n  assignProductLocation(model: any){\n    // console.log('url for posting in assignProductLocation' +this.baseUrl + 'products/assignProductToLocation');\n    return this.http.post(this.baseUrl + 'products/assignProductToLocation',  model);\n  }\n  \n  insertProductLocation(model: any) {\n    console.log(\"insert product location\");\n  }\n\n}\n","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidnav {\\n    height: 100%;\\n}\\n\\nmat-sidenav {\\n    width: 250px;\\n}\\n\\na {\\n    text-decoration: none;\\n    color: white;\\n}\\n\\na:hover, \\na:active {\\n    color: lightgrey;\\n}\\n\\n.navigation-items {\\n    list-style: none;\\n    padding: none;\\n    margin: none;\\n}\\n\\n.nav-caption {\\n    display: inline-block;\\n    padding-left: 6px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtc2lkZW5hdi1jb250YWluZXIsIG1hdC1zaWRlbmF2LWNvbnRlbnQsIG1hdC1zaWRuYXYge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxubWF0LXNpZGVuYXYge1xuICAgIHdpZHRoOiAyNTBweDtcbn1cblxuYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuYTpob3ZlciwgXG5hOmFjdGl2ZSB7XG4gICAgY29sb3I6IGxpZ2h0Z3JleTtcbn1cblxuLm5hdmlnYXRpb24taXRlbXMge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZzogbm9uZTtcbiAgICBtYXJnaW46IG5vbmU7XG59XG5cbi5uYXYtY2FwdGlvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctbGVmdDogNnB4O1xufSJdfQ== */\"","module.exports = \"<!-- <app-nav></app-nav>\\n<router-outlet></router-outlet> -->\\n\\n<mat-sidenav-container>\\n    <mat-sidenav #sidenav role=\\\"navigation\\\">\\n        <app-sidenav-list (closeSidenav)=\\\"sidenav.toggle()\\\"></app-sidenav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n        <app-header (sidenavToggle)=\\\"sidenav.toggle()\\\"></app-header>\\n        <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n<footer style=\\\"height: 100px\\\"></footer>\\n\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProductAliasComponent } from './productalias.component';\nimport {NavComponent} from './nav/nav.component';\nimport { ProductComponent } from './product/product.component';\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './_service/auth.service';\nimport { AlertifyService } from './_service/alertify.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  title = 'SDS';\n  openSidenav = false;\n\n  jwtHelper = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService,\n    ) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n      // this.alertify.warning('Already logged in');\n    }\n    // if (!token) {\n    //   this.windowsAuthLogin();\n    // }\n  }\n\n  logout() {\n    this.authService.logout();\n    this.alertify.message('Logged out Successfully');\n    this.router.navigate(['/search']);\n    // console.log('Logged out successfully');\n  }\n\n  \n windowsAuthResponse: any;\n\n windowsAuthLogin() {\n   return this.authService.windowsAuthentication().subscribe(\n     res => {\n       this.windowsAuthResponse = res;\n\n       this.alertify.success('Logged in successfully');\n       this.router.navigate(['/search']);\n     }\n    // },\n    //  error => {\n    //    this.alertify.error('Failed to login');\n    //  }\n   );\n }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MaterialModule } from './material.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTableModule } from '@angular/material/table';\nimport {\n  MatPaginatorModule,\n  MatDialogModule,\n  MatNativeDateModule\n} from '@angular/material';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { AppComponent } from './app.component';\nimport { ApiService } from './api.service';\nimport { ProductAliasComponent } from './productalias.component';\nimport { NavComponent } from './nav/nav.component';\nimport { ManufacturerComponent } from './manufacturer/manufacturer.component';\nimport { ProductComponent } from './product/product.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { TreeCheckboxComponent, TodoItemNode, ChecklistDatabase } from './tree-checkbox/tree-checkbox.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthService } from './_service/auth.service';\nimport { AuthGuard } from './_guard/auth.guard';\nimport { AuthInterceptor } from './_service/auth.interceptor';\nimport { AlertifyService } from './_service/alertify.service';\nimport { UsersComponent } from './users/users.component';\nimport { UserService } from './_service/user.service';\nimport { InviteComponent } from './invite/invite.component';\nimport { UpdateUserComponent } from './users/update-user/update-user.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { DeleteUserComponent } from './users/delete-user/delete-user.component';\nimport { UserPermissionComponent } from './users/user-permission/user-permission.component';\nimport { UserLocationComponent } from './users/user-location/user-location.component';\nimport { CompleteuserregistrationComponent } from './completeuserregistration/completeuserregistration.component';\nimport { Level3authComponent } from './level3auth/level3auth.component';\nimport { ResetPasswordComponent } from './resetPassword/resetPassword.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { NavResponsiveComponent } from './nav-responsive/nav-responsive.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\nimport { ResendEmailComponent } from './resendEmail/resendEmail.component';\nimport { ShowUserLocationComponent } from './users/user-location/showUserLocation/showUserLocation.component';\nimport { ProductLocationComponent } from './product-location/product-location.component';\nimport { UserProfileComponent } from './users/user-profile/user-profile.component';\nimport { AuthorityComponent } from './authority/authority.component';\nimport { HasRoleDirective } from './_directives/hasRole.directive';\nimport { AddSiteComponent } from './authority/add-site/add-site.component';\nimport { EditSiteComponent } from './authority/edit-site/edit-site.component';\nimport { AddLocationComponent } from './authority/add-location/add-location.component';\nimport { AddDepartmentComponent } from './authority/add-department/add-department.component';\nimport { ReportComponent } from './report/report.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { GenerateComponent } from './report/generate/generate.component';\nimport { ScheduleComponent } from './report/schedule/schedule.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProductPageComponent } from './search/product-page/product-page.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { RequestComponent } from './request/request.component';\nimport { UserReportComponent } from './report/user-report/user-report.component';\nimport { CompanyReportComponent } from './report/company-report/company-report.component';\nimport { ReportMenuComponent } from './report/report-menu/report-menu.component';\nimport { AuthLevelsComponent } from './auth-levels/auth-levels.component';\nimport { HelpComponent } from './help/help.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { RequestConfirmComponent } from './request/request-confirm/request-confirm.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { InventoryProductComponent } from './inventory-product/inventory-product.component';\nimport { CreateProductComponent } from './inventory-product/create-product/create-product.component';\nimport { EditProductComponent } from './inventory-product/edit-product/edit-product.component';\nimport { ManufacturerfilterComponent } from './filter/manufacturerfilter/manufacturerfilter.component';\nimport { LocationfilterComponent } from './filter/locationfilter/locationfilter.component';\nimport { ProductCasfilterComponent } from './filter/productCasfilter/productCasfilter.component';\nimport { CreateManufacturerComponent } from './manufacturer/create-manufacturer/create-manufacturer.component';\nimport { EditManufacturerComponent } from './manufacturer/edit-manufacturer/edit-manufacturer.component';\nimport { ContactLocationComponent } from './manufacturer/contactLocation/contactLocation.component';\nimport { InventoryDetailComponent } from './inventory-product/inventory-detail/inventory-detail.component';\nimport { InventoryEditComponent } from './inventory-product/inventory-edit/inventory-edit.component';\nimport { ExportListComponent } from './inventory-product/exportList/exportList.component';\nimport { ProductLabelComponent } from './product-label/product-label.component';\nimport { AddSubDepartmentComponent } from './authority/add-subDepartment/add-subDepartment.component';\nimport { AddFloorComponent } from './authority/add-floor/add-floor.component';\nimport { LocationTreeComponent } from './locationTree/locationTree.component';\nimport { AuthorityTreeComponent } from './AuthorityTree/AuthorityTree.component';\nimport { CreateSecondarynameComponent } from './inventory-product/create-secondaryname/create-secondaryname.component';\nimport { UpdateSecondarynameComponent } from './inventory-product/update-secondaryname/update-secondaryname.component';\nimport { PaginationService } from './_service/pagination.service';\nimport { ContactUsService } from './_service/contactUs.service';\nimport { FooterComponent } from './navigation/footer/footer.component';\nimport { InventoryVendorapiDetailComponent } from './inventory-product/inventory-vendorapi-detail/inventory-vendorapi-detail.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n// export const routes: Routes = [\n\n//   {\n//     path: '',\n//     runGuardsAndResolvers: 'always',\n//     canActivate: [AuthGuard],\n//     children: [\n\n//       { path: \"product-location\", component: ProductLocationComponent, data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"user-profile/:id\", component: UserProfileComponent , data: {roles: ['Super Admin', 'Site Admin', 'Regular']} },\n//       { path: \"authority\", component: AuthorityComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"users\", component: UsersComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"create-user\", component: CreateUserComponent , data: {roles: ['Super Admin']} },\n//       {\n//         path: \"update-user/:id\", component: UpdateUserComponent, data: {roles: ['Super Admin', 'Site Admin']}  },\n//       { path: \"completeuserregistration/:id\", component: CompleteuserregistrationComponent },\n\n//       { path: \"delete-user\", component: DeleteUserComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"user-permission/:id\", component: UserPermissionComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"user-location/:id\", component: UserLocationComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"showUserLocation/:id\", component: ShowUserLocationComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"invite\", component: InviteComponent , data: {roles: ['Super Admin', 'Site Admin']} },\n//       { path: \"resendEmail/:id\", component: ResendEmailComponent , data: {roles: ['Super Admin', 'Site Admin']}  },\n//     ]\n//   },\n//   { path: \"search\", component: SearchComponent},\n//   { path: \"authority\", component: AddSiteComponent, data: {roles: ['Super Admin', 'Site Admin']} },\n//   { path: \"request\", component: RequestComponent },\n//   { path: \"app-login\", component: LoginComponent },\n//   { path: \"contact-us\", component: ContactUsComponent },\n//   { path: \"report\", component: ReportComponent },\n//   { path: \"schedule\", component: ScheduleComponent },\n//   { path: \"user-report\", component: UserReportComponent },\n//   { path: \"company-report\", component: CompanyReportComponent },\n//   { path: \"register\", component: RegisterComponent },\n//   { path: \"forgotpassword\", component: ForgotpasswordComponent },\n//   { path: \"resetPassword\", component: ResetPasswordComponent },\n//   { path: \"help\", component: HelpComponent },\n//   { path: \"**\", component: PageNotFoundComponent },\n\n// ];\n\nexport const routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'product-location', component: ProductLocationComponent },\n      { path: 'user-profile/:id', component: UserProfileComponent },\n      { path: 'authority', component: AuthorityComponent },\n      { path: 'users', component: UsersComponent },\n      { path: 'create-user', component: CreateUserComponent },\n      { path: 'update-user/:id', component: UpdateUserComponent },\n      { path: 'delete-user', component: DeleteUserComponent },\n      { path: 'user-permission/:id', component: UserPermissionComponent },\n      { path: 'user-location/:id', component: UserLocationComponent },\n      { path: 'showUserLocation/:id', component: ShowUserLocationComponent },\n      { path: 'invite', component: InviteComponent },\n      { path: 'resendEmail/:id', component: ResendEmailComponent },\n      { path: 'request', component: RequestComponent },\n      { path: 'inventory-product', component: InventoryProductComponent },\n      { path: 'edit-product', component: EditProductComponent },\n      { path: 'create-product', component: CreateProductComponent },\n      { path: 'authorityTree', component: AuthorityTreeComponent },\n      { path: 'report', component: ReportComponent },\n      { path: 'schedule', component: ScheduleComponent },\n      { path: 'user-report', component: UserReportComponent },\n      { path: 'company-report', component: CompanyReportComponent },\n    ]\n  },\n\n  {\n    path: 'completeuserregistration/:id',\n    component: CompleteuserregistrationComponent\n  },\n  { path: 'search', component: SearchComponent },\n  { path: 'login', outlet: 'modal', component: LoginComponent },\n  { path: 'contact-us', component: ContactUsComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'forgotpassword', component: ForgotpasswordComponent },\n  { path: 'resetPassword', component: ResetPasswordComponent },\n  // { path: 'help', component: HelpComponent },\n\n  { path: '**', redirectTo: 'search', pathMatch: 'full' },\n  { path: 'search', component: SearchComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductAliasComponent,\n    NavComponent,\n    ManufacturerComponent,\n    ProductComponent,\n    OrderListComponent,\n    ProductListComponent,\n    CreateProductComponent,\n    ProductDetailComponent,\n    TreeCheckboxComponent,\n    LoginComponent,\n    RegisterComponent,\n    InviteComponent,\n    UsersComponent,\n    UserPermissionComponent,\n    UserLocationComponent,\n    ShowUserLocationComponent,\n    UpdateUserComponent,\n    CreateUserComponent,\n    DeleteUserComponent,\n    CompleteuserregistrationComponent,\n    UserProfileComponent,\n    ForgotpasswordComponent,\n    ResetPasswordComponent,\n    ResendEmailComponent,\n    Level3authComponent,\n    NavResponsiveComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidenavListComponent,\n    ProductLocationComponent,\n    HasRoleDirective,\n    AddSiteComponent,\n    AuthorityComponent,\n    EditSiteComponent,\n    AddLocationComponent,\n    AddDepartmentComponent,\n    AddSubDepartmentComponent,\n    AddFloorComponent,\n    ReportComponent,\n    GenerateComponent,\n    ScheduleComponent,\n    SearchComponent,\n    ProductPageComponent,\n    RequestComponent,\n    UserReportComponent,\n    CompanyReportComponent,\n    ReportMenuComponent,\n    AuthLevelsComponent,\n    HelpComponent,\n    ContactUsComponent,\n    RequestConfirmComponent,\n    PageNotFoundComponent,\n    InventoryProductComponent,\n    EditProductComponent,\n    ManufacturerfilterComponent,\n    LocationfilterComponent,\n    ProductCasfilterComponent,\n    CreateManufacturerComponent,\n    EditManufacturerComponent,\n    ContactLocationComponent,\n    InventoryDetailComponent,\n    InventoryVendorapiDetailComponent,\n    InventoryEditComponent,\n    ExportListComponent,\n    ProductLabelComponent,\n    LocationTreeComponent,\n    AuthorityTreeComponent,\n    CreateSecondarynameComponent,\n    UpdateSecondarynameComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    MaterialModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatListModule,\n    MatDividerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatTreeModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatStepperModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['https://localhost:44309']\n        // whitelistedDomains: ['https://ohssdsapidev.azurewebsites.net']\n      }\n    })\n  ],\n  providers: [\n    AuthGuard,\n    ApiService,\n    AuthService,\n    UserService,\n    ContactUsService,\n    AlertifyService,\n    AuthInterceptor,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    PaginationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    AddSiteComponent,\n    EditSiteComponent,\n    AddLocationComponent,\n    AddDepartmentComponent,\n    AddSubDepartmentComponent,\n    AddFloorComponent,\n    GenerateComponent,\n    ScheduleComponent,\n    AddLocationComponent,\n    ProductPageComponent,\n    RequestConfirmComponent,\n    ProductLocationComponent,\n    CreateManufacturerComponent,\n    InventoryDetailComponent,\n    InventoryVendorapiDetailComponent,\n    EditManufacturerComponent,\n    InventoryEditComponent,\n    ExportListComponent,\n    ProductLabelComponent,\n    UserProfileComponent,\n    LoginComponent,\n    CreateSecondarynameComponent,\n    UpdateSecondarynameComponent\n    // ResendEmailComponent\n  ]\n})\nexport class AppModule {\n  constructor(router: Router) {\n    // Use a custom replacer to display function names in the route configs\n    // const replacer = (key, value) => (typeof value === 'function') ? value.name : value;\n    // console.log('Routes: ', JSON.stringify(router.config, replacer, 2));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aC1sZXZlbHMvYXV0aC1sZXZlbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Select Location </p>\\n\\n  <mat-dialog-content>\\n    <form #editSiteForm (ngSubmit)=\\\"null\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Parent Site\\\" (selectionChange)=\\\"onUserSelectTop()\\\" [(value)]=\\\"selectedAuthority\\\" required> \\n              <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                {{authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected first</mat-hint>\\n          </mat-form-field>\\n\\n      <div class=\\\"new-site\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\" required>\\n            <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\">\\n              {{level1authority.name}}\\n            </mat-option>\\n            <mat-hint>This must be selected second</mat-hint>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\" required>\\n            <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n              {{level2authority.name}}\\n            </mat-option>\\n            <mat-hint>This must be selected third</mat-hint>\\n          </mat-select>\\n        </mat-form-field> \\n\\n\\n      </div>\\n\\n    </form>\\n  </mat-dialog-content>\\n  \\n</mat-card>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { UserService } from '../_service/user.service';\nimport { LocationService } from '../_service/location.service';\n\n@Component({\n  selector: 'app-auth-levels',\n  templateUrl: './auth-levels.component.html',\n  styleUrls: ['./auth-levels.component.css']\n})\nexport class AuthLevelsComponent implements OnInit {\n\n  authorities;\n  @Input() selectedAuthority;\n  @Output() selectedAuthorityChange = new EventEmitter();\n  newSiteName;\n  \n  level1Authorities;\n  @Input() selectedLevel1Authority;\n  @Output() selectedLevel1AuthorityChange = new EventEmitter();\n\n  \n  level2Authorities;\n  @Input() selectedLevel2Authority;\n  @Output() selectedLevel2AuthorityChange = new EventEmitter();\n\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n  constructor(\n    private userService: UserService,\n    private locationService: LocationService,\n  ) { }\n\n  @Input() topLevel: string;\n  ngOnInit() {\n    this.getAuthorityNames();\n  }\n\n  getAuthorityNames() {\n    //console.log('in getauthorityname of invitecomponent ' + this.authorities);\n    return this.userService.getAllTopAuthorities().subscribe(res => {\n      //console.log(res);\n      this.authorities = res;\n      //console.log('This is from getAuthorityNames ' + this.selectedAuthority)\n      //console.log(res)\n    });\n  }\n\n  getLevel1DropDown() {\n    //console.log()\n    return this.userService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n      //console.log(res)\n    });\n  }\n\n  getLevel2DropDown() {\n    //console.log()\n    return this.userService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n      this.level2Authorities = res;\n      //console.log(res)\n    });\n  }\n\n  onUserSelectTop() {\n    console.log('top level select is ' + this.selectedAuthority);\n    this.selectedAuthorityChange.emit(this.selectedAuthority);\n    this.getLevel1DropDown();\n  }\n  onUserSelectLevel1(event) {\n    // console.log('from onUserSelectlevel1() function ' + event.value);\n    this.selectedLevel1AuthorityChange.emit(this.selectedLevel1Authority);\n    console.log('l1 is ' + this.selectedLevel1Authority);\n    this.getLevel2DropDown();\n  }\n\n  onUserSelectLevel2(event) {\n    console.log('from onUserSelectlevel2() function ' + event.value);\n    console.log('l2 is ' + this.selectedLevel2Authority);\n    this.selectedLevel2AuthorityChange.emit(this.selectedLevel2Authority);\n    // this.getLevel3DropDown();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2FkZC1kZXBhcnRtZW50L2FkZC1kZXBhcnRtZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Add Department </p>\\n\\n  <mat-dialog-content>\\n    <form #editSiteForm (ngSubmit)=\\\"addDepartment()\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Parent Site\\\" (selectionChange)=\\\"onUserSelectTop()\\\" [(value)]=\\\"selectedAuthority\\\" required> \\n              <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                {{authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected first</mat-hint>\\n          </mat-form-field>\\n\\n      <div class=\\\"new-site\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\" required>\\n            <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\">\\n              {{level1authority.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-hint>This must be selected second</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\" required>\\n            <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n              {{level2authority.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-hint>This must be selected third</mat-hint>\\n        </mat-form-field> \\n\\n        <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n          <input matInput placeholder=\\\"New Site Name\\\" [(ngModel)]=\\\"newSiteName\\\" name=\\\"newSiteName\\\" required>\\n        </mat-form-field>\\n\\n      </div>\\n      <mat-dialog-actions>\\n        <button  mat-raised-button\\n        type=\\\"submit\\\"\\n        color=\\\"primary\\\"\\n          >SUBMIT</button>\\n        <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n      </mat-dialog-actions>\\n    </form>\\n  </mat-dialog-content>\\n  \\n</mat-card>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { UserService } from \"src/app/_service/user.service\";\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray} from '@angular/forms';\nimport { CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY } from '@angular/cdk/overlay/typings/overlay-directives'; \nimport { LocationService } from 'src/app/_service/location.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n\n\n@Component({\n  selector: 'app-add-department',\n  templateUrl: './add-department.component.html',\n  styleUrls: ['./add-department.component.css']\n})\nexport class AddDepartmentComponent implements OnInit {\n\n  authorities;\n  selectedAuthority;\n  newSiteName;\n  level1Authorities;\n  selectedLevel1Authority;\n  level2Authorities;\n  selectedLevel2Authority;\n\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private userService: UserService,\n    private locationService: LocationService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.getAllTopAuthority();\n  }\n\n  getAllTopAuthority() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    })\n  }\n\n  getLevel1DropDown() {\n    console.log(\"get level1 dropdown called, selectedAuth \" + this.selectedAuthority);\n    return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n      //console.log(res)\n    });\n  }\n\n  getLevel2DropDown() {\n    //console.log()\n    return this.locationService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n      this.level2Authorities = res;\n      //console.log(res)\n    });\n  }\n\n  onUserSelectTop() {\n    this.getLevel1DropDown();\n  }\n  onUserSelectLevel1(event) {\n    console.log('from onUserSelectlevel1() function ' + event.value);\n    this.getLevel2DropDown();\n  }\n\n  onUserSelectLevel2(event) {\n    console.log('from onUserSelectlevel2() function ' + event.value);\n    // this.getLevel3DropDown();\n  }\n\n  addDepartment() {\n    // we should have the rootAuthorityUnitId already\n    // we get the parentAuthorityUnitId which is this.selectedAuthority\n    // and the new authority which is this.newSiteName\n\n    if (this.selectedAuthority && this.newSiteName &&\n       this.selectedLevel1Authority && this.selectedLevel2Authority) {\n      console.log('selected value ' + this.selectedAuthority);\n      console.log('l1 ' + this.selectedLevel1Authority);\n      console.log('l2 ' + this.selectedLevel2Authority)\n      console.log('siteName ' + this.newSiteName);\n      this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel2Authority;\n      this.authorityInput.name = this.newSiteName;\n\n      return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n        this.alertify.success(\"Department Successfully added\");\n      }, error => {\n        this.alertify.error(\"Something went wrong\");\n      });\n\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2FkZC1mbG9vci9hZGQtZmxvb3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Add Sub-Department </p>\\n  \\n    <mat-dialog-content>\\n      <form #editSiteForm (ngSubmit)=\\\"addDepartment()\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <mat-select placeholder=\\\"Authority\\\" (selectionChange)=\\\"onUserSelectTop()\\\" [(value)]=\\\"selectedAuthority\\\" required> \\n                <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                  {{authority.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-hint>This must be selected first</mat-hint>\\n            </mat-form-field>\\n  \\n        <div class=\\\"new-site\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\">\\n                {{level1authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected second</mat-hint>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected third</mat-hint>\\n          </mat-form-field> \\n  \\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <mat-select placeholder=\\\"Department\\\" (selectionChange)=\\\"onUserSelectLevel3($event)\\\" [(value)] = \\\"selectedLevel3Authority\\\" required>\\n                <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n                  {{level3authority.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-hint>This must be selected forth</mat-hint>\\n            </mat-form-field> \\n\\n            <mat-form-field class=\\\"fullWidth\\\">\\n                <mat-select placeholder=\\\"Sub-Department\\\" (selectionChange)=\\\"onUserSelectLevel4($event)\\\" [(value)] = \\\"selectedLevel4Authority\\\" required>\\n                  <mat-option *ngFor=\\\"let level4authority of level4Authorities\\\" [value]=\\\"level4authority.authorityUnitId\\\">\\n                    {{level4authority.name}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-hint>This must be selected fifth</mat-hint>\\n              </mat-form-field> \\n\\n          <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n            <input matInput placeholder=\\\"New Floor\\\" [(ngModel)]=\\\"newSiteName\\\" name=\\\"newSiteName\\\" required>\\n          </mat-form-field>\\n        </div>\\n        <mat-dialog-actions>\\n          <button  mat-raised-button\\n          type=\\\"submit\\\"\\n          color=\\\"primary\\\"\\n            >SUBMIT</button>\\n          <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n        </mat-dialog-actions>\\n      </form>\\n    </mat-dialog-content>  \\n  </mat-card>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LocationService } from 'src/app/_service/location.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-floor',\n  templateUrl: './add-floor.component.html',\n  styleUrls: ['./add-floor.component.css']\n})\nexport class AddFloorComponent implements OnInit {\n\n  \n  authorities;\n  selectedAuthority;\n  newSiteName;\n  level1Authorities;\n  selectedLevel1Authority;\n  level2Authorities;\n  selectedLevel2Authority;\n  level3Authorities;\n  selectedLevel3Authority;\n  level4Authorities;\n  selectedLevel4Authority;\n\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private locationService: LocationService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.getAllTopAuthority();\n  }\n\n  getAllTopAuthority() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    })\n  }\n\n  getLevel1DropDown() {\n    console.log(\"get level1 dropdown called, selectedAuth \" + this.selectedAuthority);\n    return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n    });\n  }\n\n  getLevel2DropDown() {\n    return this.locationService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n      this.level2Authorities = res;\n    });\n  }\n\n  getLevel3DropDown() {\n    return this.locationService.level3DropDown(this.selectedLevel2Authority).subscribe(res => {\n      this.level3Authorities = res;\n    });\n  }\n\n  getLevel4DropDown() {\n    return this.locationService.level4DropDown(this.selectedLevel3Authority).subscribe(res => {\n      this.level4Authorities = res;\n    });\n  }\n\n\n  onUserSelectTop() {\n    this.getLevel1DropDown();\n  }\n  onUserSelectLevel1(event) {\n    console.log('from onUserSelectlevel1() function ' + event.value);\n    this.getLevel2DropDown();\n  }\n\n  onUserSelectLevel2(event) {\n    console.log('from onUserSelectlevel2() function ' + event.value);\n    this.getLevel3DropDown();\n  }\n\n  onUserSelectLevel3(event) {\n    console.log('from onUserSelectlevel3() function ' + event.value);\n    this.getLevel4DropDown();\n  }\n\n  onUserSelectLevel4(event) {\n    console.log('from onUserSelectlevel3() function ' + event.value);\n  }\n\n\n  addDepartment() {\n    // we should have the rootAuthorityUnitId already\n    // we get the parentAuthorityUnitId which is this.selectedAuthority\n    // and the new authority which is this.newSiteName\n\n    if (this.selectedAuthority && this.newSiteName && \n      this.selectedLevel1Authority && this.selectedLevel2Authority\n       && this.selectedLevel3Authority && this.selectedLevel4Authority) {\n      console.log('selected value ' + this.selectedAuthority);\n      console.log('l1 ' + this.selectedLevel1Authority);\n      console.log('l2 ' + this.selectedLevel2Authority)\n      console.log('siteName ' + this.newSiteName);\n      this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel2Authority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel3Authority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel4Authority;\n      this.authorityInput.name = this.newSiteName;\n\n      return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n        this.alertify.success(\"Floor Successfully added\");\n      }, error => {\n        this.alertify.error(\"Something went wrong\");\n      });\n\n    }\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2FkZC1sb2NhdGlvbi9hZGQtbG9jYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Add Location </p>\\n  \\n    <mat-dialog-content>\\n      <form #editSiteForm (ngSubmit)=\\\"addLocation()\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <mat-select placeholder=\\\"Parent Site\\\" (selectionChange)=\\\"onUserSelectTop()\\\" [(value)]=\\\"selectedAuthority\\\" required> \\n                <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                  {{authority.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-hint>This must be selected first</mat-hint>\\n            </mat-form-field>\\n        \\n        <div class=\\\"top-authority\\\">\\n          \\n        </div>\\n        <div class=\\\"new-site\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Current Locations\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\">\\n                {{level1authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected second</mat-hint>\\n          </mat-form-field>\\n  \\n          <!-- <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n              <mat-hint>This must be selected third</mat-hint>\\n            </mat-select>\\n          </mat-form-field>  -->\\n  \\n          <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n            <input matInput placeholder=\\\"New Location Name\\\" [(ngModel)]=\\\"newLocationName\\\" name=\\\"newSiteName\\\" required>\\n          </mat-form-field>\\n  \\n        </div>\\n        <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n          <button  mat-raised-button\\n          type=\\\"submit\\\"\\n          color=\\\"primary\\\"\\n            >SUBMIT</button>\\n            <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n        </mat-card-actions>\\n      </form>\\n    </mat-dialog-content>\\n    <!-- <mat-dialog-actions>\\n      <button mat-raised-button [mat-dialog-close]=\\\"addLocation()\\\" color=\\\"primary\\\">SUBMIT</button>\\n      <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n    </mat-dialog-actions> -->\\n  </mat-card>\\n  \"","import { Component, OnInit,  Inject} from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { UserService } from \"src/app/_service/user.service\";\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray} from '@angular/forms';\nimport { CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY } from '@angular/cdk/overlay/typings/overlay-directives'; \nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { LocationService } from 'src/app/_service/location.service';\n\n\n@Component({\n  selector: 'app-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.css']\n})\nexport class AddLocationComponent implements OnInit {\n\n  authorities;\n  selectedAuthority;\n  newLocationName;\n  level1Authorities;\n  selectedLevel1Authority;\n\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any,\n  private userService: UserService,\n  private fb: FormBuilder,\n  private locationService: LocationService,\n  private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.getAllTopAuthority();\n  }\n\n  getAllTopAuthority() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    })\n  }\n\n  getLevel1DropDown() {\n    console.log(\"get level1 dropdown called, selectedAuth \" + this.selectedAuthority);\n    return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n      //console.log(res)\n    });\n  }\n  // getLevel1DropDown() {\n  //   console.log(\"get level1 dropdown called, selectedAuth \" + this.selectedAuthority);\n  //   return this.userService.level1DropDown(this.selectedAuthority).subscribe(res => {\n  //     this.level1Authorities = res;\n  //     //console.log(res)\n  //   });\n  // }\n\n  onUserSelectTop() {\n    console.log('user select top ' + this.selectedAuthority);\n    this.getLevel1DropDown();\n  }\n  onUserSelectLevel1(event) {\n    console.log('from onUserSelectlevel1() function ' + event.value);\n    // this.getLevel2DropDown();\n  }\n\n  addLocation() {\n    // we should have the rootAuthorityUnitId already\n    // we also have level1AuthorityUnitId - not going to use\n    // we get the parentAuthorityUnitId which is this.selectedAuthority\n    // and the new location which is this.newLocationName\n\n    if (this.selectedAuthority && this.newLocationName && this.selectedLevel1Authority) {\n      console.log('selected value ' + this.selectedAuthority);\n      console.log('locationName ' + this.newLocationName);\n      console.log('Level 1: ' + this.selectedLevel1Authority);\n\n      this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel1Authority;\n      this.authorityInput.name = this.newLocationName;\n\n      return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n             this.alertify.success(\"Successfully added\");\n           }, error => {\n             this.alertify.error(\"Something went wrong\");\n           });\n        }\n    }\n    \n  }\n\n//   addSite() {\n\n//     console.log('addsite: ' + this.selectedAuthority);\n//     console.log('New Site Name: ' + this.newSiteName);\n//     this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n//     this.authorityInput.parentAuthorityUnitId = this.selectedAuthority;\n//     this.authorityInput.name = this.newSiteName;\n\n//     return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n//      this.alertify.success(\"Successfully added\");\n//    }, error => {\n//      this.alertify.error(\"Something went wrong\");\n//    });\n// }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2FkZC1zaXRlL2FkZC1zaXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Add Site </p>\\n\\n  <mat-dialog-content>\\n    <form #addSiteForm (ngSubmit)=\\\"addSite()\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Parent Site\\\" (selectionChange)=\\\"null\\\" [(value)]=\\\"selectedAuthority\\\" required>\\n              <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                {{authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n      <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Parent Site\\\" formControlName=\\\"parentSite\\\" required>\\n        </mat-form-field> -->\\n        <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n            <input matInput placeholder=\\\"Site Name\\\" [(ngModel)]=\\\"newSiteName\\\" name=\\\"newSiteName\\\" required>\\n          </mat-form-field>\\n          <!-- <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n              <input matInput placeholder=\\\"Enter Site Alias\\\" [(ngModel)]=\\\"newSiteName\\\" name=\\\"newSiteName\\\" required>\\n            </mat-form-field> -->\\n      <div class=\\\"top-authority\\\" class=\\\"fullWidth\\\">\\n        <!-- <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Authority\\\" (selectionChange)=\\\"updateSite($event)\\\" [(value)]=\\\"selectedAuthority\\\">\\n            <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n              {{authority.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field> -->\\n      </div>\\n      <div class=\\\"new-site\\\"></div>\\n      <!-- <button mat-raised-button [mat-dialog-close]=\\\"addSite()\\\" color=\\\"primary\\\">SUBMIT</button> -->\\n      <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n        <button  mat-raised-button\\n        type=\\\"submit\\\"\\n        color=\\\"primary\\\"\\n          >SUBMIT</button>\\n          <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n      </mat-card-actions>\\n\\n    </form>\\n  </mat-dialog-content>\\n</mat-card>\\n<!-- \\n<mat-card-actions style=\\\"margin-left: 5px;\\\">\\n  <button  mat-raised-button\\n    matTooltip=\\\"Press to assign\\\"\\n    aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">Assign</button>\\n    <button\\n    mat-raised-button\\n    style=\\\"margin-left: 5px;\\\"\\n    type=\\\"button\\\"\\n    routerLink=\\\"/users\\\"\\n  >\\n    Back\\n  </button>\\n</mat-card-actions> -->\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { UserService } from 'src/app/_service/user.service';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray} from '@angular/forms';\nimport { CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY } from '@angular/cdk/overlay/typings/overlay-directives';\nimport { LocationService } from 'src/app/_service/location.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n//import { AuthorityModel } from '../../_models/authority';\n\n@Component({\n  selector: 'app-add-site',\n  templateUrl: './add-site.component.html',\n  styleUrls: ['./add-site.component.css']\n})\nexport class AddSiteComponent implements OnInit {\n  authorities;\n  selectedAuthority;\n  siteAliasName;\n  newSiteName;\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private userService: UserService,\n    private locationService: LocationService,\n    private fb: FormBuilder,\n    private alertify: AlertifyService ) { }\n\n  ngOnInit() {\n    // this.getAuthorityNames();\n    this.getAllTopAuthority();\n  }\n\n\n\n \n\n  // getAuthorityNames() {\n  //   //console.log('in getauthorityname of invitecomponent ' + this.authorities);\n  //   return this.userService.getAllTopAuthorities().subscribe(res => {\n  //     //console.log(res);\n  //     this.authorities = res;\n  //     //console.log('This is from getAuthorityNames ' + this.selectedAuthority)\n  //     //console.log(res)\n  //   });\n  // }\n\n  getAllTopAuthority() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    })\n  }\n\n  // addSite(addSiteForm) {\n    addSite() {\n\n     console.log('addsite: ' + this.selectedAuthority);\n     console.log('New Site Name: ' + this.newSiteName);\n     this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n     this.authorityInput.parentAuthorityUnitId = this.selectedAuthority;\n     this.authorityInput.name = this.newSiteName;\n\n     return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n      this.alertify.success('Successfully added');\n    }, error => {\n      this.alertify.error('Something went wrong');\n    });\n}\n\n}\n\n\nexport interface AuthorityModel {\n  parentAuthorityUnitId: number,\n  rootAuthorityUnitId: number,\n  name: string,\n  authorityUnitOutsideId: string,\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2FkZC1zdWJEZXBhcnRtZW50L2FkZC1zdWJEZXBhcnRtZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Add Sub-Department </p>\\n  \\n    <mat-dialog-content>\\n      <form #editSiteForm (ngSubmit)=\\\"addDepartment()\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <mat-select placeholder=\\\"Authority\\\" (selectionChange)=\\\"onUserSelectTop()\\\" [(value)]=\\\"selectedAuthority\\\" required> \\n                <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\">\\n                  {{authority.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-hint>This must be selected first</mat-hint>\\n            </mat-form-field>\\n  \\n        <div class=\\\"new-site\\\">\\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\">\\n                {{level1authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected second</mat-hint>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\" required>\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-hint>This must be selected third</mat-hint>\\n          </mat-form-field> \\n  \\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <mat-select placeholder=\\\"Department\\\" (selectionChange)=\\\"onUserSelectLevel3($event)\\\" [(value)] = \\\"selectedLevel3Authority\\\" required>\\n                <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n                  {{level3authority.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-hint>This must be selected third</mat-hint>\\n            </mat-form-field> \\n\\n          <mat-form-field class=\\\"example-full-width fullWidth\\\">\\n            <input matInput placeholder=\\\"New Sub-Department\\\" [(ngModel)]=\\\"newSiteName\\\" name=\\\"newSiteName\\\" required>\\n          </mat-form-field>\\n        </div>\\n        <mat-dialog-actions>\\n          <button  mat-raised-button\\n          type=\\\"submit\\\"\\n          color=\\\"primary\\\"\\n            >SUBMIT</button>\\n          <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">CANCEL</button>\\n        </mat-dialog-actions>\\n      </form>\\n    </mat-dialog-content>  \\n  </mat-card>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LocationService } from 'src/app/_service/location.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-subDepartment',\n  templateUrl: './add-subDepartment.component.html',\n  styleUrls: ['./add-subDepartment.component.css']\n})\nexport class AddSubDepartmentComponent implements OnInit {\n\n  \n  authorities;\n  selectedAuthority;\n  newSiteName;\n  level1Authorities;\n  selectedLevel1Authority;\n  level2Authorities;\n  selectedLevel2Authority;\n  level3Authorities;\n  selectedLevel3Authority;\n\n  authorityInput = { \n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null,\n    name: ''\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private locationService: LocationService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.getAllTopAuthority();\n  }\n\n  getAllTopAuthority() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    })\n  }\n\n  getLevel1DropDown() {\n    console.log(\"get level1 dropdown called, selectedAuth \" + this.selectedAuthority);\n    return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n    });\n  }\n\n  getLevel2DropDown() {\n    return this.locationService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n      this.level2Authorities = res;\n    });\n  }\n\n  getLevel3DropDown() {\n    return this.locationService.level3DropDown(this.selectedLevel2Authority).subscribe(res => {\n      this.level3Authorities = res;\n    });\n  }\n\n  onUserSelectTop() {\n    this.getLevel1DropDown();\n  }\n  onUserSelectLevel1(event) {\n    console.log('from onUserSelectlevel1() function ' + event.value);\n    this.getLevel2DropDown();\n  }\n\n  onUserSelectLevel2(event) {\n    console.log('from onUserSelectlevel2() function ' + event.value);\n    this.getLevel3DropDown();\n  }\n\n  onUserSelectLevel3(event) {\n    console.log('from onUserSelectlevel3() function ' + event.value);\n    //this.getLevel3DropDown();\n  }\n\n  addDepartment() {\n    // we should have the rootAuthorityUnitId already\n    // we get the parentAuthorityUnitId which is this.selectedAuthority\n    // and the new authority which is this.newSiteName\n\n    if (this.selectedAuthority && this.newSiteName && \n      this.selectedLevel1Authority && this.selectedLevel2Authority && this.selectedLevel3Authority) {\n      // console.log('selected value ' + this.selectedAuthority);\n      // console.log('l1 ' + this.selectedLevel1Authority);\n      // console.log('l2 ' + this.selectedLevel2Authority)\n      // console.log('siteName ' + this.newSiteName);\n      this.authorityInput.rootAuthorityUnitId = this.selectedAuthority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel2Authority;\n      this.authorityInput.parentAuthorityUnitId = this.selectedLevel3Authority;\n      this.authorityInput.name = this.newSiteName;\n\n      return this.locationService.insertNewSite(this.authorityInput).subscribe(next => {\n        this.alertify.success(\"Sub-Department Successfully added\");\n      }, error => {\n        this.alertify.error(\"Something went wrong\");\n      });\n\n    }\n  }\n\n}\n","module.exports = \".container {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.search-select-left, .authority-left {\\n    width: 20%;\\n}\\n\\n.search-search-right, .authority-right {\\n    width: 75%;\\n}\\n\\n.search {\\n    height: 15%;\\n}\\n\\n.authority-two-columns {\\n    /* of the total screen */\\n    height: 70%; \\n    border: solid grey 1px;\\n}\\n\\n.authority-left, .authority-right {\\n    \\n    border: solid grey 1px;\\n    height: 90%;\\n    max-height: 350px;\\n    position: relative;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hdXRob3JpdHkvYXV0aG9yaXR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixXQUFXO0lBQ1gsc0JBQXNCO0FBQzFCOztBQUVBOztJQUVJLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2F1dGhvcml0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2VhcmNoLXNlbGVjdC1sZWZ0LCAuYXV0aG9yaXR5LWxlZnQge1xuICAgIHdpZHRoOiAyMCU7XG59XG5cbi5zZWFyY2gtc2VhcmNoLXJpZ2h0LCAuYXV0aG9yaXR5LXJpZ2h0IHtcbiAgICB3aWR0aDogNzUlO1xufVxuXG4uc2VhcmNoIHtcbiAgICBoZWlnaHQ6IDE1JTtcbn1cblxuLmF1dGhvcml0eS10d28tY29sdW1ucyB7XG4gICAgLyogb2YgdGhlIHRvdGFsIHNjcmVlbiAqL1xuICAgIGhlaWdodDogNzAlOyBcbiAgICBib3JkZXI6IHNvbGlkIGdyZXkgMXB4O1xufVxuXG4uYXV0aG9yaXR5LWxlZnQsIC5hdXRob3JpdHktcmlnaHQge1xuICAgIFxuICAgIGJvcmRlcjogc29saWQgZ3JleSAxcHg7XG4gICAgaGVpZ2h0OiA5MCU7XG4gICAgbWF4LWhlaWdodDogMzUwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"search\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"search-select-left\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"bottom\\\">\\n      <span>Sites</span>\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Create New\\\" (selectionChange)=\\\"onUserSelectAddNew(selectedAddNewSite)\\\" [(value)]=\\\"selectedAddNewSite\\\">\\n          <mat-option *ngFor=\\\"let site of sites\\\" [value]=\\\"site.value\\\" >\\n            {{site.viewValue}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n    <div gdArea=\\\"right-content\\\" gdColumn=\\\"2 / span 2\\\" >\\n    \\n      <div fxLayout fxLayoutAlign=\\\"center center\\\">\\n        <mat-form-field fxFlex=\\\"40%\\\">\\n          <input [disabled]=\\\"authorityFilter\\\" matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" />\\n        </mat-form-field>\\n      </div>\\n  \\n      <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"width:98%; margin: 5px auto\\\">\\n\\n    <div class=\\\"right-70\\\">\\n        <div *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n            <mat-progress-bar color=\\\"primary\\\"  mode=\\\"indeterminate\\\"></mat-progress-bar>\\n          </div>\\n      <mat-table\\n        #Table\\n        [dataSource]=\\\"MyDataSource\\\"\\n        matSort\\n        style=\\\"max-height: 98%;\\\"\\n      >\\n        <ng-container matColumnDef=\\\"Authority\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Authority\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.topLevelName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Site\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Site\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.subTopLevelName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Location\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Location\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.hospitalLevelName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Department\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Department\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.departmentLevelName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Sub-Department\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Sub-Department\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.departmentLevelChildName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Floor\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n            Floor\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let authority\\\">\\n            {{ authority.floorLevelName }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Edit\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n              Edit\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let authority\\\">\\n              <mat-icon\\n                style=\\\"cursor: pointer\\\"\\n                (click)=\\\"openSiteEditPage(authority)\\\"\\n                >edit</mat-icon\\n              >\\n            </mat-cell>\\n          </ng-container>\\n\\n        <mat-header-row\\n          *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"\\n        ></mat-header-row>\\n        <mat-row\\n          *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n          (click)=\\\"selectRow(row)\\\"\\n        ></mat-row>\\n      </mat-table>\\n\\n      <mat-paginator\\n        #paginator\\n        [pageSize]=\\\"15\\\"\\n        [pageSizeOptions]=\\\"[15, 50, 100]\\\"\\n      >\\n      </mat-paginator>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, MatTable } from '@angular/material';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { UserService } from '../_service/user.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AddSiteComponent } from './add-site/add-site.component';\nimport { EditSiteComponent } from './edit-site/edit-site.component';\nimport { AddLocationComponent } from './add-location/add-location.component';\nimport { AddDepartmentComponent } from './add-department/add-department.component';\nimport { AuthoritytreeService } from '../_service/authoritytree.service';\nimport { AddSubDepartmentComponent } from './add-subDepartment/add-subDepartment.component';\nimport { AddFloorComponent } from './add-floor/add-floor.component';\nimport { LocationService } from '../_service/location.service';\n\n@Component({\n  selector: 'authority',\n  templateUrl: './authority.component.html',\n  styleUrls: ['./authority.component.css']\n})\nexport class AuthorityComponent implements OnInit {\n \n  \n  constructor(\n    private userService: UserService,\n    private locationService: LocationService,\n    private alertify: AlertifyService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private authorityTreeService: AuthoritytreeService\n  ) {}\n\n  MyDataSource: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  isLoading = false;\n\n    dataSource: any;\n    selectedAddNewSite;  \n    authority: any = [];\n    allAuthorities: any = [];\n    authorities;\n    authorityFilter = true;\n    authArrayIds:any = [];\n    authTreeArray:any =  [];\n    authorityTree;\n    level1Authorities;\n    level2Authorities;\n    level3Authorities;\n    public selectedAuthority: any;\n    public selectedLevel1Authority: any;\n    public selectedLevel2Authority: any;\n    public selectedLevel3Authority: any;\n    departmentCount: number;\n    hideLevel3DropDown: boolean;\n\n  sites = [\n    { value: 'Site', viewValue : 'Site' },\n    { value: 'Location', viewValue : 'Location' },\n    { value: 'Department', viewValue : 'Department' },\n    { value: 'Sub-Department', viewValue : 'Sub-Department' },\n    { value: 'Floor', viewValue : 'Floor' }\n  ];\n\n  displayedColumns: string[] = [\n    'Authority',\n    'Site',\n    'Location',\n    'Department',\n    'Sub-Department',\n    'Floor',\n    'Edit'\n  ];\n\n  ngOnInit() {\n    this.getAllAuthorityLocations();\n    this.MyDataSource = new MatTableDataSource();\n  }\n\n  applyFilter(filterValue: string) {\n    this.MyDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\nopenDiaglog1(authority) {\n  const dialogRef = this.dialog.open(AddSiteComponent, {\n    data: {\n      authority: authority\n    }\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  })\n}\n\nopenDiaglogEdit(authority) {\n\n  this.editClick(authority.topLevelId);\n  const dialogRef = this.dialog.open(EditSiteComponent, {\n    data: {\n      authority: authority\n    }\n  });\n  console.log('openDialogEdit topLevelName' + authority.topLevelName);\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\nopenDialogLocation(authority) {\n  \n  const dialogRef = this.dialog.open(AddLocationComponent, {\n    data: {\n      authority: authority\n    }\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\nopenDialogDepartment(authority) {\n  const dialogRef = this.dialog.open(AddDepartmentComponent, {\n    data: {\n      authority: authority\n    }\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\nopenDialogSubDepartment(authority) {\n  const dialogRef = this.dialog.open(AddSubDepartmentComponent, {\n    data: {\n      authority: authority\n    }\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\nopenDialogFloor(authority) {\n  const dialogRef = this.dialog.open(AddFloorComponent, {\n    data: {\n      authority: authority\n    }\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\n\n  onUserSelectAddNew(userSelection) {\n\n    if (userSelection === 'Site') {\n      console.log('addnew site, user select : ' + userSelection);\n      this.openDiaglog1('myAuthority')\n    } else if (userSelection === 'Location') {\n      console.log('addnew location, user select : ' + userSelection);\n      this.openDialogLocation(userSelection);\n    } else if (userSelection === 'Department') {\n      console.log('addnew department, user select : ' + userSelection);\n      this.openDialogDepartment('my authority');\n    } else if (userSelection === 'Sub-Department') {\n      console.log('addnew sub-department, user selected : ' + userSelection);\n      this.openDialogSubDepartment('authority');\n    } else if (userSelection === 'Floor') {\n      console.log('addnew floor, user selected : ' + userSelection);\n      this.openDialogFloor('authority');\n  }\n}\n\n  getAllAuthorityLocations() {\n    this.isLoading = true;\n\n    this.authorityTreeService.getAllAuthorityLocations().subscribe(\n      res => {\n        this.authority = res;\n        this.authority.forEach(element => {\n          this.allAuthorities.push(element);\n        });\n        this.MyDataSource = new MatTableDataSource(this.authority);\n        this.MyDataSource.data = this.allAuthorities;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n        this.isLoading = false;\n        this.authorityFilter = false;\n      },\n      error => {\n        console.log('There was an error: ' + error);\n        this.isLoading = false;\n      }\n    );\n  }\n\n\n  selectRow(row) {\n    // console.warn(row);\n    // console.log(row.productId);\n    // this.openDiaglogProductPage(row);\n  }\n\n  onUserSelectLevel1(event) {\n    this.getLevel2DropDown();\n  }\n\n  onUserSelectLevel2(event) {\n    this.getLevel3DropDown();\n  }\n\n  onUserSelectTopLevel(selectedAuthority) {\n    this.getLevel1DropDown();\n   }\n\n   getLevel1DropDown() {\n    return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n      this.level1Authorities = res;\n  });\n  }\n\n  getLevel2DropDown() {\n    return this.locationService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n      this.level2Authorities = res;\n  });\n  }\n\n  getLevel3DropDown() {\n    this.departmentCount = 0;\n    if (this.departmentCount == 0) {\n      this.hideLevel3DropDown = true;\n    } \n    return this.locationService.level3DropDown(this.selectedLevel2Authority).subscribe(res => {\n      this.level3Authorities = res;\n  });\n  }\n\n  editClick(rootAuthorityUnitId) {\n    //console.log(\"Edit was clicked hospitalName \" + authority.hospitalLevelName);\n    return this.authorityTreeService.buildAuthorityTree(rootAuthorityUnitId).subscribe(\n      res => {\n        this.authorityTree = res;\n        this.authorityTree.forEach(element => {          \n          this.authTreeArray.push(element);\n        });\n        \n        this.MyDataSource = new MatTableDataSource();\n        // this.MyDataSource.data = res;\n        this.MyDataSource.data = this.authTreeArray;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n        // this.authorityTree = res; \n\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  openSiteEditPage(authority) {\n    console.log(\"openSiteEditPage()\" + authority);\n    const dialogRef = this.dialog.open(EditSiteComponent, {\n      // width: '1000px',\n      data: {\n        authority: authority\n    }\n    });\n  }\n\n  deleteSite(authority) {\n    console.log(authority.topLevelId + ' delete clicked, what should i delete, authority? dept? hospital?')\n  }\n\n}\n\n\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXV0aG9yaXR5L2VkaXQtc2l0ZS9lZGl0LXNpdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <!-- \\n  <p>{{passedData.authority.topLevelName}}</p>\\n  <p>{{passedData.authority.subTopLevelName}}</p>\\n  <p>{{passedData.authority.hospitalLevelName}}</p>\\n  <p>{{passedData.authority.departmentLevelName}}</p> \\n  -->\\n  <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Edit Authority </p>\\n\\n  <mat-dialog-content>\\n        <form\\n        #editSiteForm=\\\"ngForm\\\"\\n        (submit)=\\\"updateSite()\\\"\\n        id=\\\"editSiteForm\\\"\\n      >\\n              <mat-form-field class=\\\"fullWidth\\\" value=\\\"selected\\\" *appHasRole=\\\"['Super Admin']\\\">\\n                  <mat-icon style=\\\"cursor: pointer\\\" *ngIf=\\\"subTopLevelName == 'N/A'\\\">close</mat-icon>\\n                <input matInput placeholder=\\\"Authority\\\" [(ngModel)]=\\\"topLevelName\\\"  name=\\\"topLevelName\\\"\\n                  value={{passedData.authority.topLevelName}}>\\n              </mat-form-field>\\n\\n              <mat-form-field class=\\\"fullWidth\\\" value=\\\"selected\\\" *appHasRole=\\\"['Site Admin']\\\">\\n                <input matInput placeholder=\\\"Authority\\\" [(ngModel)]=\\\"topLevelName\\\"  name=\\\"topLevelName\\\"\\n                  value={{passedData.authority.topLevelName}} [readonly]=true>\\n              </mat-form-field>\\n\\n              <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"subTopLevelName !== 'N/A'\\\">\\n                <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"deleteSite(subTopLevelId)\\\" *ngIf=\\\"hospitalLevelName == 'N/A'\\\">close</mat-icon>\\n                <input matInput placeholder=\\\"Site\\\" [(ngModel)]=\\\"subTopLevelName\\\" name=\\\"subTopLevelName\\\"\\n                  value={{passedData.authority.subTopLevelName}}>\\n              </mat-form-field>\\n\\n              <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"hospitalLevelName !== 'N/A'\\\">\\n                <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"deleteSite(hospitalLevelId)\\\" *ngIf=\\\"departmentLevelName == 'N/A'\\\">close</mat-icon>\\n                <input matInput placeholder=\\\"Location\\\" [(ngModel)]=\\\"hospitalLevelName\\\"  name=\\\"hospitalLevelName\\\"\\n                  value={{passedData.authority.hospitalLevelName}}>\\n              </mat-form-field>\\n\\n              <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"departmentLevelName !== 'N/A'\\\">\\n                <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"deleteSite(departmentLevelId)\\\" *ngIf=\\\"departmentLevelChildName == 'N/A'\\\">close</mat-icon>\\n                <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"departmentLevelName\\\" name=\\\"departmentLevelName\\\"\\n                  value={{passedData.authority.departmentLevelName}} >\\n              </mat-form-field>\\n             \\n              <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"departmentLevelChildName !== 'N/A'\\\">\\n                <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"deleteSite(departmentLevelChildId)\\\" *ngIf=\\\"floorLevelName == 'N/A'\\\">close</mat-icon>\\n                  <input matInput placeholder=\\\"Sub-Department\\\" [(ngModel)]=\\\"departmentLevelChildName\\\" name=\\\"departmentLevelChildName\\\"\\n                    value={{passedData.authority.departmentLevelChildName}}>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"floorLevelName !== 'N/A'\\\">\\n                  <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"deleteSite(floorLevelId)\\\">close</mat-icon>\\n                    <input matInput placeholder=\\\"Floor\\\" [(ngModel)]=\\\"floorLevelName\\\" name=\\\"floorLevelName\\\"\\n                      value={{passedData.authority.floorLevelName}}>\\n                  \\n                  </mat-form-field>\\n\\n                  <button\\n        mat-raised-button\\n        style=\\\"margin-right:2%;\\\"\\n        type=\\\"submit\\\"\\n        form=\\\"editSiteForm\\\"\\n      >\\n        Save\\n      </button>\\n  \\n      <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n        Close\\n      </button>\\n                  <!-- <mat-dialog-actions >\\n                      <button mat-raised-button (onclick)=\\\"updateSite()\\\" color=\\\"primary\\\">SUBMIT</button>\\n                      <button mat-raised-button  [mat-dialog-close]=\\\"false\\\" class=\\\"spacer-left\\\" color=\\\"warn\\\">CANCEL</button>\\n                    </mat-dialog-actions> -->\\n    </form>\\n  </mat-dialog-content>\\n  \\n</mat-card>\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatTableDataSource,\n  MatSort,\n  MatPaginator,\n  MatTable\n} from '@angular/material';\nimport { UserService } from 'src/app/_service/user.service';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport { CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY } from '@angular/cdk/overlay/typings/overlay-directives';\nimport { AuthoritytreeService } from 'src/app/_service/authoritytree.service';\nimport { LocationService } from 'src/app/_service/location.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-site',\n  templateUrl: './edit-site.component.html',\n  styleUrls: ['./edit-site.component.css']\n})\nexport class EditSiteComponent implements OnInit {\n  isLoading = false;\n  authorities;\n  authArray: any[];\n  selectedAuthority;\n  newSiteName;\n  authority: any = [];\n  allAuthorities: any = [];\n  MyDataSource: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private userService: UserService,\n    private fb: FormBuilder,\n    private locationService: LocationService,\n    private authorityTreeService: AuthoritytreeService,\n    private alertify: AlertifyService\n  ) { }\n\n  topLevelId = this.passedData.authority.topLevelId;\n  topLevelName = this.passedData.authority.topLevelName;\n  subTopLevelId = this.passedData.authority.subTopLevelId;\n  subTopLevelName = this.passedData.authority.subTopLevelName;\n  hospitalLevelId = this.passedData.authority.hospitalLevelId;\n  hospitalLevelName = this.passedData.authority.hospitalLevelName;\n  departmentLevelId = this.passedData.authority.departmentLevelId;\n  departmentLevelName = this.passedData.authority.departmentLevelName;\n  departmentLevelChildId = this.passedData.authority.departmentLevelChildId;\n  departmentLevelChildName = this.passedData.authority.departmentLevelChildName;\n  floorLevelId = this.passedData.authority.floorLevelId;\n  floorLevelName = this.passedData.authority.floorLevelName;\n  is_edit: boolean;\n\n  model = {\n    topLevelId: this.topLevelId,\n    topLevelName: this.topLevelName,\n    subTopLevelId: this.subTopLevelId,\n    subTopLevelName: this.subTopLevelName,\n    hospitalLevelId: this.hospitalLevelId,\n    hospitalLevelName: this.hospitalLevelName,\n    departmentLevelId: this.departmentLevelId,\n    departmentLevelName: this.departmentLevelName,\n    departmentLevelChildId: this.departmentLevelChildId,\n    departmentLevelChildName: this.departmentLevelChildName,\n    floorLevelId: this.floorLevelId,\n    floorLevelName: this.floorLevelName\n  };\n\n  Id: number;\n  // model: any = {};\n  deleteModel: any = {};\n\n  ngOnInit() {\n    this.getAllAuthorityLocations();\n    this.MyDataSource = new MatTableDataSource();\n\n    // console.log(\"topLevelId: \" + this.topLevelId);\n    // console.log(\"topLevelName: \" + this.topLevelName);\n    // console.log(\"subTopLevelId: \" + this.subTopLevelId);\n    // console.log(\"subTopLevelName: \" + this.subTopLevelName);\n    // console.log(\"hospitalLevelId: \" + this.hospitalLevelId);\n    // console.log(\"hospitalLevelName: \" + this.hospitalLevelName);\n    // console.log(\"departmentLevelId: \" + this.departmentLevelId);\n    // console.log(\"departmentLevelName: \" + this.departmentLevelName);\n    // console.log(\"departmentLevelChildId: \" + this.departmentLevelChildId);\n    // console.log(\"departmentLevelChildName: \" + this.departmentLevelChildName);\n    // console.log(\"floorLevelId: \" + this.floorLevelId);\n    // console.log(\"floorLevelName: \" + this.floorLevelName);\n  }\n\n  getAllAuthorityLocations() {\n    this.isLoading = true;\n\n    this.authorityTreeService.getAllAuthorityLocations().subscribe(\n      res => {\n        this.authority = res;\n        this.authority.forEach(element => {\n          this.allAuthorities.push(element);\n        });\n        this.MyDataSource = new MatTableDataSource(this.authority);\n        this.MyDataSource.data = this.allAuthorities;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n\n        this.isLoading = false;\n      },\n      error => {\n        console.log('There was an error: ' + error);\n        this.isLoading = false;\n      }\n    );\n  }\n\n  deleteSite(id) {\n    var prompt = confirm('Are you sure you want to delete this location?');\n    if (prompt) {\n    return this.locationService.removeLocation(id).subscribe(\n      res => {\n        this.deleteModel = res;\n        console.log('deleteModel' + this.deleteModel);\n        this.alertify.success('Location successfully deleted');\n      },\n      error => {\n        this.alertify.error('Something went wrong, please try again');\n      });\n    }\n  }\n\n  updateSite() {\n    this.model.topLevelName = this.topLevelName;\n\n    if (this.subTopLevelId === 0) {\n      this.model.subTopLevelId = null;\n      this.model.subTopLevelName = null;\n    } else {\n      this.model.subTopLevelName = this.subTopLevelName;\n    }\n    if (this.hospitalLevelId === 0) {\n      this.model.hospitalLevelId = null;\n      this.model.hospitalLevelName = null;\n    } else {\n      this.model.hospitalLevelName = this.hospitalLevelName;\n    }\n    if (this.departmentLevelId === 0) {\n      this.model.departmentLevelId = null;\n      this.model.departmentLevelName = null;\n    } else {\n      this.model.departmentLevelName = this.departmentLevelName;\n    }\n    if (this.departmentLevelChildId === 0) {\n      this.model.departmentLevelChildId = null;\n      this.model.departmentLevelChildName = null;\n    } else {\n      this.model.departmentLevelChildName = this.departmentLevelChildName;\n    }\n    if (this.floorLevelId === 0) {\n      this.model.floorLevelId = null;\n      this.model.floorLevelName = null;\n    } else {\n      this.model.floorLevelName = this.floorLevelName;\n    }\n\n    return this.locationService.updateLocations(this.model).subscribe(\n      res => {\n        // this.model = res;\n        this.getAllAuthorityLocations();\n\n        this.alertify.success('Location successfully update');\n      },\n      error => {\n        this.alertify.error('Something went wrong, please try again');\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcGxldGV1c2VycmVnaXN0cmF0aW9uL2NvbXBsZXRldXNlcnJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"form-style\\\">\\n  <form\\n    #completeRegistrationForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"completeRegistration()\\\"\\n    id=\\\"completeRegistrationForm\\\"\\n  >\\n    <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Complete User Registration</mat-card-title\\n    >\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input matInput placeholder=\\\"Email\\\" value=\\\"{{ identityUser?.email }}\\\" readonly />\\n      <mat-hint>Readonly field</mat-hint>\\n    </mat-form-field>\\n<!-- \\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"First Name\\\"\\n        name=\\\"firstName\\\"\\n        [(ngModel)]=\\\"user.firstName\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Last Name\\\"\\n        name=\\\"lastName\\\"\\n        [(ngModel)]=\\\"user.lastName\\\"\\n      />\\n    </mat-form-field> -->\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Enter your password\\\"\\n        [type]=\\\"hide ? 'password' : 'text'\\\"\\n        required\\n        name=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\"\\n      />\\n      <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n        hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n      }}</mat-icon>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Confirm your password\\\"\\n        [type]=\\\"hide ? 'password' : 'text'\\\"\\n        [(ngModel)]=\\\"confirmPassword\\\"\\n        required\\n        name=\\\"confirmPassword\\\"\\n      />\\n      <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n        hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n      }}</mat-icon>\\n    </mat-form-field>\\n\\n    <button\\n      mat-raised-button\\n      style=\\\"margin-left: 5px;\\\"\\n      type=\\\"button\\\"\\n      routerLink=\\\"/users\\\"\\n    >\\n      Back\\n    </button>\\n\\n    <button\\n      mat-raised-button\\n      style=\\\"margin-left: 5px;\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"!completeRegistrationForm.dirty\\\"\\n      form=\\\"completeRegistrationForm\\\"\\n    >\\n      Submit\\n    </button>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_service/user.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../_models/user';\nimport { IdentityUser } from '../_models/identityUser';\n\n@Component({\n  selector: 'completeuserregistration',\n  templateUrl: './completeuserregistration.component.html',\n  styleUrls: ['./completeuserregistration.component.css']\n})\nexport class CompleteuserregistrationComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n    hide = true;\n    password;\n    confirmPassword;\n//user: IdentityUser;\n    // user1 = {\n    //   userId: null,\n    //   emailAddress: '',\n    //     firstName: '',\n    //     lastName: '',\n    //     userType: '',\n    //     addressLine1: '',\n    //     addressLine2: '',\n    //     country: '',\n    //     city: '',\n    //     state: '',\n    //     createdOn: null,\n    //     faxNumber: '',\n    //     phoneNumber: '',\n    //     postalCode: '',\n    // };\n    \n    identityUser: IdentityUser = {\n      email: '',\n    };\n    \n    user = {\n      userOutsideId: '',\n      password: ''\n    };\n\n  ngOnInit() {\n    this.loadUser();\n    this.route.data.subscribe(data => {\n    //  this.user = this.user1;\n     // this.user.firstName = 'test';\n     console.log(this.route.snapshot.params['id']);\n     let userOutsideId = this.route.snapshot.params['id'] ;\n\n    //   console.log('ngOnnit ' + data);\n    //  console.log('this is coming from ngOnit' + ',' + this.user);\n   });\n  }\n\n  loadUser() {\n    this.userService.getIdentityUser(this.route.snapshot.params['id']).subscribe((user: IdentityUser) => {\n      this.identityUser = user;\n      console.log(this.user);\n      \n      //console.log('This is getting from loadUser => ' + this.user);\n    },\n    error => {\n      this.alertify.error(error);\n    });\n  }\n\n  completeRegistration(){\n    if (this.password === this.confirmPassword) {\n      this.user.userOutsideId = this.route.snapshot.params['id'];\n      this.user.password = this.password;\n\n        return this.userService.updateIdentityPassword(this.user).subscribe(next => {\n      \n          this.alertify.success('Your profile has been successfully created');\n          this.router.navigate(['/login']);\n          // this.editForm.reset(this.user);\n        }, error => {\n          this.alertify.error(error);\n        });\n      } else { \n        this.alertify.error('Passwords do not match');\n      }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGFjdC11cy9jb250YWN0LXVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section fxLayout fxLayoutAlign=\\\"center center\\\">\\n  <mat-card style=\\\"width: 65%;\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div mat-card-title>Contact Us</div>\\n    <mat-card-content class=\\\"three-quarter-width\\\">\\n      <p body-2>Still have questions? Get in touch with us:</p>\\n      <p>Complete the form below and and we will reach out to you within 2 business days</p>\\n      <!-- <form [formGroup]=\\\"contactUsForm\\\" (ngSubmit)=\\\"onFormSubmit(contactUsForm.value)\\\" fxLayout=\\\"column\\\"\\n        fxLayoutAling=\\\"center center\\\" style=\\\"width: 95%\\\"> -->\\n        <form [formGroup]=\\\"contactUsForm\\\" fxLayout=\\\"column\\\"\\n        fxLayoutAling=\\\"center center\\\" style=\\\"width: 95%\\\" #f=\\\"ngForm\\\">\\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <input matInput maxlength=\\\"125\\\" placeholder=\\\"Full Name\\\" formControlName=\\\"fullNameFormControl\\\">\\n          <mat-error *ngIf=\\\"contactUsForm.get('fullNameFormControl').hasError('required')\\\">\\n              Full Name is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <input matInput placeholder=\\\"Email Address\\\" formControlName=\\\"emailFormControl\\\">\\n          <mat-error *ngIf=\\\"contactUsForm.get('emailFormControl').hasError('email') && contactUsForm.get('emailFormControl').hasError('pattern')\\\">\\n            Please enter a valid email address\\n            <!-- <mat-hint>Email must have this format: ****@domain.com</mat-hint> -->\\n          </mat-error>\\n          <mat-error *ngIf=\\\"contactUsForm.get('emailFormControl').hasError('required')\\\">\\n            Email is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n       \\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <input matInput placeholder=\\\"Health Authority\\\" formControlName=\\\"healthAuthorityFormControl\\\">\\n          <mat-error *ngIf=\\\"contactUsForm.get('healthAuthorityFormControl').hasError('required')\\\">\\n              Health Authority is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <input matInput placeholder=\\\"Facility\\\" formControlName=\\\"facilityFormControl\\\">\\n          <mat-error *ngIf=\\\"contactUsForm.get('facilityFormControl').hasError('required')\\\">\\n              Facility is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <input maxlength=\\\"10\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phoneNumberFormControl\\\">\\n          <mat-error *ngIf=\\\"contactUsForm.get('phoneNumberFormControl').hasError('required')\\\">\\n              Phone number is <strong>required</strong>\\n            </mat-error>\\n          <mat-error *ngIf=\\\"!contactUsForm.get('phoneNumberFormControl').hasError('required') && contactUsForm.get('phoneNumberFormControl').hasError('pattern')\\\">\\n              Please enter valid phone number\\n             </mat-error>\\n        </mat-form-field>\\n\\n      <mat-form-field>\\n          <mat-label>Subject</mat-label>\\n          <mat-select (selectionChange)=\\\"onSelectSubject($event)\\\" [(value)]=\\\"selectedSearchParameter\\\">\\n            <!-- <mat-option value=\\\"searchString\\\">None</mat-option> -->\\n            <mat-option value=\\\"General Question\\\">General Question</mat-option>\\n            <mat-option value=\\\"Product Information\\\">Product Information</mat-option>\\n            <mat-option value=\\\"Account Information\\\">Account Information</mat-option>\\n            <mat-option value=\\\"Other\\\">Other</mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"subjectFormControl.hasError('required')\\\">\\n              Subject is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"demo-full-width\\\">\\n          <textarea maxlength=\\\"500\\\" matInput placeholder=\\\"Message\\\" formControlName=\\\"messageFormControl\\\"></textarea>\\n          <mat-error *ngIf=\\\"contactUsForm.get('messageFormControl').hasError('required')\\\">\\n              Message is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n          <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"contactUsForm.invalid\\\" color=\\\"primary\\\" (click)=\\\"contactUsFunction()\\\">Submit</button>\\n          <button mat-raised-button type=\\\"button\\\" color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Clear</button>\\n        </mat-card-actions>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  <help></help>\\n</section>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators ,FormsModule,NgForm, FormControl, FormGroupDirective } from '@angular/forms';\nimport { AuthService } from '../_service/auth.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { SendMailService } from '../_service/send-mail.service';\nimport { Router } from '@angular/router';\nimport { ContactUsService } from '../_service/contactUs.service';\nimport { ErrorStateMatcher } from '@angular/material';\n\n@Component({\n  selector: 'contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\n\nexport class ContactUsComponent implements OnInit {\n  contactUs: ContactUsInterface = {\n    fullName: '',\n    emailAddress: '',\n    healthAuthority: '',\n    facility: '',\n    phoneNumber: '',\n    subject: '',\n    message: ''\n  };\n\n  model: any = {};\n  selectedSearchParameter = 'General Question';\n  contactUsForm: FormGroup;\n  name: string = '';\n  emailAddress: string = '';\n  healthAuthority: string = '';\n  facility: string = '';\n  phoneNumber: string = '';\n  subject: string = '';\n  message: string = '';\n  \n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private contactUsService: ContactUsService\n  ) \n  { \n    this.contactUsForm = fb.group({\n      fullNameFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(125)\n      ]),\n      healthAuthorityFormControl : new FormControl('', [\n        Validators.required\n      ]),\n     facilityFormControl : new FormControl('', [\n        Validators.required\n      ]),\n      phoneNumberFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(10),\n        Validators.pattern('[6-9]\\\\d{9}')\n      ]),\n      messageFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(125)\n      ]),\n      emailFormControl : new FormControl('', [\n        Validators.required,\n        Validators.email,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])\n    });\n  }\n\n  subjectFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  onSelectSubject(event) {\n\n    if (event.value === 'General Question') {\n      this.selectedSearchParameter = event.value;\n    }\n    if (event.value === 'Product Information') {\n      this.selectedSearchParameter = event.value;\n    }\n    if (event.value === 'Account Information') {\n      this.selectedSearchParameter = event.value;\n    }\n    if (event.value === 'Other') {\n      this.selectedSearchParameter = event.value;\n    }\n    // console.log(this.selectedSearchParameter);\n  }\n\n  resetForm() {\n    this.selectedSearchParameter = 'General Question';\n    this.contactUsForm.reset();\n    this.subjectFormControl.reset(this.selectedSearchParameter);\n  }\n\n  ngOnInit() {\n  }\n\n  contactUsFunction() {\n    this.contactUs.fullName = this.contactUsForm.get('fullNameFormControl').value;\n    this.contactUs.emailAddress = this.contactUsForm.get('emailFormControl').value;\n    this.contactUs.healthAuthority = this.contactUsForm.get('healthAuthorityFormControl').value;\n    this.contactUs.facility = this.contactUsForm.get('facilityFormControl').value;\n    this.contactUs.phoneNumber = this.contactUsForm.get('phoneNumberFormControl').value;\n    this.contactUs.subject = this.selectedSearchParameter;\n    this.contactUs.message = this.contactUsForm.get('messageFormControl').value;\n\n    return this.contactUsService.contactUsForm(this.contactUs).subscribe(res => {\n      // console.log(this.contactUs);\n      this.alertify.success('Thank you for contacting us! Your email has been successfully submitted and we will get in touch with you shortly');\n      this.resetForm();\n    });\n  }\n\n}\n\nexport class ContactUsInterface {\n  fullName: string;\n  emailAddress: string;\n  healthAuthority: string;\n  facility: string;\n  phoneNumber: string;\n  subject: string;\n  message: string;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZmlsdGVyL2xvY2F0aW9uZmlsdGVyL2xvY2F0aW9uZmlsdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <mat-form-field> -->\\n  <mat-select placeholder=\\\"Filter By Location\\\" [formControl]=\\\"locationList\\\" multiple [(value)]=\\\"selected\\\" (selectionChange)=\\\"onSelectLocation(selected)\\\" >\\n    <mat-option *ngFor=\\\"let location of locations\\\" [value]=\\\"location.locationId\\\" >\\n      {{location.locationNames}}\\n    </mat-option>\\n  </mat-select>\\n<!-- </mat-form-field> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { LocationService } from 'src/app/_service/location.service';\n\n@Component({\n  selector: 'locationfilter',\n  templateUrl: './locationfilter.component.html',\n  styleUrls: ['./locationfilter.component.css']\n})\nexport class LocationfilterComponent implements OnInit {\n\n  constructor(\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.locationDropDown();\n  }\n\n  locationList = new FormControl();\n  locations;\n  locationArray;\n  selected;\n\n\n  onSelectLocation(selected) {\n    \n    this.locationArray = selected.toString().split(',');\n    console.log(this.locationArray);\n    \n  }\n  \n  locationDropDown() {\n    return this.locationService.getLocationDropDown().subscribe(res => {\n      this.locations = res;\n  });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZmlsdGVyL21hbnVmYWN0dXJlcmZpbHRlci9tYW51ZmFjdHVyZXJmaWx0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"    <mat-select placeholder=\\\"Filter By Manufacturers\\\" [formControl]=\\\"manufacturerList\\\" multiple [(value)]=\\\"selected\\\" (selectionChange)=\\\"onSelectManufacturers(selected)\\\" >\\n      <mat-option *ngFor=\\\"let manufacturer of manufacturers\\\" [value]=\\\"manufacturer.manufacturerId\\\" >\\n        {{  manufacturer.manufacturerName}}\\n      </mat-option>\\n    </mat-select>\\n\\n    <!-- <form>\\n      <mat-form-field class=\\\"container\\\"  style=\\\"width:400px;\\\" >\\n          <input type=\\\"text\\\" placeholder=\\\"Select a Manufacturer\\\"\\n              matInput \\n              [formControl]=\\\"searchTerm\\\"\\n              [matAutocomplete]=\\\"auto\\\" [(value)]=\\\"selected\\\" (selectionChange)=\\\"onSelectManufacturers(selected)\\\">  \\n\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let list of myList\\\" [value]=\\\"list.manufacturerName\\\">\\n              {{ list.manufacturerName }}\\n            </mat-option>\\n          </mat-autocomplete>\\n      </mat-form-field>\\n\\n  </form> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ManufacturerService } from 'src/app/_service/manufacturer.service';\n\n@Component({\n  selector: 'manufacturerfilter',\n  templateUrl: './manufacturerfilter.component.html',\n  styleUrls: ['./manufacturerfilter.component.css']\n})\nexport class ManufacturerfilterComponent implements OnInit {\n\n  constructor(private manufacturerService: ManufacturerService) { }\n\nsearchTerm: FormControl = new FormControl();\nmyList = <any>[];\n\n  manufacturerList = new FormControl();\n  manufacturers;\n  manufacturerArray;\n  selected;\n\n  // ngOnInit() {\n  //   this.searchTerm.valueChanges.subscribe(\n  //     searchString => {\n  //       if (searchString !== '') {\n  //         this.manufacturerService.manufacturerInformation(searchString).subscribe(\n  //           data => {\n  //             this.myList = data as unknown as any[];\n  //           });\n  //       }\n  //     });\n  //     console.log(this.searchTerm.value);\n  //   // this.manufacturerDropDown();\n  // }\n\n  ngOnInit(){}\n  \n  onSelectManufacturers(selected) {\n    this.myList = selected.toString().split(',');\n    console.log(this.myList);\n  }\n\n  // manufacturerDropDown() {\n  //   return this.manufacturerService.manufacturerInformation().subscribe(res => {\n  //     this.manufacturers = res;\n  // });\n  // }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZmlsdGVyL3Byb2R1Y3RDYXNmaWx0ZXIvcHJvZHVjdENhc2ZpbHRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <mat-select placeholder=\\\"Filter By CasNumbers\\\" [formControl]=\\\"casNumberList\\\" multiple [(value)]=\\\"selected\\\" (selectionChange)=\\\"onSelectCasNumber(selected)\\\" >\\n    <mat-option *ngFor=\\\"let casNumber of casNumbers\\\" [value]=\\\"casNumber.casNumbers\\\" >\\n      {{  casNumber.casNumbers}}\\n    </mat-option>\\n  </mat-select>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'productCasfilter',\n  templateUrl: './productCasfilter.component.html',\n  styleUrls: ['./productCasfilter.component.css']\n})\nexport class ProductCasfilterComponent implements OnInit {\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n    this.casNumberDropDown();\n  }\n\n  \n  casNumberList = new FormControl();\n  casNumbers;\n  casNumberArray;\n  selected;\n\n\n  onSelectCasNumber(selected) {\n    \n    this.casNumberArray = selected.toString().split(',');\n    console.log(this.casNumberArray);\n    \n  }\n  \n  casNumberDropDown() {\n    return this.productService.productCasNumberFilter().subscribe(res => {\n      this.casNumbers = res;\n  });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZm9yZ290cGFzc3dvcmQvZm9yZ290cGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"form-style\\\">\\n  <form\\n    \\n    (ngSubmit)=\\\"forgotPassword()\\\"\\n  >\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Forgot Password</mat-card-title>\\n\\n    <div class=\\\"example-container container !important\\\">\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your email\\\"\\n            name=\\\"email\\\"\\n            [(ngModel)]=\\\"model.email\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      </div>\\n\\n      \\n    </div>\\n    <div>\\n      <button\\n        mat-raised-button\\n        class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Submit\\n      </button>\\n      <button mat-raised-button  style=\\\"margin-left: 5px;\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n    </div>\\n  </form>\\n</mat-card>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../_service/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_service/alertify.service';\n\n@Component({\n  selector: 'forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  model: any = {};\n  @Output() cancelRegister = new EventEmitter();\n  \n  constructor(private authService: AuthService,\n    private router: Router,\n     private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  forgotPassword(){\n    return this.authService.forgotPassword(this.model).subscribe(\n      data => {\n        this.alertify.success('Check your email for the password link');\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.alertify.error('Something went wrong!');\n      }\n    );\n  }\n\n  cancel(){\n    this.cancelRegister.emit(false);\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaGVscC9oZWxwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <div>\\n      <h3>User Guide</h3>\\n      <p>If you need guidance on how to use this database, you can download our guide here:\\n        <p><a href=\\\"#\\\">Click here to download the SDS Database User Guide</a></p>\\n     \\n    </div>\\n    <div>\\n      <h3>Userful Links</h3>\\n      <p><a href=\\\"#\\\">Userful link</a></p>\\n      <p><a href=\\\"#\\\">Userful link</a></p>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvY3JlYXRlLXByb2R1Y3QvY3JlYXRlLXByb2R1Y3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-accordion>\\n  <form\\n    #createProductForm=\\\"ngForm\\\"\\n    (submit)=\\\"createProductInformation()\\\"\\n    id=\\\"createProductForm\\\"\\n  >\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Product Info\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Enter product information\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Name\\\"\\n          name=\\\"name\\\"\\n          [(ngModel)]=\\\"model.name\\\"\\n        />\\n      </mat-form-field>\\n      <br /><br />\\n      <form id=\\\"manufacturerForm\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select\\n            placeholder=\\\"Assign Manufacturer\\\"\\n            [formControl]=\\\"manufacturerList\\\"\\n            multiple\\n            [(value)]=\\\"selected\\\"\\n            (selectionChange)=\\\"onSelectManufacturers(selected)\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let manufacturer of manufacturers\\\"\\n              [value]=\\\"manufacturer.manufacturerId\\\"\\n            >\\n              {{ manufacturer.manufacturerName }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"manufacturerList.hasError('required')\\\"\\n            >Please choose a manufacturer</mat-error\\n          >\\n        </mat-form-field>\\n        <br /><br />\\n        <button\\n          style=\\\"margin-right: 3%;\\\"\\n          mat-raised-button\\n          color=\\\"primary\\\"\\n          (click)=\\\"openManufacturerCreationPage()\\\"\\n          form=\\\"manufacturerForm\\\"\\n        >\\n          Add\\n        </button>\\n\\n        <button\\n          mat-raised-button\\n          color=\\\"primary\\\"\\n          (click)=\\\"openManufacturerEditPage(selected)\\\"\\n        >\\n          Edit\\n        </button>\\n      </form>\\n      <br />\\n      <br />\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Code\\\"\\n          name=\\\"code\\\"\\n          [(ngModel)]=\\\"model.code\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Alias\\\"\\n          name=\\\"productAlias\\\"\\n          [(ngModel)]=\\\"model.productAlias\\\"\\n        />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker2\\\"\\n          placeholder=\\\"Updated On\\\"\\n          name=\\\"updatedOn\\\"\\n          [(ngModel)]=\\\"model.updatedOn\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker2\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker2></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker3\\\"\\n          placeholder=\\\"Revision Date\\\"\\n          name=\\\"revisionDate\\\"\\n          [(ngModel)]=\\\"model.revisionDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker3\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker3></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker4\\\"\\n          placeholder=\\\"Last Verified\\\"\\n          name=\\\"lastVerifiedDate\\\"\\n          [(ngModel)]=\\\"model.lastVerifiedDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker4\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker4></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width:100%\\\">\\n        <mat-label>MSDS Origin</mat-label>\\n        <mat-select\\n          [formControl]=\\\"MSDSOriginFormControl\\\"\\n          multiple\\n          [(value)]=\\\"selectedMSDSOrigin\\\"\\n          [(ngModel)]=\\\"selectedMSDSOrigin\\\"\\n          (selectionChange)=\\\"onSelectMSDSOrigin(selectedMSDSOrigin)\\\"\\n        >\\n          <mat-optgroup\\n            *ngFor=\\\"let group of MSDSOriginGroups\\\"\\n            [label]=\\\"group.name\\\"\\n            [disabled]=\\\"group.disabled\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let model of group.origin\\\"\\n              [value]=\\\"model.value\\\"\\n            >\\n              {{ model.viewValue }}\\n            </mat-option>\\n          </mat-optgroup>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width:100%\\\">\\n        <mat-label>MSDS Format</mat-label>\\n        <mat-select\\n          [formControl]=\\\"MSDSFormatFormControl\\\"\\n          multiple\\n          [(value)]=\\\"selectedMSDSFormat\\\"\\n          [(ngModel)]=\\\"selectedMSDSFormat\\\"\\n          (selectionChange)=\\\"onSelectMSDSFormat(selectedMSDSFormat)\\\"\\n        >\\n          <mat-optgroup\\n            *ngFor=\\\"let group of MSDSFormatGroups\\\"\\n            [label]=\\\"group.name\\\"\\n            [disabled]=\\\"group.disabled\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let model of group.format\\\"\\n              [value]=\\\"model.value\\\"\\n            >\\n              {{ model.viewValue }}\\n            </mat-option>\\n          </mat-optgroup>\\n        </mat-select>\\n      </mat-form-field>\\n      <br />\\n\\n      <mat-card-content>\\n        <label>Discontinued:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.discontinued\\\"\\n            name=\\\"Discontinued\\\"\\n            >Discontinued</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n      <br />\\n      <mat-card-content>\\n        <label>Exempt:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.exempt\\\"\\n            name=\\\"exempt\\\"\\n            >Exempt</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n      <br />\\n\\n      <mat-form-field style=\\\"width:100%\\\">\\n        <mat-label>Exemption Class</mat-label>\\n        <mat-select\\n          [formControl]=\\\"ExemptionClassFormControl\\\"\\n          multiple\\n          [(value)]=\\\"selectedExemptionClass\\\"\\n          [(ngModel)]=\\\"selectedExemptionClass\\\"\\n          (selectionChange)=\\\"onSelectExemptionClass(selectedExemptionClass)\\\"\\n        >\\n          <mat-optgroup\\n            *ngFor=\\\"let group of ExemptionClassGroups\\\"\\n            [label]=\\\"group.name\\\"\\n            [disabled]=\\\"group.disabled\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let model of group.exemptionClass\\\"\\n              [value]=\\\"model.value\\\"\\n            >\\n              {{ model.viewValue }}\\n            </mat-option>\\n          </mat-optgroup>\\n        </mat-select>\\n      </mat-form-field>\\n      <br />\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Registration No.\\\"\\n          [(ngModel)]=\\\"model.registrationNumber\\\"\\n          name=\\\"registrationNumber\\\"\\n        />\\n      </mat-form-field>\\n      <br />\\n\\n      <mat-card-content>\\n        <mat-form-field style=\\\"width:100%\\\">\\n          <textarea matInput placeholder=\\\"Additional Suppliers\\\"></textarea>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <br />\\n\\n      <mat-card-content>\\n        <mat-form-field style=\\\"width:100%\\\">\\n          <textarea\\n            matInput\\n            placeholder=\\\"Notes\\\"\\n            [(ngModel)]=\\\"model.notes\\\"\\n            name=\\\"notes\\\"\\n          ></textarea>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <br />\\n\\n      <mat-form-field style=\\\"width:100%\\\">\\n        <mat-label>Status</mat-label>\\n        <mat-select\\n          [formControl]=\\\"StatusFormControl\\\"\\n          multiple\\n          [(value)]=\\\"selectedStatus\\\"\\n          [(ngModel)]=\\\"selectedStatus\\\"\\n          (selectionChange)=\\\"onSelectStatus(selectedStatus)\\\"\\n        >\\n          <mat-optgroup\\n            *ngFor=\\\"let group of StatusGroups\\\"\\n            [label]=\\\"group.name\\\"\\n            [disabled]=\\\"group.disabled\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let model of group.status\\\"\\n              [value]=\\\"model.value\\\"\\n            >\\n              {{ model.viewValue }}\\n            </mat-option>\\n          </mat-optgroup>\\n        </mat-select>\\n      </mat-form-field>\\n      <br />\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker5\\\"\\n          placeholder=\\\"Most Recent Request\\\"\\n          name=\\\"mostRecentRequestDate\\\"\\n          [(ngModel)]=\\\"model.mostRecentRequestDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker5\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker5></mat-datepicker>\\n      </mat-form-field>\\n      <br />\\n      <br />\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Health Properties\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Enter health properties information\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select\\n          placeholder=\\\"Health Hazard Class\\\"\\n          [formControl]=\\\"healthHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedHealthClass\\\"\\n          (selectionChange)=\\\"onSelectedHealthHazardClass(selectedHealthClass)\\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let health of healths\\\"\\n            [value]=\\\"health.healthClassId\\\"\\n          >\\n            {{ health.healthClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a health class</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <div *ngFor=\\\"let model of routes\\\">\\n        <mat-checkbox\\n          #checkbox=\\\"matCheckbox\\\"\\n          [checked]=\\\"model.selected\\\"\\n          (click)=\\\"onSelectHealthRoutes(checkbox, model)\\\"\\n          >{{ model.routeName }}</mat-checkbox\\n        >\\n      </div>\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Pictograms\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Select an image\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n  \\n        <div *ngFor=\\\"let model of pictograms\\\">\\n          <mat-checkbox\\n            #checkbox=\\\"matCheckbox\\\"\\n            [checked]=\\\"model.selected\\\"\\n            (click)=\\\"onSelectedPictograms(checkbox, model)\\\"\\n            ><img style=\\\"width: 60px; padding-left: 10px;\\\" src=\\\"assets/pictograms/{{ model.pictogramName }}.png\\\"></mat-checkbox\\n          >\\n        </div>\\n      </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Physical Properties\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Enter physical properties information\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select\\n          placeholder=\\\"Physical Hazard Class\\\"\\n          [formControl]=\\\"physicalHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedPhysicalClass\\\"\\n          (selectionChange)=\\\"\\n            onSelectedPhysicalHazardClass(selectedPhysicalClass)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let physical of physicals\\\"\\n            [value]=\\\"physical.physicalClassId\\\"\\n          >\\n            {{ physical.physicalClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a health class</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <div *ngFor=\\\"let model of physRoutes\\\">\\n        <mat-checkbox\\n          #checkbox=\\\"matCheckbox\\\"\\n          [checked]=\\\"model.selected\\\"\\n          (click)=\\\"onSelectPhysicalRoutes(checkbox, model)\\\"\\n          >{{ model.routeName }}</mat-checkbox\\n        >\\n      </div>\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Chemical Classification\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Enter chemical classification information\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Health Categories\\\"\\n          [formControl]=\\\"healthCategoriesList\\\"\\n          multiple\\n          [(value)]=\\\"selectedHealthCategories\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHealthCategories(selectedHealthCategories)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let health of healthCategories\\\"\\n            [value]=\\\"health.healthHazardCategoryId\\\"\\n          >\\n            {{ health.hazardCategoryName }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"healthCategoriesList.hasError('required')\\\"\\n          >Please choose a health Category</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Physical Categories\\\"\\n          [formControl]=\\\"physicalCategoriesList\\\"\\n          multiple\\n          [(value)]=\\\"selectedPhysicalCategories\\\"\\n          (selectionChange)=\\\"\\n            onSelectedPhysicalCategories(selectedPhysicalCategories)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let physical of physicalCategories\\\"\\n            [value]=\\\"physical.physicalHazardCategoryId\\\"\\n          >\\n            {{ physical.hazardCategoryName }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"physicalCategoriesList.hasError('required')\\\"\\n          >Please choose a physical Category</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-panel-title>\\n        HMIS Ratings\\n      </mat-panel-title>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Health\\\"\\n          [formControl]=\\\"hmisRatingshealthList\\\"\\n          multiple\\n          [(value)]=\\\"selectedhmisRatingshealth\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHmisRatingshealth(selectedhmisRatingshealth)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let hmisRatings of hmisRatingshealth\\\"\\n            [value]=\\\"hmisRatings.hmisratingsHealthId\\\"\\n          >\\n            {{ hmisRatings.hmisratingsHealthValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"hmisRatingshealthList.hasError('required')\\\"\\n          >Please choose a hmis Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Chronic\\\"\\n          [formControl]=\\\"hmisRatingsChronicList\\\"\\n          multiple\\n          [(value)]=\\\"selectedhmisRatingsChronic\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHmisRatingsChronic(selectedhmisRatingsChronic)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let hmisRatingsChr of hmisRatingsChronic\\\"\\n            [value]=\\\"hmisRatingsChr.hmisratingsChronicId\\\"\\n          >\\n            {{ hmisRatingsChr.hmisratingsChronicValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"hmisRatingsChronicList.hasError('required')\\\"\\n          >Please choose a hmis Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Flammability\\\"\\n          [formControl]=\\\"hmisRatingsFlammabilityList\\\"\\n          multiple\\n          [(value)]=\\\"selectedhmisRatingsFlammability\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHmisRatingsFlammability(selectedhmisRatingsFlammability)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let hmisRatingsFlamm of hmisRatingsFlammability\\\"\\n            [value]=\\\"hmisRatingsFlamm.hmisratingsFlammabilityId\\\"\\n          >\\n            {{ hmisRatingsFlamm.hmisratingsFlammabilityValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"hmisRatingsFlammabilityList.hasError('required')\\\"\\n          >Please choose a hmis Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Reactivity\\\"\\n          [formControl]=\\\"hmisRatingsReactivityList\\\"\\n          multiple\\n          [(value)]=\\\"selectedhmisRatingsReactivity\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHmisRatingsReactivity(selectedhmisRatingsReactivity)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let hmisRatingsReac of hmisRatingsReactivity\\\"\\n            [value]=\\\"hmisRatingsReac.hmisratingsReactivityId\\\"\\n          >\\n            {{ hmisRatingsReac.hmisratingsReactivityValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"hmisRatingsReactivityList.hasError('required')\\\"\\n          >Please choose a hmis Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <br />\\n      <br />\\n\\n      <mat-panel-title>\\n        NFPA Ratings\\n      </mat-panel-title>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Health\\\"\\n          [formControl]=\\\"nfpaRatingsHealthList\\\"\\n          multiple\\n          [(value)]=\\\"selectednfpaRatingsHealth\\\"\\n          (selectionChange)=\\\"\\n            onSelectedNfpaRatingsHealth(selectednfpaRatingsHealth)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let nfpaRatingsHea of nfpaRatingsHealth\\\"\\n            [value]=\\\"nfpaRatingsHea.nfparatingsHealthId\\\"\\n          >\\n            {{ nfpaRatingsHea.nfparatingsHealthValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"nfpaRatingsHealthList.hasError('required')\\\"\\n          >Please choose a nfpa Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Flammability(Flash Points)\\\"\\n          [formControl]=\\\"nfparatingsFlammabilityList\\\"\\n          multiple\\n          [(value)]=\\\"selectednfparatingsFlammability\\\"\\n          (selectionChange)=\\\"\\n            onSelectedNfparatingsFlammability(selectednfparatingsFlammability)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let nfparatingsFlamm of nfparatingsFlammability\\\"\\n            [value]=\\\"nfparatingsFlamm.nfparatingsFlammabilityId\\\"\\n          >\\n            {{ nfparatingsFlamm.nfparatingsFlammabilityValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"nfparatingsFlammabilityList.hasError('required')\\\"\\n          >Please choose a nfpa Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Instability\\\"\\n          [formControl]=\\\"nfparatingsFlammabilityList\\\"\\n          multiple\\n          [(value)]=\\\"selectednfpaRatingsInstability\\\"\\n          (selectionChange)=\\\"\\n            onSelectedNfpaRatingsInstability(selectednfpaRatingsInstability)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let nfpaRatingsInstab of nfpaRatingsInstability\\\"\\n            [value]=\\\"nfpaRatingsInstab.nfparatingsInstabilityId\\\"\\n          >\\n            {{ nfpaRatingsInstab.nfparatingsInstabilityValues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"nfparatingsFlammabilityList.hasError('required')\\\"\\n          >Please choose a nfpa Rating</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Specific\\\"\\n          [formControl]=\\\"nfpaRatingsSpecificList\\\"\\n          multiple\\n          [(value)]=\\\"selectednfpaRatingsSpecific\\\"\\n          (selectionChange)=\\\"\\n            onSelectedNfpaRatingsSpecific(selectednfpaRatingsSpecific)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let nfpaRatingsSp of nfpaRatingsSpecific\\\"\\n            [value]=\\\"nfpaRatingsSp.nfparatingsSpecificId\\\"\\n          >\\n            {{ nfpaRatingsSp.nfparatingsSpecificNames }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"nfpaRatingsSpecificList.hasError('required')\\\"\\n          >Please choose a nfpa Rating</mat-error\\n        >\\n      </mat-form-field>\\n      <br />\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"IARC\\\"\\n          [formControl]=\\\"iarcList\\\"\\n          multiple\\n          [(value)]=\\\"selectedIarc\\\"\\n          (selectionChange)=\\\"onSelectedIArc(selectedIarc)\\\"\\n        >\\n          <mat-option *ngFor=\\\"let iarcValue of iarc\\\" [value]=\\\"iarcValue.iarcid\\\">\\n            {{ iarcValue.iarcvalues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"iarcList.hasError('required')\\\"\\n          >Please choose an iarc</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"ACGIH\\\"\\n          [formControl]=\\\"acgihList\\\"\\n          multiple\\n          [(value)]=\\\"selectedacgih\\\"\\n          (selectionChange)=\\\"onSelectedAcgih(selectedacgih)\\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let acgihValue of acgih\\\"\\n            [value]=\\\"acgihValue.acgihid\\\"\\n          >\\n            {{ acgihValue.acgihvalues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"acgihList.hasError('required')\\\"\\n          >Please choose an acgih</mat-error\\n        >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Transport Hazard Class\\\"\\n          [formControl]=\\\"transportHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedTransportHazard\\\"\\n          (selectionChange)=\\\"\\n            onSelectedTransportHazardClasses(selectedTransportHazard)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let transportHazardValue of transportHazard\\\"\\n            [value]=\\\"transportHazardValue.transportHazardId\\\"\\n          >\\n            {{ transportHazardValue.transportHazardvalues }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"transportHazardClassList.hasError('required')\\\"\\n          >Please choose a transport hazard class</mat-error\\n        >\\n      </mat-form-field>\\n    </mat-expansion-panel>\\n\\n    <br />\\n    <br />\\n    <button\\n      mat-raised-button\\n      style=\\\"margin-right:2%;\\\"\\n      type=\\\"submit\\\"\\n      form=\\\"createProductForm\\\"\\n      [disabled]=\\\"!createProductForm.dirty\\\"\\n    >\\n      Save\\n    </button>\\n\\n    <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n      Close\\n    </button>\\n  </form>\\n</mat-accordion>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\nimport { CreateManufacturerComponent } from 'src/app/manufacturer/create-manufacturer/create-manufacturer.component';\nimport { MatDialog, MatCheckbox } from '@angular/material';\nimport { EditProductComponent } from '../edit-product/edit-product.component';\nimport { EditManufacturerComponent } from 'src/app/manufacturer/edit-manufacturer/edit-manufacturer.component';\nimport { ManufacturerService } from 'src/app/_service/manufacturer.service';\nimport { Whmis2015Service } from 'src/app/_service/whmis2015.service';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\n\nexport class CreateProductComponent implements OnInit {\n\n  constructor(private productService: ProductService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private dialog: MatDialog,\n    private manufacturerService: ManufacturerService,\n    private whmis2015Service: Whmis2015Service\n) { }\n\n  model: any ={};\n  product: any = {};\n  routes: any = [];\n  physRoutes: any = [];\n  routesArray: number;\n  physicalRoutesArray: number;\n  pictograms: any = [];\n  pictogramArray: number;\n  MSDSOriginArray: number;\n  MSDSFormatArray: number;\n  selected: number;\n  selectedHealthRoutes: number;\n  selectedMSDSOrigin: number;\n  selectedMSDSFormat: number;\n  selectedExemptionClass: number;\n  selectedStatus: number;\n  ExemptionClassFormatArray: number;\n  StatusFormatArray: number;\n  MSDSFormatModel: string;\n\n  route;\n  routeChecked = false;\n\n  //MSDSOriginModel: string;\n  //MSDSOrigins: string[] = ['Canada', 'USA', 'Europe', 'Other'];\n  Canada: string;\n  USA: string;\n  Europe: string;\n  Other: string;\n\n  Discontinued: string;\n  discontinued: any; \nMSDSOriginFormControl = new FormControl();\n  MSDSOriginGroups: MSDSOriginGroup[] = [\n    {\n      name: 'MSDS Origin',\n      origin: [\n        {value: '0', viewValue: 'Not Available'},\n        {value: '1', viewValue: 'Canada'},\n        {value: '2', viewValue: 'USA'},\n        {value: '3', viewValue: 'Europe'},\n        {value: '4', viewValue: 'Other'}\n      ]\n    },\n  ];\n\n  MSDSFormatFormControl = new FormControl();\n  MSDSFormatGroups: MSDSFormatGroup[] = [\n    {\n      name: 'MSDS Format',\n      format: [\n        {value: '1', viewValue: 'WHMIS'},\n        {value: '2', viewValue: 'OSHA'},\n        {value: '3', viewValue: 'ILO/ISO/EU/ANSI'},\n        {value: '5', viewValue: 'Other'}\n      ]\n    },\n  ];\n\n  ExemptionClassFormControl = new FormControl();\n  ExemptionClassGroups: ExemptionClassFormatGroup[] = [\n    {\n      name: 'Exemption Class',\n      exemptionClass: [\n        {value: '1', viewValue: 'Non-hazardous'},\n        {value: '2', viewValue: 'Cosmetic, device, drug or food [Food and Drugs Act]'},\n        {value: '4', viewValue: 'Pest control product [Pest Control Products Act]'},\n        {value: '8', viewValue: 'Consumer product'}, \n        {value: '16', viewValue: 'Manufactured article'}, \n        {value: '64', viewValue: 'Explosive [Explosives Act]'} \n      ]\n    },\n  ];\n\n  StatusFormControl = new FormControl();\n  StatusGroups: StatusFormatGroup[] = [\n    {\n      name: 'Status',\n      status: [\n        {value: '1', viewValue: 'No MSDS Available'}, \n        {value: '2', viewValue: 'Unable to identity hazards'},\n      ]\n    },\n  ];\n\n\n  ngOnInit() {\n    this.manufacturerDropDown();\n    this.healthClassDropDown();\n    this.physicalClassDropDown();\n    this.healthRoutes();\n    this.physicalRoutes();\n    this.pictogramReferences();\n    this.getHealthCategoryDropDown();\n    this.getPhysicalCategoryDropDown();\n    this.getHmisRatingshealthDropDown();\n    this.getHmisRatingsChronicDropDown();\n    this.getHmisRatingsFlammabilityDropDown();\n    this.getHmisRatingsReactivityDropDown();\n\n    this.getNfpaRatingsHealthDropDown();\n    this.getNfpaRatingsInstabilityDropDown();\n    this.getNfpaRatingsSpecificDropDown();\n    this.getNfparatingsFlammabilityDropDown();\n\n    this.getIArcDropDown();\n    this.getAcgihDropDown();\n\n    this.getTransportHazardDropDown()\n  }\n\n  onSelectStatus(selectedStatus) {\n    var total = 0;\n    for(var i in selectedStatus){\n      // the + impliys converting the string to a number\n      total = +total + +selectedStatus[i];\n      this.StatusFormatArray = total;\n    }\n    console.log(this.StatusFormatArray);\n    this.model.statusFlag = this.StatusFormatArray;\n  }\n\n  onSelectExemptionClass(selectedExemptionClass) {\n    var total = 0;\n    for(var i in selectedExemptionClass){\n      // the + impliys converting the string to a number\n      total = +total + +selectedExemptionClass[i];\n      this.ExemptionClassFormatArray = total;\n    }\n    console.log(this.ExemptionClassFormatArray);\n    this.model.exemptionClassFlag = this.ExemptionClassFormatArray;\n  }\n\n  onSelectMSDSFormat(selectedMSDSFormat) {\n    var total = 0;\n    for(var i in selectedMSDSFormat){\n      // the + impliys converting the string to a number\n      total = +total + +selectedMSDSFormat[i];\n      this.MSDSFormatArray = total;\n    }\n    console.log(this.MSDSFormatArray);\n    this.model.formatId = this.MSDSFormatArray;\n  }\n\n   onSelectMSDSOrigin(selectedMSDSOrigin) {\n    var total = 0;\n    for(var i in selectedMSDSOrigin){\n      // the + impliys converting the string to a number\n      total = +total + +selectedMSDSOrigin[i];\n      this.MSDSOriginArray = total;\n    }\n    console.log(\"thismsdsoriginarry :\" + this.MSDSOriginArray);\n    this.model.originFlag = this.MSDSOriginArray;\n  }\n\n   openManufacturerCreationPage() {\n    const dialogRef = this.dialog.open(CreateManufacturerComponent, {\n      width: '500px'\n    });\n\n    dialogRef.disableClose = true;\n  }\n\n  openManufacturerEditPage(selected) {\n    console.log('openManufacturerEditPage: ' + selected);\n      const dialogRef = this.dialog.open(EditManufacturerComponent, {\n        width: '500px',\n        data: {\n          selected: selected,\n        }\n      });\n      dialogRef.disableClose = true;\n  }\n\n\n  manufacturerDropDown() {\n    return this.manufacturerService.manufacturerInformation().subscribe(res => {\n      this.manufacturers = res;\n  });\n  }\n\n  healthHazardClassList = new FormControl('', [Validators.required]);\n  healths;\n  selectedHealthClass;\n  healthClassList: number;\n  physicalClassList: number;\n\n  onSelectedHealthHazardClass(selectedHealthClass) {\n      this.healthClassList = selectedHealthClass[0];\n      this.model.healthClassId = this.healthClassList;\n  }\n\n  healthClassDropDown() {\n    return this.whmis2015Service.getHealthClass().subscribe(res => {\n      this.healths = res;\n  });\n  }\n\n  physicalHazardClassList = new FormControl('', [Validators.required]);\n  physicals;\n  selectedPhysicalClass;\n\n  onSelectedPhysicalHazardClass(selectedPhysicalClass) {\n      this.physicalClassList = selectedPhysicalClass[0];\n      this.model.physicalClassId = this.physicalClassList;\n  }\n\n  physicalClassDropDown() {\n    return this.whmis2015Service.getPhysicalClass().subscribe(res => {\n      this.physicals = res;\n  });\n  }\n\n\n  healthRoutes() {\n    return this.whmis2015Service.getHealthRoutes().subscribe(res => {\n      this.routes = res;\n    });\n  }\n\n  onSelectHealthRoutes(checkbox: MatCheckbox, model: {healthRouteId: number}){\n      this.model.healthRouteId = model.healthRouteId;\n      this.routesArray = model.healthRouteId;\n  }\n\n  pictogramReferences() {\n    return this.whmis2015Service.getPictograms().subscribe(res => {\n      this.pictograms = res;\n    });\n  }\n\n  onSelectedPictograms(checkbox: MatCheckbox, model: {pictogramId: number}) {\n    this.model.pictogramId = model.pictogramId;\n    this.pictogramArray = model.pictogramId;\n  }\n\n  physicalRoutes() {\n    return this.whmis2015Service.getPhysicalRoutes().subscribe(res => {\n      this.physRoutes = res;\n    });\n  }\n\n  onSelectPhysicalRoutes(checkbox: MatCheckbox, model: {physicalRouteId: number}){\n      this.model.physicalRouteId = model.physicalRouteId;\n      this.physicalRoutesArray = model.physicalRouteId;\n  }\n\n  searchTerm: FormControl = new FormControl();\n  myList: number;\n\n  manufacturerList = new FormControl('', [Validators.required]);\n  manufacturers;\n  manufacturerArray;\n  // selected;\n\n  onSelectManufacturers(selected) {\n      this.myList = selected[0];\n      this.model.manufacturerId = this.myList;\n  }\n\n  physicalCategoriesList = new FormControl('', [Validators.required]);\n  physicalCategories;\n  physicalCategList: number;\n  selectedPhysicalCategories;\n\n  getPhysicalCategoryDropDown() {\n    return this.whmis2015Service.getPhysicalCategories().subscribe(res => {\n      this.physicalCategories = res;\n  });\n  }\n\n  onSelectedPhysicalCategories(selectedPhysicalCategories) {\n    this.physicalCategList = selectedPhysicalCategories[0];\n    this.model.physicalHazardCategoryId = this.physicalCategList;\n}\n\nhealthCategoriesList = new FormControl('', [Validators.required]);\nhealthCategories;\nhealthCategList: number;\nselectedHealthCategories;\n\ngetHealthCategoryDropDown() {\n  return this.whmis2015Service.getHealthCategories().subscribe(res => {\n    this.healthCategories = res;\n});\n}\n\nonSelectedHealthCategories(selectedHealthCategories) {\n  this.healthCategList = selectedHealthCategories[0];\n  this.model.healthHazardCategoryId = this.healthCategList;\n}\n\ntransportHazardClassList = new FormControl('', [Validators.required]);\ntransportHazard;\nTransportHazardList: number;\nselectedTransportHazard;\n\ngetTransportHazardDropDown() {\n  return this.whmis2015Service.getTransportHazardClasses().subscribe(res => {\n    this.transportHazard = res;\n});\n}\n\nonSelectedTransportHazardClasses(selectedTransportHazard) {\n  this.TransportHazardList = selectedTransportHazard[0];\n  this.model.transportHazardId = this.TransportHazardList;\n}\n\niarcList = new FormControl('', [Validators.required]);\niarc;\niarcListResult: number;\nselectedIarc;\n\ngetIArcDropDown() {\n  return this.whmis2015Service.getAllIArcValues().subscribe(res => {\n    this.iarc = res;\n});\n}\n\nonSelectedIArc(selectedIarc) {\n  this.iarcListResult = selectedIarc[0];\n  this.model.iarcid = this.iarcListResult;\n}\n\nacgihList = new FormControl('', [Validators.required]);\nacgih;\nacgihListResult: number;\nselectedacgih;\n\ngetAcgihDropDown() {\n  return this.whmis2015Service.getAllAcgihValues().subscribe(res => {\n    this.acgih = res;\n});\n}\n\nonSelectedAcgih(selectedacgih) {\n  this.acgihListResult = selectedacgih[0];\n  this.model.acgihid = this.acgihListResult;\n}\n\nnfpaRatingsHealthList = new FormControl('', [Validators.required]);\nnfpaRatingsHealth;\nnfpaRatingsHealthListResult: number;\nselectednfpaRatingsHealth;\n\ngetNfpaRatingsHealthDropDown() {\n  return this.whmis2015Service.getAllNFPARatingsHealthValues().subscribe(res => {\n    this.nfpaRatingsHealth = res;\n});\n}\n\nonSelectedNfpaRatingsHealth(selectednfpaRatingsHealth) {\n  this.nfpaRatingsHealthListResult = selectednfpaRatingsHealth[0];\n  this.model.nfparatingsHealthId = this.nfpaRatingsHealthListResult;\n}\n\nnfparatingsFlammabilityList = new FormControl('', [Validators.required]);\nnfparatingsFlammability;\nnfparatingsFlammabilityListResult: number;\nselectednfparatingsFlammability;\n\ngetNfparatingsFlammabilityDropDown() {\n  return this.whmis2015Service.getAllNfpaRatingsFlammabilityValues().subscribe(res => {\n    this.nfparatingsFlammability = res;\n});\n}\n\nonSelectedNfparatingsFlammability(selectednfparatingsFlammability) {\n  this.nfparatingsFlammabilityListResult = selectednfparatingsFlammability[0];\n  this.model.nfparatingsFlammabilityId = this.nfparatingsFlammabilityListResult;\n}\n\nnfpaRatingsInstabilityList = new FormControl('', [Validators.required]);\nnfpaRatingsInstability;\nnfpaRatingsInstabilityListResult: number;\nselectednfpaRatingsInstability;\n\ngetNfpaRatingsInstabilityDropDown() {\n  return this.whmis2015Service.getAllNfpaRatingsInstability().subscribe(res => {\n    this.nfpaRatingsInstability = res;\n});\n}\n\nonSelectedNfpaRatingsInstability(selectednfpaRatingsInstability) {\n  this.nfpaRatingsInstabilityListResult = selectednfpaRatingsInstability[0];\n  this.model.nfparatingsInstabilityId = this.nfpaRatingsInstabilityListResult;\n}\n\nnfpaRatingsSpecificList = new FormControl('', [Validators.required]);\nnfpaRatingsSpecific;\nnfpaRatingsSpecificListResult: number;\nselectednfpaRatingsSpecific;\n\ngetNfpaRatingsSpecificDropDown() {\n  return this.whmis2015Service.getAllNfpaRatingsSpecific().subscribe(res => {\n    this.nfpaRatingsSpecific = res;\n});\n}\n\nonSelectedNfpaRatingsSpecific(selectednfpaRatingsSpecific) {\n  this.nfpaRatingsSpecificListResult = selectednfpaRatingsSpecific[0];\n  this.model.nfparatingsSpecificId = this.nfpaRatingsSpecificListResult;\n}\n\nhmisRatingshealthList = new FormControl('', [Validators.required]);\nhmisRatingshealth;\nhmisRatingshealthListResult: number;\nselectedhmisRatingshealth;\n\ngetHmisRatingshealthDropDown() {\n  return this.whmis2015Service.getAllHmisRatingsHealth().subscribe(res => {\n    this.hmisRatingshealth = res;\n});\n}\n\nonSelectedHmisRatingshealth(selectedhmisRatingshealth) {\n  this.hmisRatingshealthListResult = selectedhmisRatingshealth[0];\n  this.model.hmisratingsHealthId = this.hmisRatingshealthListResult;\n}\n\nhmisRatingsChronicList = new FormControl('', [Validators.required]);\nhmisRatingsChronic;\nhmisRatingsChronicListResult: number;\nselectedhmisRatingsChronic;\n\ngetHmisRatingsChronicDropDown() {\n  return this.whmis2015Service.getAllHmisRatingsChronic().subscribe(res => {\n    this.hmisRatingsChronic = res;\n});\n}\n\nonSelectedHmisRatingsChronic(selectedhmisRatingsChronic) {\n  this.hmisRatingsChronicListResult = selectedhmisRatingsChronic[0];\n  this.model.hmisratingsChronicId = this.hmisRatingsChronicListResult;\n}\n\nhmisRatingsFlammabilityList = new FormControl('', [Validators.required]);\nhmisRatingsFlammability;\nhmisRatingsFlammabilityListResult: number;\nselectedhmisRatingsFlammability;\n\ngetHmisRatingsFlammabilityDropDown() {\n  return this.whmis2015Service.getAllHmisRatingsFlammability().subscribe(res => {\n    this.hmisRatingsFlammability = res;\n});\n}\n\nonSelectedHmisRatingsFlammability(selectedhmisRatingsFlammability) {\n  this.hmisRatingsFlammabilityListResult = selectedhmisRatingsFlammability[0];\n  this.model.hmisratingsFlammabilityId = this.hmisRatingsFlammabilityListResult;\n}\n\nhmisRatingsReactivityList = new FormControl('', [Validators.required]);\nhmisRatingsReactivity;\nhmisRatingsReactivityListResult: number;\nselectedhmisRatingsReactivity;\n\ngetHmisRatingsReactivityDropDown() {\n  return this.whmis2015Service.getAllHmisRatingsReactivity().subscribe(res => {\n    this.hmisRatingsReactivity = res;\n});\n}\n\nonSelectedHmisRatingsReactivity(selectedhmisRatingsReactivity) {\n  this.hmisRatingsReactivityListResult = selectedhmisRatingsReactivity[0];\n  this.model.hmisratingsReactivityId = this.hmisRatingsReactivityListResult;\n}\n\n createProductInformation() {\n  return this.productService.createProduct(this.model).subscribe(next => {\n\n    this.model.hmisratingsReactivityId = this.hmisRatingsReactivityListResult;\n    this.model.hmisratingsChronicId = this.hmisRatingsChronicListResult;\n    this.model.hmisratingsHealthId = this.hmisRatingshealthListResult;\n    this.model.hmisratingsFlammabilityId = this.hmisRatingsFlammabilityListResult;\n\n    this.model.nfparatingsSpecificId = this.nfpaRatingsSpecificListResult;\n    this.model.nfparatingsHealthId = this.nfpaRatingsHealthListResult;\n    this.model.nfparatingsInstabilityId = this.nfpaRatingsInstabilityListResult;\n    this.model.nfparatingsFlammabilityId = this.nfparatingsFlammabilityListResult;\n\n    this.model.acgihid = this.acgihListResult;\n    this.model.iarcid = this.iarcListResult;\n    this.model.transportHazardId = this.TransportHazardList;\n\n    this.model.healthHazardCategoryId = this.healthHazardClassList;\n    this.model.physicalHazardCategoryId = this.physicalHazardClassList;\n    this.model.physicalRouteId = this.physicalRoutesArray;\n    this.model.physicalClassId = this.physicalClassList;\n    this.model.healthRouteId = this.routesArray;\n    this.model.healthClassId = this.healthClassList;\n    this.model.manufacturerId = this.myList;\n    this.model.originFlag = this.MSDSOriginArray;\n    this.model.formatId = this.MSDSFormatArray;\n    this.model.exemptionClassFlag = this.ExemptionClassFormatArray;\n    this.model.statusFlag = this.StatusFormatArray;\n\n    this.alertify.success(\"New product has been created successfully\");\n  }, error => {\n    this.alertify.error(\"Something went wrong, please try again\");\n  }\n  );\n  }\n\n  \n}\n\nexport interface StatusFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface StatusFormatGroup {\n  disabled?: boolean;\n  name: string;\n  status: StatusFormat[];\n}\n\nexport interface ExemptionClassFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ExemptionClassFormatGroup {\n  disabled?: boolean;\n  name: string;\n  exemptionClass: ExemptionClassFormat[];\n}\n\nexport interface MSDSFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSFormatGroup {\n  disabled?: boolean;\n  name: string;\n  format: MSDSFormat[];\n}\n\nexport interface MSDSOrigin {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSOriginGroup {\n  disabled?: boolean;\n  name: string;\n  origin: MSDSOrigin[];\n}\n\nexport interface HealthHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface HealthHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: HealthHazard[];\n}\n\nexport interface PhysicalHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PhysicalHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: PhysicalHazard[];\n}\n\nexport interface WhmisHazardCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface WhmisHazardCategoryGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: WhmisHazardCategory[];\n}\n\nexport interface ACGIHCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ACGIHGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: ACGIHCategory[];\n}\n\nexport interface TransportHazardClassCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface TransportHazardClassGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: TransportHazardClassCategory[];\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvY3JlYXRlLXNlY29uZGFyeW5hbWUvY3JlYXRlLXNlY29uZGFyeW5hbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form\\n#createSecondaryNameForm=\\\"ngForm\\\"\\n(submit)=\\\"createSecondaryProductName()\\\"\\nid=\\\"createSecondaryNameForm\\\"\\n>\\n<mat-form-field class=\\\"fullWidth\\\">\\n  <input\\n    matInput\\n    placeholder=\\\"Product Secondary Name\\\"\\n    name=\\\"secondaryName\\\"\\n    [(ngModel)]=\\\"secondaryName\\\"\\n  />\\n</mat-form-field>\\n\\n<button\\n  mat-raised-button\\n  style=\\\"margin-right: 2%\\\"\\n  type=\\\"submit\\\"\\n  form=\\\"createSecondaryNameForm\\\"\\n>\\n  Save\\n</button>\\n\\n<button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n  Close\\n</button>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n\n@Component({\n  selector: 'create-secondaryname',\n  templateUrl: './create-secondaryname.component.html',\n  styleUrls: ['./create-secondaryname.component.css']\n})\nexport class CreateSecondarynameComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private productService: ProductService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog\n  ) {}\n\n  productId = this.passedData.row.productId;\n  productAuthorityId = this.passedData.row.productAuthorityId;\n  secondaryName = this.passedData.row.secondaryName;\n  rootAuthorityUnitId = this.passedData.row.rootAuthorityUnitId;\n\n  model: any = {};\n\n  ngOnInit() {\n  }\n\n  createSecondaryProductName() {\n    this.model.productId = this.productId;\n    this.model.rootAuthorityUnitId = this.rootAuthorityUnitId;\n    this.model.secondaryName = this.secondaryName;\n    this.model.productAuthorityId = this.productAuthorityId;\n\n    return this.productService.createSecondaryName(this.productId, this.model)\n      .subscribe(\n        res => {\n          this.model = res;\n\n          this.alertify.success(`Secondary entered successfully`);\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again');\n        });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvZWRpdC1wcm9kdWN0L2VkaXQtcHJvZHVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <mat-card class=\\\"example-card\\\">\\n    <p mat-dialog-title fxLayout fxLayoutAlign=\\\"center\\\"> Edit Product </p>\\n  \\n    <mat-dialog-content>\\n      <form #editSiteForm>\\n  \\n  \\n                <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput placeholder=\\\"Top Authority\\\" [(ngModel)]=\\\"topLevelName\\\"  name=\\\"topLevelName\\\"\\n                    value={{passedData.authority.topLevelName}}>\\n                </mat-form-field> -->\\n  \\n                <!-- <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput placeholder=\\\"Sub Top Authority\\\" [(ngModel)]=\\\"subTopLevelName\\\" name=\\\"subTopLevelName\\\"\\n                    value={{passedData.authority.subTopLevelName}}>\\n                </mat-form-field>\\n  \\n                <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput placeholder=\\\"Hospital\\\" [(ngModel)]=\\\"hospitalLevelName\\\"  name=\\\"hospitalLevelName\\\"\\n                    value={{passedData.authority.hospitalLevelName}}>\\n                </mat-form-field>\\n  \\n                <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"departmentLevelName\\\" name=\\\"departmentLevelName\\\"\\n                    value={{passedData.authority.departmentLevelName}} [readonly]=\\\"is_edit\\\" >\\n                </mat-form-field> -->\\n<!--         \\n      </form>\\n    </mat-dialog-content>\\n    <mat-dialog-actions >\\n      <button mat-raised-button [mat-dialog-close]=\\\"updateSite()\\\" color=\\\"primary\\\">SUBMIT</button>\\n      <button mat-raised-button  [mat-dialog-close]=\\\"false\\\" class=\\\"spacer-left\\\" color=\\\"warn\\\">CANCEL</button>\\n    </mat-dialog-actions>\\n  </mat-card> -->\\n\\n  \\n  <mat-accordion>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Product Info\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Enter product information\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <input\\n              matInput\\n              placeholder=\\\"Product Name\\\"\\n              name=\\\"productName\\\"\\n              [(ngModel)]=\\\"product.product_Name\\\"\\n            />\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <input\\n                matInput\\n                placeholder=\\\"Product Code\\\"\\n                name=\\\"productCode\\\"\\n                [(ngModel)]=\\\"product.productCode\\\"\\n              />\\n            </mat-form-field>\\n  \\n            <!-- <mat-form-field class=\\\"fullWidth\\\">\\n                <input\\n                  matInput\\n                  placeholder=\\\"Supplier/Manufacturer\\\"\\n                  name=\\\"manufacturername\\\"\\n                  [(ngModel)]=\\\"product.manufacturername\\\"\\n                />\\n              </mat-form-field> -->\\n        \\n              <mat-form-field class=\\\"fullWidth\\\">\\n                  <input\\n                    matInput\\n                    placeholder=\\\"Product Alias\\\"\\n                    name=\\\"Alias\\\"\\n                    [(ngModel)]=\\\"product.Alias\\\"\\n                  />\\n                </mat-form-field>\\n          \\n                <mat-form-field>\\n                  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Last Modified\\\" name=\\\"updatedOn\\\"\\n                  [(ngModel)]=\\\"product.updatedOn\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker1></mat-datepicker>\\n                </mat-form-field>\\n                <br />    <br />    <br />    <br />    <br />\\n                <mat-form-field>\\n                  <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Revision Date\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker3></mat-datepicker>\\n                </mat-form-field>\\n\\n                <br />    <br />    <br />    <br />    <br />    <br />    <br />    <br />\\n              <!-- <mat-form-field>\\n                  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Last Modified\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker1></mat-datepicker>\\n                </mat-form-field>\\n\\n                  <mat-form-field>\\n                      <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Revision Date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker3></mat-datepicker>\\n                    </mat-form-field>\\n        \\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Last Verified\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker4></mat-datepicker>\\n                      </mat-form-field>\\n  \\n                    <mat-card>\\n                        <mat-card-content>\\n                          <label>MSDS Origin:</label> <br/><br/>         \\n                          <section class=\\\"example-section\\\">\\n                            <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Canada\\\" name=\\\"Canada\\\">Canada</mat-checkbox>\\n                            <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"USA\\\" name=\\\"USA\\\">USA</mat-checkbox>\\n                            <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Europe\\\" name=\\\"Europe\\\">Europe</mat-checkbox>\\n                            <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Other\\\" name=\\\"Other\\\">Other</mat-checkbox>\\n                          </section>\\n                        </mat-card-content>\\n                      </mat-card>\\n        \\n                      <br/>\\n                      <mat-card>\\n                        <mat-card-content>\\n        \\n                    <label>MSDS Format:</label><br/> <br/>       \\n                    <mat-radio-group\\n                    aria-labelledby=\\\"example-radio-group-label\\\"\\n                    class=\\\"example-radio-group\\\"\\n                    name=\\\"MSDSFormatModel\\\" \\n                    [(ngModel)]=\\\"MSDSFormatModel\\\">\\n                    <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let MSDSFormat of MSDSFormats\\\" [value]=\\\"MSDSFormat\\\">\\n                      {{MSDSFormat}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </mat-card-content>\\n                </mat-card> -->\\n                    <!-- <div>Selected MSDSFormat: {{MSDSFormatModel}}</div> -->\\n        <!-- <br/>\\n        \\n        <mat-card>\\n            <mat-card-content>\\n                <label>Discontinued:</label> <br/><br/>\\n              <section class=\\\"example-section\\\">\\n                <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Discontinued\\\" name=\\\"Discontinued\\\">Discontinued</mat-checkbox>\\n              </section>\\n            </mat-card-content>\\n          </mat-card>\\n        <br/>\\n          <mat-card>\\n              <mat-card-content>\\n                  <label>Exempt:</label> <br/><br/>\\n                <section class=\\\"example-section\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Exempt\\\" name=\\\"Exempt\\\">Exempt</mat-checkbox>\\n                </section>\\n              </mat-card-content>\\n            </mat-card>\\n            <br/>\\n   -->\\n            <!-- <mat-card>\\n                <mat-card-content>\\n                    <label>Exemption Class:</label> <br/><br/>\\n                  <section class=\\\"example-section\\\">\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Nonhazardous\\\" name=\\\"Nonhazardous\\\">Non-hazardous</mat-checkbox>\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"CosmeticDeviceDrugOrFood\\\" name=\\\"CosmeticDeviceDrugOrFood\\\">Cosmetic, device, drug or food [Food and Drugs Act]</mat-checkbox>\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"PestControlProduct\\\" name=\\\"PestControlProduct\\\">Pest control product [Pest Control Products Act]</mat-checkbox>\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"ConsumerProduct\\\" name=\\\"ConsumerProduct\\\">Consumer product</mat-checkbox>\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"ManufacturedArticle\\\" name=\\\"ManufacturedArticle\\\">Manufactured article</mat-checkbox>\\n                    <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"Explosive\\\" name=\\\"Explosive\\\">Explosive [Explosives Act]</mat-checkbox>\\n                  </section>\\n                </mat-card-content>\\n              </mat-card>\\n              <br/>\\n  \\n              <mat-card>\\n                  <mat-card-content>\\n                      <label>Registration No:</label> <br/><br/>\\n                        <mat-form-field style=\\\"width:100%\\\">\\n                            <textarea matInput placeholder=\\\"Registration No.\\\"></textarea>\\n                          </mat-form-field>\\n                  </mat-card-content>\\n                </mat-card>\\n                <br/> -->\\n  \\n              <!-- <mat-card>\\n                  <mat-card-content>\\n                      <label>Additional Suppliers:</label> <br/><br/>\\n                        <mat-form-field style=\\\"width:100%\\\">\\n                            <textarea matInput placeholder=\\\"Additional Suppliers\\\"></textarea>\\n                          </mat-form-field>\\n                  </mat-card-content>\\n                </mat-card>\\n                <br/>\\n  \\n                <mat-card>\\n                    <mat-card-content>\\n                        <label>Notes:</label> <br/><br/>\\n                          <mat-form-field style=\\\"width:100%\\\">\\n                              <textarea matInput placeholder=\\\"Notes\\\"></textarea>\\n                            </mat-form-field>\\n                    </mat-card-content>\\n                  </mat-card>\\n                  <br/>\\n  \\n                  <mat-card>\\n                      <mat-card-content>\\n                          <label>Status:</label> <br/><br/>\\n                        <section class=\\\"example-section\\\">\\n                          <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"NoMSDSAvailable\\\" name=\\\"NoMSDSAvailable\\\">No MSDS Available</mat-checkbox>\\n                          <mat-checkbox class=\\\"example-margin\\\"  [(ngModel)]=\\\"UnableToIdentity\\\" name=\\\"UnableToIdentity\\\">Unable to identity hazards</mat-checkbox>\\n                        </section>\\n                      </mat-card-content>\\n                    </mat-card>\\n                    <br/>\\n  \\n                  <mat-form-field>\\n                      <input matInput [matDatepicker]=\\\"picker5\\\" placeholder=\\\"Most Recent Request\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker5\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker5></mat-datepicker>\\n                    </mat-form-field>\\n         -->\\n      </mat-expansion-panel>\\n  \\n      <!-- <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Health Properties\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Enter health properties information\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n      \\n          <mat-form-field>\\n              <mat-label>Health Hazard Classes</mat-label>\\n              <mat-select [formControl]=\\\"healthHazardFormControl\\\" multiple>\\n                <mat-option>-- None --</mat-option>\\n                <mat-optgroup *ngFor=\\\"let group of healthHazardGroups\\\" [label]=\\\"group.name\\\"\\n                              [disabled]=\\\"group.disabled\\\">\\n                  <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                    {{hazard.viewValue}}\\n                  </mat-option>\\n                </mat-optgroup>\\n              </mat-select>\\n            </mat-form-field>\\n        </mat-expansion-panel> -->\\n  \\n        <!-- <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Physical Properties\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Enter physical properties information\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n        \\n            <mat-form-field>\\n                <mat-label>Physical Hazard Classes</mat-label>\\n                <mat-select [formControl]=\\\"physicalHazardFormControl\\\" multiple>\\n                  <mat-option>-- None --</mat-option>\\n                  <mat-optgroup *ngFor=\\\"let group of physicalHazardGroups\\\" [label]=\\\"group.name\\\"\\n                                [disabled]=\\\"group.disabled\\\">\\n                    <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                      {{hazard.viewValue}}\\n                    </mat-option>\\n                  </mat-optgroup>\\n                </mat-select>\\n              </mat-form-field>\\n          </mat-expansion-panel> -->\\n  \\n  \\n      <!-- <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Chemical Classification\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Enter chemical classification information\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n      \\n          <mat-form-field>\\n              <mat-label>WHMIS Hazard Category(es)/Type(s)</mat-label>\\n              <mat-select [formControl]=\\\"WhmisHazardCategoryesFormControl\\\" multiple>\\n                <mat-option>-- None --</mat-option>\\n                <mat-optgroup *ngFor=\\\"let group of WhmisHazardCategoryGroups\\\" [label]=\\\"group.name\\\"\\n                              [disabled]=\\\"group.disabled\\\">\\n                  <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                    {{hazard.viewValue}}\\n                  </mat-option>\\n                </mat-optgroup>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <mat-panel-title>\\n                HMIS Ratings\\n              </mat-panel-title>\\n  \\n              <mat-form-field>\\n                    <mat-label>Health</mat-label>\\n                  <mat-select [(value)]=\\\"selected\\\">\\n                    <mat-option>None</mat-option>\\n                    <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                    <mat-option value=\\\"0\\\">0</mat-option>\\n                    <mat-option value=\\\"1\\\">1</mat-option>\\n                    <mat-option value=\\\"2\\\">2</mat-option>\\n                    <mat-option value=\\\"3\\\">3</mat-option>\\n                    <mat-option value=\\\"4\\\">4</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n  \\n                <mat-form-field>              \\n                      <mat-label>Chronic</mat-label>\\n                    <mat-select [(value)]=\\\"selected\\\">\\n                      <mat-option>None</mat-option>\\n                      <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                      <mat-option value=\\\"yes\\\">Yes</mat-option>\\n                      <mat-option value=\\\"no\\\">No</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n              \\n                  <mat-form-field>              \\n                      <mat-label>Flammability</mat-label>\\n                    <mat-select [(value)]=\\\"selected\\\">\\n                      <mat-option>None</mat-option>\\n                      <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                      <mat-option value=\\\"0\\\">0</mat-option>\\n                      <mat-option value=\\\"1\\\">1</mat-option>\\n                      <mat-option value=\\\"2\\\">2</mat-option>\\n                      <mat-option value=\\\"3\\\">3</mat-option>\\n                      <mat-option value=\\\"4\\\">4</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n  \\n                  <mat-form-field>              \\n                      <mat-label>Reactivity</mat-label>\\n                    <mat-select [(value)]=\\\"selected\\\">\\n                      <mat-option>None</mat-option>\\n                      <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                      <mat-option value=\\\"0\\\">0</mat-option>\\n                      <mat-option value=\\\"1\\\">1</mat-option>\\n                      <mat-option value=\\\"2\\\">2</mat-option>\\n                      <mat-option value=\\\"3\\\">3</mat-option>\\n                      <mat-option value=\\\"4\\\">4</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n  \\n  \\n                  <mat-panel-title>\\n                      NFPA Ratings\\n                    </mat-panel-title>\\n                    \\n                    <mat-form-field>\\n                          <mat-label>Health</mat-label>\\n                        <mat-select [(value)]=\\\"selected\\\">\\n                          <mat-option>None</mat-option>\\n                          <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                          <mat-option value=\\\"0\\\">0</mat-option>\\n                          <mat-option value=\\\"1\\\">1</mat-option>\\n                          <mat-option value=\\\"2\\\">2</mat-option>\\n                          <mat-option value=\\\"3\\\">3</mat-option>\\n                          <mat-option value=\\\"4\\\">4</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n        \\n                      <mat-form-field>              \\n                            <mat-label>Flammability(Flash Points)</mat-label>\\n                            <mat-select [(value)]=\\\"selected\\\">\\n                                <mat-option>None</mat-option>\\n                                <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                                <mat-option value=\\\"0\\\">0</mat-option>\\n                                <mat-option value=\\\"1\\\">1</mat-option>\\n                                <mat-option value=\\\"2\\\">2</mat-option>\\n                                <mat-option value=\\\"3\\\">3</mat-option>\\n                                <mat-option value=\\\"4\\\">4</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                    \\n                        <mat-form-field>              \\n                            <mat-label>Instability</mat-label>\\n                          <mat-select [(value)]=\\\"selected\\\">\\n                            <mat-option>None</mat-option>\\n                            <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                            <mat-option value=\\\"0\\\">0</mat-option>\\n                            <mat-option value=\\\"1\\\">1</mat-option>\\n                            <mat-option value=\\\"2\\\">2</mat-option>\\n                            <mat-option value=\\\"3\\\">3</mat-option>\\n                            <mat-option value=\\\"4\\\">4</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n        \\n                        <mat-form-field>              \\n                            <mat-label>Specific</mat-label>\\n                          <mat-select [(value)]=\\\"selected\\\">\\n                            <mat-option>None</mat-option>\\n                            <mat-option value=\\\"notAvailable\\\">Not Available</mat-option>\\n                            <mat-option value=\\\"empty\\\">[Empty]</mat-option>\\n                            <mat-option value=\\\"acid\\\">ACID</mat-option>\\n                            <mat-option value=\\\"alk\\\">ALK</mat-option>\\n                            <mat-option value=\\\"cor\\\">COR</mat-option>\\n                            <mat-option value=\\\"ox\\\">Ox</mat-option>\\n                            <mat-option value=\\\"needSymbol\\\">(need symbol)</mat-option>\\n                            <mat-option value=\\\"w\\\">W</mat-option>\\n                            <mat-option value=\\\"wox\\\">W OX</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n  \\n                        <mat-panel-title>\\n                            IARC\\n                          </mat-panel-title>\\n                        <mat-form-field>\\n                            <mat-label>IARC</mat-label>\\n                            <mat-select [formControl]=\\\"IARCFormControl\\\" multiple>\\n                              <mat-option>-- None --</mat-option>\\n                              <mat-optgroup *ngFor=\\\"let group of IARCGroups\\\" [label]=\\\"group.name\\\"\\n                                            [disabled]=\\\"group.disabled\\\">\\n                                <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                                  {{hazard.viewValue}}\\n                                </mat-option>\\n                              </mat-optgroup>\\n                            </mat-select>\\n                          </mat-form-field>\\n  \\n                          <mat-panel-title>\\n                              ACGIH\\n                            </mat-panel-title>\\n                        <mat-form-field>\\n                            <mat-label>ACGIH</mat-label>\\n                            <mat-select [formControl]=\\\"ACGIHFormControl\\\" multiple>\\n                              <mat-option>-- None --</mat-option>\\n                              <mat-optgroup *ngFor=\\\"let group of ACGIHGroups\\\" [label]=\\\"group.name\\\"\\n                                            [disabled]=\\\"group.disabled\\\">\\n                                <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                                  {{hazard.viewValue}}\\n                                </mat-option>\\n                              </mat-optgroup>\\n                            </mat-select>\\n                          </mat-form-field>\\n  \\n                          <mat-panel-title>\\n                              Transport Hazard Class(es)\\n                            </mat-panel-title>\\n                          <mat-form-field>\\n                              <mat-label>Transport Hazard Class(es)</mat-label>\\n                              <mat-select [formControl]=\\\"TransportHazardClassFormControl\\\" multiple>\\n                                <mat-option>-- None --</mat-option>\\n                                <mat-optgroup *ngFor=\\\"let group of TransportHazardClassGroups\\\" [label]=\\\"group.name\\\"\\n                                              [disabled]=\\\"group.disabled\\\">\\n                                  <mat-option *ngFor=\\\"let hazard of group.hazard\\\" [value]=\\\"hazard.value\\\">\\n                                    {{hazard.viewValue}}\\n                                  </mat-option>\\n                                </mat-optgroup>\\n                              </mat-select>\\n                            </mat-form-field>\\n        </mat-expansion-panel> -->\\n     <!-- <mat-dialog-actions > -->\\n      <button mat-raised-button [mat-dialog-close]=\\\"updateProductInformation()\\\" color=\\\"primary\\\">Update</button>\\n      <button mat-raised-button  [mat-dialog-close]=\\\"false\\\" class=\\\"spacer-left\\\" color=\\\"warn\\\">CANCEL</button>\\n    <!-- </mat-dialog-actions> -->\\n    </mat-accordion>\\n    \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: \"edit-product\",\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  constructor(\n    private productService: ProductService,\n    private alertify: AlertifyService,\n    private router: Router,\n    @Inject(MAT_DIALOG_DATA) public passedData: any\n  ) {}\n\n  product: any = {};\n  selected;\n  MSDSFormatModel: string;\n  MSDSFormats: string[] = ['WHMIS', 'OSHA', 'ILO/ISO/EU/ANSI', 'Other'];\n\n  // MSDSOriginModel: string;\n  // MSDSOrigins: string[] = ['Canada', 'USA', 'Europe', 'Other'];\n  Canada: string;\n  USA: string;\n  Europe: string;\n  Other: string;\n\n  Discontinued: string;\n  Exempt: string;\n\n  Nonhazardous: string;\n  CosmeticDeviceDrugOrFood: string;\n  PestControlProduct: string;\n  ConsumerProduct: string;\n  ManufacturedArticle: string;\n  NuclearSubstance: string;\n  Explosive: string;\n\n  whmisHazardClasses = new FormControl();\n  whmisHazardClassList: string[] = [\n    'Test1',\n    'Test2',\n    'Test3',\n    'Test4',\n    'Test5',\n    'Test6'\n  ];\n\n  NoMSDSAvailable: string;\n  UnableToIdentity: string;\n  HazardIdentificationComplete: string;\n\n  MSDSOriginFormControl = new FormControl();\n  MSDSOriginGroups: MSDSOriginGroup[] = [\n    {\n      name: 'MSDS Origin',\n      origin: [\n        { value: '0', viewValue: 'Not Available' },\n        { value: '1', viewValue: 'Canada' },\n        { value: '2', viewValue: 'USA' },\n        { value: '3', viewValue: 'Europe' },\n        { value: '4', viewValue: 'Other' }\n      ]\n    }\n  ];\n\n  healthHazardFormControl = new FormControl();\n  healthHazardGroups: HealthHazardGroup[] = [\n    {\n      name: 'Acute Toxicity',\n      hazard: [\n        { value: 'oral', viewValue: 'Oral' },\n        { value: 'dermal', viewValue: 'Dermal' },\n        { value: 'inhalation', viewValue: 'Inhalation' },\n        { value: 'unspecified', viewValue: 'Unspecified' }\n      ]\n    },\n    {\n      name: 'Aspiration hazard ',\n      hazard: [{ value: 'aspirationHazard', viewValue: 'Aspiration Hazard' }]\n    },\n    {\n      name: 'Biohazardous Infectious Materials',\n      hazard: [\n        {\n          value: 'biohazardousInfectious',\n          viewValue: 'Biohazardous Infectious Materials'\n        }\n      ]\n    },\n    {\n      name: 'Carcinogenicity',\n      hazard: [{ value: 'carcinogenicity', viewValue: 'Carcinogenicity' }]\n    },\n    {\n      name: 'Germ cell mutagenicity',\n      hazard: [\n        { value: 'germCellMutagenicity', viewValue: 'Germ cell mutagenicity' }\n      ]\n    },\n    {\n      name: 'Reproductive toxicity',\n      hazard: [\n        { value: 'reproductiveToxicity', viewValue: 'Reproductive toxicity' }\n      ]\n    },\n    {\n      name: 'Respiratory or skin sensitization',\n      hazard: [\n        {\n          value: 'respiratorySkinSensitization',\n          viewValue: 'Respiratory or skin sensitization'\n        }\n      ]\n    },\n    {\n      name: 'Serious eye damage/eye irritation',\n      hazard: [\n        {\n          value: 'seriousEyeDamage',\n          viewValue: 'Serious eye damage/eye irritation'\n        }\n      ]\n    },\n    {\n      name: 'Skin corrosion/irritation',\n      hazard: [\n        {\n          value: 'skinCorrosionIrritation',\n          viewValue: 'Skin corrosion/irritation'\n        }\n      ]\n    },\n    {\n      name: 'Specific Target Organ Toxicity - Single exposure',\n      hazard: [\n        {\n          value: 'specificTargetOrgranToxicitySingle',\n          viewValue: 'Specific Target Organ Toxicity - Single exposure'\n        }\n      ]\n    },\n    {\n      name: 'Specific Target Organ Toxicity - Repeated exposure',\n      hazard: [\n        {\n          value: 'specificTargetOrganToxicityRepeated',\n          viewValue: 'Specific Target Organ Toxicity - Repeated exposure'\n        }\n      ]\n    },\n    {\n      name: 'Health Hazards Not Otherwise Classified',\n      hazard: [\n        {\n          value: 'healthHazardsNotOtherwiseClassified',\n          viewValue: 'Health Hazards Not Otherwise Classified'\n        }\n      ]\n    }\n  ];\n\n  physicalHazardFormControl = new FormControl();\n  physicalHazardGroups: PhysicalHazardGroup[] = [\n    {\n      name: 'Combustible dusts',\n      hazard: [{ value: 'combustibleDusts', viewValue: 'Combustible dusts' }]\n    },\n    {\n      name: 'Corrosive to metals',\n      hazard: [{ value: 'corrosiveToMetals', viewValue: 'Corrosive to metals' }]\n    },\n    {\n      name: 'Flammable Gases',\n      hazard: [{ value: 'flammableGases', viewValue: 'Flammable Gases' }]\n    },\n    {\n      name: 'Flammable Aerosols',\n      hazard: [{ value: 'flammableAerosols', viewValue: 'Flammable Aerosols' }]\n    },\n    {\n      name: 'Flammable Liquids',\n      hazard: [{ value: 'flammableLiquids', viewValue: 'Flammable Liquids' }]\n    },\n    {\n      name: 'Flammable solids',\n      hazard: [{ value: 'flammableSolids', viewValue: 'Flammable solids' }]\n    },\n    {\n      name: 'Gases under pressure',\n      hazard: [\n        { value: 'gasesUnderPressure', viewValue: 'Gases under pressure ' }\n      ]\n    },\n    {\n      name: 'Oxidizing gases',\n      hazard: [{ value: 'oxidizingGases', viewValue: 'Oxidizing gases' }]\n    },\n    {\n      name: 'Oxidizing liquids',\n      hazard: [{ value: 'oxidizingLiquids', viewValue: 'Oxidizing liquids' }]\n    },\n    {\n      name: 'Oxidizing solids',\n      hazard: [{ value: 'oxidizingSolids', viewValue: 'Oxidizing solids' }]\n    },\n    {\n      name: 'Organic peroxides',\n      hazard: [{ value: 'organicPeroxides', viewValue: 'Organic peroxides' }]\n    },\n    {\n      name: 'Pyrophoric gases',\n      hazard: [{ value: 'pyrophoricGases', viewValue: 'Pyrophoric gases' }]\n    },\n    {\n      name: 'Pyrophoric liquids',\n      hazard: [{ value: 'pyrophoricLiquids', viewValue: 'Pyrophoric liquids' }]\n    },\n    {\n      name: 'Pyrophoric solids',\n      hazard: [{ value: 'pyrophoricSolids', viewValue: 'Pyrophoric solids' }]\n    },\n    {\n      name: 'Pyrophoric gases',\n      hazard: [{ value: 'pyrophoricGases', viewValue: 'Pyrophoric gases' }]\n    },\n    {\n      name: 'Self-heating substances and mixtures',\n      hazard: [\n        {\n          value: 'selfheatingSubstances',\n          viewValue: 'Self-heating substances and mixtures'\n        }\n      ]\n    },\n    {\n      name: 'Simple Asphyxiants',\n      hazard: [{ value: 'simpleAsphyxiants', viewValue: 'Simple Asphyxiants' }]\n    },\n    {\n      name:\n        'Substances and mixtures which, in contact with water, emit flammable gases',\n      hazard: [\n        {\n          value: 'substancesAndMixtures',\n          viewValue:\n            'Substances and mixtures which, in contact with water, emit flammable gase'\n        }\n      ]\n    },\n    {\n      name: 'Physical hazards not otherwise classified',\n      hazard: [\n        {\n          value: 'physicalHazardsNotOtherwiseClassified',\n          viewValue: 'Physical hazards not otherwise classified'\n        }\n      ]\n    }\n  ];\n\n  WhmisHazardCategoryesFormControl = new FormControl();\n  WhmisHazardCategoryGroups: WhmisHazardCategoryGroup[] = [\n    {\n      name: 'Physical',\n      hazard: [\n        { value: 'physical-1', viewValue: '1' },\n        { value: 'physical-2', viewValue: '2' },\n        { value: 'physical-3', viewValue: '3' },\n        { value: 'physical-A', viewValue: 'A' },\n        { value: 'physical-B*', viewValue: 'B*' },\n        { value: 'physical-C', viewValue: 'C' },\n        { value: 'physical-D', viewValue: 'D' },\n        { value: 'physical-E', viewValue: 'E' },\n        { value: 'physical-F', viewValue: 'F' },\n        { value: 'physical-G', viewValue: 'G' },\n        { value: 'physical-A', viewValue: 'A' },\n        { value: 'physical-1A', viewValue: '1A' },\n        { value: 'physical-2A', viewValue: '2A' },\n        { value: 'physical-1B', viewValue: '1B' },\n        { value: 'physical-2B', viewValue: '2B' },\n        { value: 'physical-1C', viewValue: '1C' }\n      ]\n    },\n    {\n      name: 'Health',\n      hazard: [\n        { value: 'health-1', viewValue: '1' },\n        { value: 'health-1A', viewValue: '1A' },\n        { value: 'health-2A', viewValue: '2A' },\n        { value: 'health-1B', viewValue: '1B' },\n        { value: 'health-2B', viewValue: '2B' },\n        { value: 'health-1C', viewValue: '1C' },\n        { value: 'health-2', viewValue: '2' },\n        { value: 'health-3', viewValue: '3' },\n        { value: 'health-4', viewValue: '4' }\n      ]\n    }\n  ];\n\n  ACGIHFormControl = new FormControl();\n  ACGIHGroups: ACGIHGroup[] = [\n    {\n      name: 'ACGIH',\n      hazard: [\n        { value: 'notAvailable', viewValue: 'Not Available' },\n        { value: 'a1', viewValue: 'A1' },\n        { value: 'a2', viewValue: 'A2' },\n        { value: 'a3', viewValue: 'A3' },\n        { value: 'a4', viewValue: 'A4' },\n        { value: 'a5', viewValue: 'A5' },\n        { value: 'notListed', viewValue: 'Not listed ACGIH carcinogens' }\n      ]\n    }\n  ];\n\n  IARCFormControl = new FormControl();\n  IARCGroups: ACGIHGroup[] = [\n    {\n      name: 'IARC',\n      hazard: [\n        { value: 'notAvailable', viewValue: 'Not Available' },\n        { value: 'iarc-1', viewValue: '1' },\n        { value: 'iarc-2a', viewValue: '2A' },\n        { value: 'iarc-2b', viewValue: '2B' },\n        { value: 'iarc-3', viewValue: '3' },\n        { value: 'iarc-4', viewValue: '4' },\n        { value: 'notListed', viewValue: 'Not listed IARC carcinogens' }\n      ]\n    }\n  ];\n\n  TransportHazardClassFormControl = new FormControl();\n  TransportHazardClassGroups: TransportHazardClassGroup[] = [\n    {\n      name: 'Transport Hazard Class(es)',\n      hazard: [\n        { value: 'notAvailable', viewValue: 'Not Available' },\n        { value: '1.1', viewValue: '1.1' },\n        { value: '1.2', viewValue: '1.2' },\n        { value: '1.3', viewValue: '1.3' },\n        { value: '1.4', viewValue: '1.4' },\n        { value: '1.5', viewValue: '1.5' },\n        { value: '1.6', viewValue: '1.6' },\n        { value: '2.1', viewValue: '2.1' },\n        { value: '2.2', viewValue: '2.2' },\n        { value: '2.3', viewValue: '2.3' },\n        { value: '2.2(5.1)', viewValue: '2.2(5.1)' },\n        { value: '3', viewValue: '3' },\n        { value: '4.1', viewValue: '4.1' },\n        { value: '4.2', viewValue: '4.2' },\n        { value: '4.3', viewValue: '4.3' },\n        { value: '5.1', viewValue: '5.1' },\n        { value: '5.2', viewValue: '5.2' },\n        { value: '6.1', viewValue: '6.1' },\n        { value: '6.2', viewValue: '6.2' },\n        { value: '7', viewValue: '7' },\n        { value: '8', viewValue: '8' },\n        { value: '9', viewValue: '9' }\n      ]\n    }\n  ];\n\n  // product = {\n  //   productName: '',\n  //   productCode: '',\n  //   productAlias: ''\n  //   productId: ''\n  // };\n\n  productId = this.passedData.product.productId;\n\n  ngOnInit() {}\n\n  updateProductInformation() {\n    return this.productService\n      .updateProductInfo(this.productId, this.product)\n      .subscribe(\n        next => {\n          this.alertify.success('Product updated successfully');\n          this.router.navigate(['/inventory-Product']);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n\nexport interface MSDSOrigin {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSOriginGroup {\n  disabled?: boolean;\n  name: string;\n  origin: MSDSOrigin[];\n}\n\nexport interface HealthHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface HealthHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: HealthHazard[];\n}\n\nexport interface PhysicalHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PhysicalHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: PhysicalHazard[];\n}\n\nexport interface WhmisHazardCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface WhmisHazardCategoryGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: WhmisHazardCategory[];\n}\n\nexport interface ACGIHCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ACGIHGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: ACGIHCategory[];\n}\n\nexport interface TransportHazardClassCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface TransportHazardClassGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: TransportHazardClassCategory[];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvZXhwb3J0TGlzdC9leHBvcnRMaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div\\n*ngIf=\\\"isLoading\\\"\\nstyle=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n<mat-progress-bar\\n  color=\\\"primary\\\"\\n  mode=\\\"indeterminate\\\"\\n></mat-progress-bar>\\n</div>\\n\\n<mat-card>\\n  <mat-card-title>Export List</mat-card-title>\\n\\n    <mat-checkbox class=\\\"example-margin\\\" name=\\\"productNameChecked\\\" [(ngModel)]=\\\"productNameChecked\\\" [checked]=\\\"productNameChecked\\\" (change)=\\\"onProductNameChecked()\\\">Product Name</mat-checkbox>\\n\\n    <br />\\n    <mat-checkbox class=\\\"example-margin\\\" name=\\\"productCodeChecked\\\" [(ngModel)]=\\\"productCodeChecked\\\" [checked]=\\\"productCodeChecked\\\" (change)=\\\"onProductCodeChecked()\\\">Product Code</mat-checkbox>\\n    <br />\\n    <mat-checkbox class=\\\"example-margin\\\" name=\\\"casNumberChecked\\\" [(ngModel)]=\\\"casNumberChecked\\\" [checked]=\\\"casNumberChecked\\\" (change)=\\\"onCasNumberChecked()\\\">Cas Number</mat-checkbox>\\n    <br />\\n    <mat-checkbox class=\\\"example-margin\\\" name=\\\"manufacturerNameChecked\\\" [(ngModel)]=\\\"manufacturerNameChecked\\\" [checked]=\\\"manufacturerNameChecked\\\" (change)=\\\"onManufacturerNameChecked()\\\">Manufacturer</mat-checkbox>\\n    <br />\\n    <mat-checkbox class=\\\"example-margin\\\" name=\\\"locationChecked\\\" [(ngModel)]=\\\"locationChecked\\\" [checked]=\\\"locationChecked\\\" (change)=\\\"onLocationChecked()\\\">Location</mat-checkbox>\\n<br/> <br/>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"exportProductList()\\\"><a [target]=\\\"'_blank'\\\">Submit</a></button>\\n  <button mat-raised-button  [mat-dialog-close]=\\\"false\\\" class=\\\"spacer-left\\\" color=\\\"warn\\\">Cancel</button>\\n<!-- </form> -->\\n</mat-card>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ExporListService } from 'src/app/_service/exporList.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-exportList',\n  templateUrl: './exportList.component.html',\n  styleUrls: ['./exportList.component.css']\n})\nexport class ExportListComponent implements OnInit {\n\n  constructor(private exportListService: ExporListService,\n    private alertify: AlertifyService,\n    private router: Router,\n    @Inject(MAT_DIALOG_DATA) public passedData: any\n    ) { }\n    productId = this.passedData.data;\n\n    allExportLists: any = [];\n\n  productName;\n  productNameChecked = false;\n\n  productCode;\n  productCodeChecked = false;\n\n  casNumber;\n  casNumberChecked = false;\n\n  manufacturerName;\n  manufacturerNameChecked = false;\n\n  location;\n  locationChecked = false;\n\n  isLoading = false;\n\n\n  ngOnInit() {\n    console.log(this.productId);\n  }\n\n\n  onProductNameChecked() {\n    this.productName = ''\n    if (this.productNameChecked) {\n      this.productName = 'ProductName'\n    }\n    console.log('fn ' + this.productName);\n  }\n\n  onProductCodeChecked() {\n    this.productCode = ''\n    if (this.productCodeChecked) {\n      this.productCode = 'ProductCode'\n    }\n    console.log('fn ' + this.productCode);\n  }\n\n  onCasNumberChecked() {\n    this.casNumber = ''\n    if (this.casNumberChecked) {\n      this.casNumber = 'CasNumber'\n    }\n    console.log('fn ' + this.casNumber);\n  }\n\n  onManufacturerNameChecked() {\n    this.manufacturerName = ''\n    if (this.manufacturerNameChecked) {\n      this.manufacturerName = 'ManufacturerName'\n    }\n    console.log('fn ' + this.manufacturerName);\n  }\n\n  onLocationChecked() {\n    this.location = ''\n    if (this.locationChecked) {\n      this.location = 'AuthorityLocation'\n    }\n    console.log('fn ' + this.location);\n  }\n\n  exportProductList() {\n    this.isLoading = true;\n\n    let params = new URLSearchParams();\n    params.append('selection', this.productName);\n    params.append('selection', this.productCode);\n    params.append('selection', this.casNumber);\n    params.append('selection', this.manufacturerName);\n    params.append('selection', this.location);\n    for(const product of this.productId) {\n      params.append('productId', product.productId);\n    }\n\n    this.exportListService.getExportList(params).subscribe(blob  => {\n      params;\n      console.log('params: ' + params);\n      const link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = 'Export';\n      link.click();\n      this.isLoading = false;\n      this.alertify.success('Exported List Completed');\n  }, error => {\n    this.isLoading = false;\n    this.alertify.error('Something went wrong, please try again.');\n  }\n  );\n  }\n}\n\nexport interface ExportListFields {\n  productNames: string;\n  productCodes:  string;\n}","module.exports = \"table {\\n    font-family: arial, sans-serif !important;\\n    border-collapse: collapse !important;\\n    width: 100% !important;\\n  }\\n  \\n  td, th {\\n    border: 1px solid #dddddd !important;\\n    text-align: left !important;\\n    padding: 8px !important;\\n  }\\n  \\n  tr:nth-child(even) {\\n    background-color: #dddddd !important; \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9pbnZlbnRvcnktcHJvZHVjdC9pbnZlbnRvcnktZGV0YWlsL2ludmVudG9yeS1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlDQUF5QztJQUN6QyxvQ0FBb0M7SUFDcEMsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usb0NBQW9DO0lBQ3BDLDJCQUEyQjtJQUMzQix1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSxvQ0FBb0M7RUFDdEMiLCJmaWxlIjoiYXBwL2ludmVudG9yeS1wcm9kdWN0L2ludmVudG9yeS1kZXRhaWwvaW52ZW50b3J5LWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIGZvbnQtZmFtaWx5OiBhcmlhbCwgc2Fucy1zZXJpZiAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2UgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIFxuICB0ZCwgdGgge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQgIWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogOHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIHRyOm50aC1jaGlsZChldmVuKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RkZGRkZCAhaW1wb3J0YW50OyBcbiAgfSJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Inventory Details</mat-card-title>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product.product_name\\\" name=\\\"product_name\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <textarea matInput readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" [(ngModel)]=\\\"product.productAlias\\\" name=\\\"productAlias\\\"></textarea>\\n        <input matInput readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" *ngIf=\\\"product.productAlias.length === 0\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"product.product_code\\\" name=\\\"product_code\\\">\\n        <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Code\\\" *ngIf=\\\"product.product_code.length === 0\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n            <input readonly=\\\"true\\\" matInput placeholder=\\\"Cas Number\\\" [(ngModel)]=\\\"product.cas_no\\\" name=\\\"cas_no\\\">\\n            <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.cas_no.length === 0\\\" placeholder=\\\"Cas Number\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.healthHazardClass !== null || product.healthHazardClass !== ''\\\" placeholder=\\\"Health Hazard Class\\\" [(ngModel)]=\\\"product.healthHazardClass\\\" name=\\\"healthHazardClass\\\">\\n        <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.healthHazardClass.length === 0\\\" placeholder=\\\"Health Hazard Class\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" *ngIf=\\\"product.physicalHazardClass !== null\\\" matInput placeholder=\\\"Physical Hazard Class\\\" [(ngModel)]=\\\"product.physicalHazardClass\\\" name=\\\"physicalHazardClass\\\">\\n        <input readonly=\\\"true\\\" *ngIf=\\\"product.physicalHazardClass.length === 0\\\" matInput placeholder=\\\"Physical Hazard Class\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <div style=\\\"height:500px; overflow:auto;\\\">\\n        <table *ngFor=\\\"let product of productDetail\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" width=\\\"325\\\">\\n            <tr>\\n              <th>Location</th>\\n              <th>Product Secondary Name</th>\\n              <th>Date Added</th>\\n              <th>Remove from Location</th>\\n            </tr>\\n            <tr *ngFor=\\\"let productInfo of product.health_authority\\\">\\n              <td>{{productInfo.location}}</td>\\n              <td>{{productInfo.secondaryName}}\\n                <span *ngIf=\\\"productInfo.secondaryName === null\\\">N/A</span>\\n                <span *appHasRole=\\\"['Site Admin']\\\">\\n                <mat-icon style=\\\"cursor: pointer;\\\" *ngIf=\\\"productInfo.secondaryName === null\\\" (click)=\\\"openCreateSecondaryNameModalWindow(productInfo)\\\">library_add</mat-icon>\\n                <mat-icon style=\\\"cursor: pointer;\\\" *ngIf=\\\"productInfo.secondaryName !== null\\\" (click)=\\\"openUpdateSecondaryNameModalWindow(productInfo)\\\">edit</mat-icon>\\n              </span>\\n              </td>\\n                \\n                <td>{{productInfo.date_added}}\\n                  <span *ngIf=\\\"productInfo.date_added === null\\\">N/A</span>\\n                </td>\\n                <td><mat-icon style=\\\"cursor: pointer;\\\" (click)=\\\"removeProductfromLocation(productInfo.rootAuthorityUnitId, productInfo.productAuthorityId)\\\">close</mat-icon></td>\\n            </tr>\\n          </table>\\n        </div>\\n         <mat-card-actions class=\\\"fullWidth\\\" style=\\\"display:flex; align-items:flex-end !important; margin-left: 5px; \\\">\\n        <button mat-raised-button *ngIf=\\\"internal\\\" (click)=\\\"getSDSPDF()\\\"><a [target]=\\\"'_blank'\\\">View SDS</a></button>\\n        <button mat-raised-button *ngIf=\\\"!internal\\\" (click)=\\\"getCloudSDSPDF()\\\" ><a>View SDS</a></button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatTableDataSource } from '@angular/material';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { ProductLocationComponent } from 'src/app/product-location/product-location.component';\nimport { CreateSecondarynameComponent } from '../create-secondaryname/create-secondaryname.component';\nimport { UpdateSecondarynameComponent } from '../update-secondaryname/update-secondaryname.component';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: \"inventory-detail\",\n  templateUrl: './inventory-detail.component.html',\n  styleUrls: ['./inventory-detail.component.css']\n})\nexport class InventoryDetailComponent implements OnInit {\n\n  product: any = {};\n  selected;\n  productDetail: any;\n  productDetailInfo: any = {};\n  // productAuthorityId: any;\n\n  productId = this.passedData.row.productId;\n  product_name = this.passedData.row.product_name;\n  ref_id = this.passedData.row['ref_id'];\n  internal = this.passedData.row['internal'];\n\n  model: any;\n  MyDataSource: any = [];\n\n  displayedColumns: string[] = [\n    'select',\n    'Location',\n    'SecondaryName',\n    'DateAdded',\n    'Remove'\n  ];\n\n  selection = new SelectionModel<ProductDetails>(true, []);\n  \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private productService: ProductService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.getProductDetail();\n    // console.log('Passed Data: ' + this.passedData.row)\n    // console.log('RootAuth' + this.rootAuthorityUnitId);\n  }\n\n  \n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      if (numSelected === 0) {\n        return null;\n      }\n      const numRows = this.MyDataSource.data.length;\n      return numSelected === numRows;\n    }\n  \n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n      this.isAllSelected()\n        ? this.selection.clear()\n        : this.MyDataSource.data.forEach(row => this.selection.select(row));\n    }\n  \n    /** The label for the checkbox on the passed row */\n    checkboxLabel(row?: ProductDetails): string {\n      if (!row) {\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n      }\n      // for(const test of this.selection.selected) {\n      //   console.log('This is it: ' + test[0].firstName);\n      // }\n      return `${\n        this.selection.isSelected(row) ? 'deselect' : 'select'\n      } row ${row.position + 1}`;\n    }\n\n  getProductDetail() {\n    return this.productService\n      .getinventoryProductDetail(this.productId).subscribe(\n        res => {\n        this.productDetail = res;\n        this.productDetailInfo = this.productDetail.health_authority;\n       this.MyDataSource = new MatTableDataSource(this.productDetail);\n       this.MyDataSource.data = res;\n      },\n      error => {\n        this.alertify.error('Unable to retrieve product detail');\n      });\n  }\n\n  openProductLocationPage(productId) {\n    console.log('openProductLocationPage()' + productId);\n    const dialogRef = this.dialog.open(ProductLocationComponent, {\n      width: '1000px',\n      data: {\n        productId: this.productId\n      }\n    });\n\n    // dialogRef.disableClose = true;\n  }\n  getSDSPDF() {\n    this.productService.getPDF(this.productId).subscribe(\n      blob => {\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        // var test = window.URL.createObjectURL(blob);\n        // link.download=\"Test.pdf\"; // downloads pdf file and names it test.pdf\n        // link.click();\n        // window.open(link.href, '_blank');\n        link.download = `${this.product_name}.pdf`; // downloads pdf file and names it test.pdf\n        link.click();\n      },\n      error => {}\n    );\n  }\n\n  getCloudSDSPDF() {\n    this.productService.getCloudSDS(this.ref_id).subscribe(\n      blob => {\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        // var test = window.URL.createObjectURL(blob);\n        // link.download=\"SDS.pdf\"; // downloads pdf file and names it test.pdf\n        // window.open(link.href, '_blank');\n        link.download = `${this.product_name}.pdf`; // downloads pdf file and names it test.pdf\n        // console.log(link.download);\n        link.click();\n      },\n      error => {}\n    );\n  }\n\n  removeProductfromLocation(rootAuthorityUnitId, productAuthorityId) {\n    var prompt = confirm('Are you sure you want to remove this product from this location?');\n    if (prompt) {\n      return this.productService\n        .removeProductLocation(this.productId, rootAuthorityUnitId, productAuthorityId\n        )\n        .subscribe(res => {\n          this.model = res;\n          this.alertify.success('Product successfully removed');\n          console.log(res);\n        }), error => {\n          this.alertify.error('Something went wrong, please try again');\n        };\n    }\n  }\n\n  openCreateSecondaryNameModalWindow(product) {\n    const dialogRef = this.dialog.open(CreateSecondarynameComponent, {\n      width: '500px',\n      data: {\n        row: product\n      }\n    });\n  }\n\n  openUpdateSecondaryNameModalWindow(product) {\n    const dialogRef = this.dialog.open(UpdateSecondarynameComponent, {\n      width: '500px',\n      data: {\n        row: product\n      }\n    });\n  }\n}\n\nexport interface ProductDetails {\n  productId: number;\n  productName: string;\n  productCode: string;\n  casNumber: string;\n  ProductAlias: string;\n  HealthHazardClass: string;\n  PhysicalHazardClass: string;\n  position: number;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvaW52ZW50b3J5LWVkaXQvaW52ZW50b3J5LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <mat-accordion>\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-description>\\n        Edit Product Inventory\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <form\\n      #updateProductForm=\\\"ngForm\\\"\\n      (submit)=\\\"updateProductinformation()\\\"\\n      id=\\\"updateProductForm\\\"\\n      *appHasRole=\\\"['Super Admin']\\\"\\n    >\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Name\\\"\\n          name=\\\"name\\\"\\n          [(ngModel)]=\\\"model.name\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Code\\\"\\n          name=\\\"code\\\"\\n          [(ngModel)]=\\\"model.code\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Alias\\\"\\n          name=\\\"alias\\\"\\n          [(ngModel)]=\\\"model.alias\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker1\\\"\\n          placeholder=\\\"Updated On\\\"\\n          name=\\\"updatedOn\\\"\\n          [(ngModel)]=\\\"model.updatedOn\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker1\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker3\\\"\\n          placeholder=\\\"Revision Date\\\"\\n          name=\\\"revisionDate\\\"\\n          [(ngModel)]=\\\"model.revisionDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker3\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker3></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker4\\\"\\n          placeholder=\\\"Last Verified\\\"\\n          name=\\\"lastVerifiedDate\\\"\\n          [(ngModel)]=\\\"model.lastVerifiedDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker4\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker4></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"picker5\\\"\\n          placeholder=\\\"Most Recent Request\\\"\\n          name=\\\"mostRecentRequestDate\\\"\\n          [(ngModel)]=\\\"model.mostRecentRequestDate\\\"\\n        />\\n        <mat-datepicker-toggle\\n          matSuffix\\n          [for]=\\\"picker5\\\"\\n        ></mat-datepicker-toggle>\\n        <mat-datepicker #picker5></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          readonly=\\\"true\\\"\\n          placeholder=\\\"Manufacturer Name\\\"\\n          name=\\\"manufacturerName\\\"\\n          [(ngModel)]=\\\"model.manufacturerName\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-select\\n        placeholder=\\\"Edit Manufacturer\\\"\\n        [formControl]=\\\"manufacturerList\\\"\\n        multiple\\n        [(ngModel)]=\\\"selected\\\"\\n        (selectionChange)=\\\"onSelectManufacturers(selected)\\\"\\n      >\\n        <mat-option\\n          *ngFor=\\\"let manufacturer of manufacturers\\\"\\n          [value]=\\\"manufacturer.manufacturerId\\\"\\n        >\\n          {{ manufacturer.manufacturerName }}\\n        </mat-option>\\n      </mat-select>\\n      <br /><br />\\n      <mat-card-content>\\n        <label>MSDS Origin:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.originFlag\\\"\\n            name=\\\"originFlag\\\"\\n            >{{ model.originFlag }}</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <label>MSDS Format:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.formatId\\\"\\n            name=\\\"originFlag\\\"\\n            >{{ model.formatId }}</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <label>Discontinued:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.discontinued\\\"\\n            name=\\\"Discontinued\\\"\\n            >Discontinued</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n      <br />\\n      <mat-card-content>\\n        <label>WHMIS Exempt:</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.exempt\\\"\\n            name=\\\"exempt\\\"\\n            >Whmis Exempt?</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n      <br />\\n      <mat-card-content>\\n        <label>Exemption Class</label> <br /><br />\\n        <section class=\\\"example-section\\\">\\n          <mat-checkbox\\n            class=\\\"example-margin\\\"\\n            [(ngModel)]=\\\"model.exemptionClass\\\"\\n            name=\\\"exemptionClass\\\"\\n            >Exemption Class</mat-checkbox\\n          >\\n        </section>\\n      </mat-card-content>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Registration Number\\\"\\n          name=\\\"registrationNumber\\\"\\n          [(ngModel)]=\\\"model.registrationNumber\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-card-content>\\n        <label>Notes:</label> <br /><br />\\n        <mat-form-field style=\\\"width:100%\\\">\\n          <textarea\\n            matInput\\n            placeholder=\\\"Notes\\\"\\n            [(ngModel)]=\\\"model.notes\\\"\\n            name=\\\"notes\\\"\\n          ></textarea>\\n        </mat-form-field>\\n      </mat-card-content>\\n\\n      <mat-form-field style=\\\"width:100%\\\">\\n          <mat-label>Status</mat-label>\\n          <mat-select\\n            [formControl]=\\\"StatusFormControl\\\"\\n            multiple\\n            [(value)]=\\\"selectedStatus\\\"\\n            [(ngModel)]=\\\"selectedStatus\\\"\\n            (selectionChange)=\\\"onSelectStatus(selectedStatus)\\\"\\n          >\\n            <mat-optgroup\\n              *ngFor=\\\"let group of StatusGroups\\\"\\n              [label]=\\\"group.name\\\"\\n              [disabled]=\\\"group.disabled\\\"\\n            >\\n              <mat-option\\n                *ngFor=\\\"let model of group.status\\\"\\n                [value]=\\\"model.value\\\"\\n              >\\n                {{ model.viewValue }}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <br />\\n\\n      <button\\n        mat-raised-button\\n        style=\\\"margin-right: 2%\\\"\\n        type=\\\"submit\\\"\\n        form=\\\"updateProductForm\\\"\\n      >\\n        Save\\n      </button>\\n\\n      <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n        Close\\n      </button>\\n    </form>\\n\\n    <form\\n      #createSecondaryNameForm=\\\"ngForm\\\"\\n      (submit)=\\\"createSecondaryProductName()\\\"\\n      id=\\\"createSecondaryNameForm\\\"\\n      *appHasRole=\\\"['Site Admin']\\\"\\n    >\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Product Secondary Name\\\"\\n          name=\\\"secondaryName\\\"\\n          [(ngModel)]=\\\"model.secondaryName\\\"\\n        />\\n      </mat-form-field>\\n\\n      <button\\n        mat-raised-button\\n        style=\\\"margin-right: 2%\\\"\\n        type=\\\"submit\\\"\\n        form=\\\"createSecondaryNameForm\\\"\\n      >\\n        Save\\n      </button>\\n\\n      <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n        Close\\n      </button>\\n    </form>\\n  </mat-expansion-panel>\\n</mat-accordion> -->\\n\\n<form\\n#createSecondaryNameForm=\\\"ngForm\\\"\\n(submit)=\\\"null\\\"\\nid=\\\"createSecondaryNameForm\\\"\\n*appHasRole=\\\"['Site Admin']\\\"\\n>\\n<mat-form-field class=\\\"fullWidth\\\">\\n  <input\\n    matInput\\n    placeholder=\\\"Product Secondary Name\\\"\\n    name=\\\"secondaryName\\\"\\n    [(ngModel)]=\\\"model.secondaryName\\\"\\n  />\\n</mat-form-field>\\n\\n<button\\n  mat-raised-button\\n  style=\\\"margin-right: 2%\\\"\\n  type=\\\"submit\\\"\\n  form=\\\"createSecondaryNameForm\\\"\\n>\\n  Save\\n</button>\\n\\n<button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n  Close\\n</button>\\n</form>\\n\\n\\n\\n<mat-accordion>\\n    <form\\n      #updateProductForm=\\\"ngForm\\\"\\n      (submit)=\\\"updateProductinformation()\\\"\\n      id=\\\"updateProductForm\\\"\\n      *appHasRole=\\\"['Super Admin']\\\"\\n    >\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Product Info\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Update product information\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Product Name\\\"\\n            name=\\\"name\\\"\\n            [(ngModel)]=\\\"model.name\\\"\\n          />\\n        </mat-form-field>\\n        <br /><br />\\n        <form id=\\\"manufacturerForm\\\">\\n            <mat-form-field class=\\\"fullWidth\\\">\\n                <input\\n                  matInput\\n                  readonly=\\\"true\\\"\\n                  placeholder=\\\"Manufacturer Name\\\"\\n                  name=\\\"manufacturerName\\\"\\n                  [(ngModel)]=\\\"model.manufacturerName\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field class=\\\"fullWidth\\\">\\n\\n              <mat-select\\n                placeholder=\\\"Edit Manufacturer\\\"\\n                [formControl]=\\\"manufacturerList\\\"\\n                multiple\\n                [(ngModel)]=\\\"selected\\\"\\n                (selectionChange)=\\\"onSelectManufacturers(selected)\\\"\\n              >\\n                <mat-option\\n                  *ngFor=\\\"let manufacturer of manufacturers\\\"\\n                  [value]=\\\"manufacturer.manufacturerId\\\"\\n                >\\n                  {{ manufacturer.manufacturerName }}\\n                </mat-option>\\n              </mat-select>\\n              </mat-form-field>\\n        </form>\\n        <br />\\n        <br />\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Product Code\\\"\\n            name=\\\"code\\\"\\n            [(ngModel)]=\\\"model.code\\\"\\n          />\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Product Alias\\\"\\n            name=\\\"productAlias\\\"\\n            [(ngModel)]=\\\"model.productAlias\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input\\n            matInput\\n            [matDatepicker]=\\\"picker2\\\"\\n            placeholder=\\\"Updated On\\\"\\n            name=\\\"updatedOn\\\"\\n            [(ngModel)]=\\\"model.updatedOn\\\"\\n          />\\n          <mat-datepicker-toggle\\n            matSuffix\\n            [for]=\\\"picker2\\\"\\n          ></mat-datepicker-toggle>\\n          <mat-datepicker #picker2></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input\\n            matInput\\n            [matDatepicker]=\\\"picker3\\\"\\n            placeholder=\\\"Revision Date\\\"\\n            name=\\\"revisionDate\\\"\\n            [(ngModel)]=\\\"model.revisionDate\\\"\\n          />\\n          <mat-datepicker-toggle\\n            matSuffix\\n            [for]=\\\"picker3\\\"\\n          ></mat-datepicker-toggle>\\n          <mat-datepicker #picker3></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <input\\n            matInput\\n            [matDatepicker]=\\\"picker4\\\"\\n            placeholder=\\\"Last Verified\\\"\\n            name=\\\"lastVerifiedDate\\\"\\n            [(ngModel)]=\\\"model.lastVerifiedDate\\\"\\n          />\\n          <mat-datepicker-toggle\\n            matSuffix\\n            [for]=\\\"picker4\\\"\\n          ></mat-datepicker-toggle>\\n          <mat-datepicker #picker4></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width:100%\\\">\\n          <mat-label>MSDS Origin</mat-label>\\n          <mat-select\\n            [formControl]=\\\"MSDSOriginFormControl\\\"\\n            multiple\\n            [(value)]=\\\"selectedMSDSOrigin\\\"\\n            [(ngModel)]=\\\"selectedMSDSOrigin\\\"\\n            (selectionChange)=\\\"onSelectMSDSOrigin(selectedMSDSOrigin)\\\"\\n          >\\n            <mat-optgroup\\n              *ngFor=\\\"let group of MSDSOriginGroups\\\"\\n              [label]=\\\"group.name\\\"\\n              [disabled]=\\\"group.disabled\\\"\\n            >\\n              <mat-option\\n                *ngFor=\\\"let model of group.origin\\\"\\n                [value]=\\\"model.value\\\"\\n              >\\n                {{ model.viewValue }}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width:100%\\\">\\n          <mat-label>MSDS Format</mat-label>\\n          <mat-select\\n            [formControl]=\\\"MSDSFormatFormControl\\\"\\n            multiple\\n            [(value)]=\\\"selectedMSDSFormat\\\"\\n            [(ngModel)]=\\\"selectedMSDSFormat\\\"\\n            (selectionChange)=\\\"onSelectMSDSFormat(selectedMSDSFormat)\\\"\\n          >\\n            <mat-optgroup\\n              *ngFor=\\\"let group of MSDSFormatGroups\\\"\\n              [label]=\\\"group.name\\\"\\n              [disabled]=\\\"group.disabled\\\"\\n            >\\n              <mat-option\\n                *ngFor=\\\"let model of group.format\\\"\\n                [value]=\\\"model.value\\\"\\n              >\\n                {{ model.viewValue }}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <br />\\n  \\n        <mat-card-content>\\n          <label>Discontinued:</label> <br /><br />\\n          <section class=\\\"example-section\\\">\\n            <mat-checkbox\\n              class=\\\"example-margin\\\"\\n              [(ngModel)]=\\\"model.discontinued\\\"\\n              name=\\\"Discontinued\\\"\\n              >Discontinued</mat-checkbox\\n            >\\n          </section>\\n        </mat-card-content>\\n        <br />\\n        <mat-card-content>\\n          <label>Exempt:</label> <br /><br />\\n          <section class=\\\"example-section\\\">\\n            <mat-checkbox\\n              class=\\\"example-margin\\\"\\n              [(ngModel)]=\\\"model.exempt\\\"\\n              name=\\\"exempt\\\"\\n              >Exempt</mat-checkbox\\n            >\\n          </section>\\n        </mat-card-content>\\n        <br />\\n  \\n        <mat-form-field style=\\\"width:100%\\\">\\n          <mat-label>Exemption Class</mat-label>\\n          <mat-select\\n            [formControl]=\\\"ExemptionClassFormControl\\\"\\n            multiple\\n            [(value)]=\\\"selectedExemptionClass\\\"\\n            [(ngModel)]=\\\"selectedExemptionClass\\\"\\n            (selectionChange)=\\\"onSelectExemptionClass(selectedExemptionClass)\\\"\\n          >\\n            <mat-optgroup\\n              *ngFor=\\\"let group of ExemptionClassGroups\\\"\\n              [label]=\\\"group.name\\\"\\n              [disabled]=\\\"group.disabled\\\"\\n            >\\n              <mat-option\\n                *ngFor=\\\"let model of group.exemptionClass\\\"\\n                [value]=\\\"model.value\\\"\\n              >\\n                {{ model.viewValue }}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <br />\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Registration No.\\\"\\n            [(ngModel)]=\\\"model.registrationNumber\\\"\\n            name=\\\"registrationNumber\\\"\\n          />\\n        </mat-form-field>\\n        <br />\\n  \\n        <mat-card-content>\\n          <mat-form-field style=\\\"width:100%\\\">\\n            <textarea matInput placeholder=\\\"Additional Suppliers\\\" \\n            [(ngModel)]=\\\"model.additionalSuppliers\\\"\\n            name=\\\"additionalSuppliers\\\"></textarea>\\n          </mat-form-field>\\n        </mat-card-content>\\n        <br />\\n  \\n        <mat-card-content>\\n          <mat-form-field style=\\\"width:100%\\\">\\n            <textarea\\n              matInput\\n              placeholder=\\\"Notes\\\"\\n              [(ngModel)]=\\\"model.notes\\\"\\n              name=\\\"notes\\\"\\n            ></textarea>\\n          </mat-form-field>\\n        </mat-card-content>\\n        <br />\\n  \\n        <mat-form-field style=\\\"width:100%\\\">\\n          <mat-label>Status</mat-label>\\n          <mat-select\\n            [formControl]=\\\"StatusFormControl\\\"\\n            multiple\\n            [(value)]=\\\"selectedStatus\\\"\\n            [(ngModel)]=\\\"selectedStatus\\\"\\n            (selectionChange)=\\\"onSelectStatus(selectedStatus)\\\"\\n          >\\n            <mat-optgroup\\n              *ngFor=\\\"let group of StatusGroups\\\"\\n              [label]=\\\"group.name\\\"\\n              [disabled]=\\\"group.disabled\\\"\\n            >\\n              <mat-option\\n                *ngFor=\\\"let model of group.status\\\"\\n                [value]=\\\"model.value\\\"\\n              >\\n                {{ model.viewValue }}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <br />\\n  \\n        <mat-form-field>\\n          <input\\n            matInput\\n            [matDatepicker]=\\\"picker5\\\"\\n            placeholder=\\\"Most Recent Request\\\"\\n            name=\\\"mostRecentRequestDate\\\"\\n            [(ngModel)]=\\\"model.mostRecentRequestDate\\\"\\n          />\\n          <mat-datepicker-toggle\\n            matSuffix\\n            [for]=\\\"picker5\\\"\\n          ></mat-datepicker-toggle>\\n          <mat-datepicker #picker5></mat-datepicker>\\n        </mat-form-field>\\n        <br />\\n        <br />\\n      </mat-expansion-panel>\\n  \\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Health Properties\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Update health properties information\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select\\n            placeholder=\\\"Health Hazard Class\\\"\\n            [formControl]=\\\"healthHazardClassList\\\"\\n            multiple\\n            [(value)]=\\\"selectedHealthClass\\\"\\n            (selectionChange)=\\\"onSelectedHealthHazardClass(selectedHealthClass)\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let health of healths\\\"\\n              [value]=\\\"health.healthClassId\\\"\\n            >\\n              {{ health.healthClassName }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n            >Please choose a health class</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <div *ngFor=\\\"let model of routes\\\">\\n          <mat-checkbox\\n            #checkbox=\\\"matCheckbox\\\"\\n            [checked]=\\\"model.selected\\\"\\n            (click)=\\\"onSelectHealthRoutes(checkbox, model)\\\"\\n            >{{ model.routeName }}</mat-checkbox\\n          >\\n        </div>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Pictograms\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Select an image\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n    \\n          <div *ngFor=\\\"let model of pictograms\\\">\\n            <mat-checkbox\\n              #checkbox=\\\"matCheckbox\\\"\\n              [checked]=\\\"model.selected\\\"\\n              (click)=\\\"onSelectedPictograms(checkbox, model)\\\"\\n              ><img style=\\\"width: 60px; padding-left: 10px;\\\" src=\\\"assets/pictograms/{{ model.pictogramName }}.png\\\"></mat-checkbox\\n            >\\n          </div>\\n        </mat-expansion-panel>\\n  \\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Physical Properties\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Update physical properties information\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select\\n            placeholder=\\\"Physical Hazard Class\\\"\\n            [formControl]=\\\"physicalHazardClassList\\\"\\n            multiple\\n            [(value)]=\\\"selectedPhysicalClass\\\"\\n            (selectionChange)=\\\"\\n              onSelectedPhysicalHazardClass(selectedPhysicalClass)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let physical of physicals\\\"\\n              [value]=\\\"physical.physicalClassId\\\"\\n            >\\n              {{ physical.physicalClassName }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n            >Please choose a health class</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <div *ngFor=\\\"let model of physRoutes\\\">\\n          <mat-checkbox\\n            #checkbox=\\\"matCheckbox\\\"\\n            [checked]=\\\"model.selected\\\"\\n            (click)=\\\"onSelectPhysicalRoutes(checkbox, model)\\\"\\n            >{{ model.routeName }}</mat-checkbox\\n          >\\n        </div>\\n      </mat-expansion-panel>\\n  \\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Chemical Classification\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Update chemical classification information\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Health Categories\\\"\\n            [formControl]=\\\"healthCategoriesList\\\"\\n            multiple\\n            [(value)]=\\\"selectedHealthCategories\\\"\\n            (selectionChange)=\\\"\\n              onSelectedHealthCategories(selectedHealthCategories)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let health of healthCategories\\\"\\n              [value]=\\\"health.healthHazardCategoryId\\\"\\n            >\\n              {{ health.hazardCategoryName }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"healthCategoriesList.hasError('required')\\\"\\n            >Please choose a health Category</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Physical Categories\\\"\\n            [formControl]=\\\"physicalCategoriesList\\\"\\n            multiple\\n            [(value)]=\\\"selectedPhysicalCategories\\\"\\n            (selectionChange)=\\\"\\n              onSelectedPhysicalCategories(selectedPhysicalCategories)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let physical of physicalCategories\\\"\\n              [value]=\\\"physical.physicalHazardCategoryId\\\"\\n            >\\n              {{ physical.hazardCategoryName }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"physicalCategoriesList.hasError('required')\\\"\\n            >Please choose a physical Category</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-panel-title>\\n          HMIS Ratings\\n        </mat-panel-title>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Health\\\"\\n            [formControl]=\\\"hmisRatingshealthList\\\"\\n            multiple\\n            [(value)]=\\\"selectedhmisRatingshealth\\\"\\n            (selectionChange)=\\\"\\n              onSelectedHmisRatingshealth(selectedhmisRatingshealth)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let hmisRatings of hmisRatingshealth\\\"\\n              [value]=\\\"hmisRatings.hmisratingsHealthId\\\"\\n            >\\n              {{ hmisRatings.hmisratingsHealthValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"hmisRatingshealthList.hasError('required')\\\"\\n            >Please choose a hmis Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Chronic\\\"\\n            [formControl]=\\\"hmisRatingsChronicList\\\"\\n            multiple\\n            [(value)]=\\\"selectedhmisRatingsChronic\\\"\\n            (selectionChange)=\\\"\\n              onSelectedHmisRatingsChronic(selectedhmisRatingsChronic)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let hmisRatingsChr of hmisRatingsChronic\\\"\\n              [value]=\\\"hmisRatingsChr.hmisratingsChronicId\\\"\\n            >\\n              {{ hmisRatingsChr.hmisratingsChronicValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"hmisRatingsChronicList.hasError('required')\\\"\\n            >Please choose a hmis Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Flammability\\\"\\n            [formControl]=\\\"hmisRatingsFlammabilityList\\\"\\n            multiple\\n            [(value)]=\\\"selectedhmisRatingsFlammability\\\"\\n            (selectionChange)=\\\"\\n              onSelectedHmisRatingsFlammability(selectedhmisRatingsFlammability)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let hmisRatingsFlamm of hmisRatingsFlammability\\\"\\n              [value]=\\\"hmisRatingsFlamm.hmisratingsFlammabilityId\\\"\\n            >\\n              {{ hmisRatingsFlamm.hmisratingsFlammabilityValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"hmisRatingsFlammabilityList.hasError('required')\\\"\\n            >Please choose a hmis Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Reactivity\\\"\\n            [formControl]=\\\"hmisRatingsReactivityList\\\"\\n            multiple\\n            [(value)]=\\\"selectedhmisRatingsReactivity\\\"\\n            (selectionChange)=\\\"\\n              onSelectedHmisRatingsReactivity(selectedhmisRatingsReactivity)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let hmisRatingsReac of hmisRatingsReactivity\\\"\\n              [value]=\\\"hmisRatingsReac.hmisratingsReactivityId\\\"\\n            >\\n              {{ hmisRatingsReac.hmisratingsReactivityValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"hmisRatingsReactivityList.hasError('required')\\\"\\n            >Please choose a hmis Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <br />\\n        <br />\\n  \\n        <mat-panel-title>\\n          NFPA Ratings\\n        </mat-panel-title>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Health\\\"\\n            [formControl]=\\\"nfpaRatingsHealthList\\\"\\n            multiple\\n            [(value)]=\\\"selectednfpaRatingsHealth\\\"\\n            (selectionChange)=\\\"\\n              onSelectedNfpaRatingsHealth(selectednfpaRatingsHealth)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let nfpaRatingsHea of nfpaRatingsHealth\\\"\\n              [value]=\\\"nfpaRatingsHea.nfparatingsHealthId\\\"\\n            >\\n              {{ nfpaRatingsHea.nfparatingsHealthValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"nfpaRatingsHealthList.hasError('required')\\\"\\n            >Please choose a nfpa Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Flammability(Flash Points)\\\"\\n            [formControl]=\\\"nfparatingsFlammabilityList\\\"\\n            multiple\\n            [(value)]=\\\"selectednfparatingsFlammability\\\"\\n            (selectionChange)=\\\"\\n              onSelectedNfparatingsFlammability(selectednfparatingsFlammability)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let nfparatingsFlamm of nfparatingsFlammability\\\"\\n              [value]=\\\"nfparatingsFlamm.nfparatingsFlammabilityId\\\"\\n            >\\n              {{ nfparatingsFlamm.nfparatingsFlammabilityValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"nfparatingsFlammabilityList.hasError('required')\\\"\\n            >Please choose a nfpa Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Instability\\\"\\n            [formControl]=\\\"nfparatingsFlammabilityList\\\"\\n            multiple\\n            [(value)]=\\\"selectednfpaRatingsInstability\\\"\\n            (selectionChange)=\\\"\\n              onSelectedNfpaRatingsInstability(selectednfpaRatingsInstability)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let nfpaRatingsInstab of nfpaRatingsInstability\\\"\\n              [value]=\\\"nfpaRatingsInstab.nfparatingsInstabilityId\\\"\\n            >\\n              {{ nfpaRatingsInstab.nfparatingsInstabilityValues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"nfparatingsFlammabilityList.hasError('required')\\\"\\n            >Please choose a nfpa Rating</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Specific\\\"\\n            [formControl]=\\\"nfpaRatingsSpecificList\\\"\\n            multiple\\n            [(value)]=\\\"selectednfpaRatingsSpecific\\\"\\n            (selectionChange)=\\\"\\n              onSelectedNfpaRatingsSpecific(selectednfpaRatingsSpecific)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let nfpaRatingsSp of nfpaRatingsSpecific\\\"\\n              [value]=\\\"nfpaRatingsSp.nfparatingsSpecificId\\\"\\n            >\\n              {{ nfpaRatingsSp.nfparatingsSpecificNames }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"nfpaRatingsSpecificList.hasError('required')\\\"\\n            >Please choose a nfpa Rating</mat-error\\n          >\\n        </mat-form-field>\\n        <br />\\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"IARC\\\"\\n            [formControl]=\\\"iarcList\\\"\\n            multiple\\n            [(value)]=\\\"selectedIarc\\\"\\n            (selectionChange)=\\\"onSelectedIArc(selectedIarc)\\\"\\n          >\\n            <mat-option *ngFor=\\\"let iarcValue of iarc\\\" [value]=\\\"iarcValue.iarcid\\\">\\n              {{ iarcValue.iarcvalues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"iarcList.hasError('required')\\\"\\n            >Please choose an iarc</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"ACGIH\\\"\\n            [formControl]=\\\"acgihList\\\"\\n            multiple\\n            [(value)]=\\\"selectedacgih\\\"\\n            (selectionChange)=\\\"onSelectedAcgih(selectedacgih)\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let acgihValue of acgih\\\"\\n              [value]=\\\"acgihValue.acgihid\\\"\\n            >\\n              {{ acgihValue.acgihvalues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"acgihList.hasError('required')\\\"\\n            >Please choose an acgih</mat-error\\n          >\\n        </mat-form-field>\\n  \\n        <mat-form-field>\\n          <mat-select\\n            placeholder=\\\"Transport Hazard Class\\\"\\n            [formControl]=\\\"transportHazardClassList\\\"\\n            multiple\\n            [(value)]=\\\"selectedTransportHazard\\\"\\n            (selectionChange)=\\\"\\n              onSelectedTransportHazardClasses(selectedTransportHazard)\\n            \\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let transportHazardValue of transportHazard\\\"\\n              [value]=\\\"transportHazardValue.transportHazardId\\\"\\n            >\\n              {{ transportHazardValue.transportHazardvalues }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"transportHazardClassList.hasError('required')\\\"\\n            >Please choose a transport hazard class</mat-error\\n          >\\n        </mat-form-field>\\n      </mat-expansion-panel>\\n  \\n      <br />\\n      <br />\\n      <button\\n        mat-raised-button\\n        style=\\\"margin-right:2%;\\\"\\n        type=\\\"submit\\\"\\n        form=\\\"updateProductForm\\\"\\n        [disabled]=\\\"!updateProductForm.dirty\\\"\\n      >\\n        Save\\n      </button>\\n  \\n      <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n        Close\\n      </button>\\n    </form>\\n  </mat-accordion>\\n  \"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatCheckbox,\n  MatTable\n} from '@angular/material';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/_models/product';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ManufacturerService } from 'src/app/_service/manufacturer.service';\nimport { CreateManufacturerComponent } from 'src/app/manufacturer/create-manufacturer/create-manufacturer.component';\nimport { EditManufacturerComponent } from 'src/app/manufacturer/edit-manufacturer/edit-manufacturer.component';\nimport { Whmis2015Service } from 'src/app/_service/whmis2015.service';\n\n@Component({\n  selector: 'app-inventory-edit',\n  templateUrl: './inventory-edit.component.html',\n  styleUrls: ['./inventory-edit.component.css']\n})\nexport class InventoryEditComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private productService: ProductService,\n    private manufacturerService: ManufacturerService,\n    private alertify: AlertifyService,\n    private dialog: MatDialog,\n    private whmis2015Service: Whmis2015Service,\n    private router: Router\n  ) {}\n\n  model: any = {};\n  // MSDSOriginArray: any = [];\n  // model: any ={};\n  product: any = {};\n  routes: any = [];\n  physRoutes: any = [];\n  routesArray: number;\n  physicalRoutesArray: number;\n  pictograms: any = [];\n  pictogramArray: number;\n  MSDSOriginArray: number;\n  MSDSFormatArray: number;\n  selected: number;\n  selectedHealthRoutes: number;\n  selectedMSDSOrigin: number;\n  selectedMSDSFormat: number;\n  selectedExemptionClass: number;\n  selectedStatus: number;\n  ExemptionClassFormatArray: number;\n  StatusFormatArray: number;\n  MSDSFormatModel: string;\n\n  productId = this.passedData.product.productId;\n  productAuthorityId = this.passedData.product.productAuthorityId;\n  originFlag = this.passedData.product.originFlag;\n  location = this.passedData.product.health_authority;\n  locationId = this.passedData.product.rootAuthorityUnitId;\n\n  MSDSOriginFormControl = new FormControl();\n  MSDSOriginGroups: MSDSOriginGroup[] = [\n    {\n      name: 'MSDS Origin',\n      origin: [\n        { value: '0', viewValue: 'Not Available' },\n        { value: '1', viewValue: 'Canada' },\n        { value: '2', viewValue: 'USA' },\n        { value: '3', viewValue: 'Europe' },\n        { value: '4', viewValue: 'Other' }\n      ]\n    }\n  ];\n\n  StatusFormControl = new FormControl();\n  StatusGroups: StatusFormatGroup[] = [\n    {\n      name: 'Status',\n      status: [\n        { value: '1', viewValue: 'No MSDS Available' },\n        { value: '2', viewValue: 'Unable to identity hazards' }\n      ]\n    }\n  ];\n\n  MSDSFormatFormControl = new FormControl();\n  MSDSFormatGroups: MSDSFormatGroup[] = [\n    {\n      name: 'MSDS Format',\n      format: [\n        { value: '1', viewValue: 'WHMIS' },\n        { value: '2', viewValue: 'OSHA' },\n        { value: '3', viewValue: 'ILO/ISO/EU/ANSI' },\n        { value: '5', viewValue: 'Other' }\n      ]\n    }\n  ];\n\n  ExemptionClassFormControl = new FormControl();\n  ExemptionClassGroups: ExemptionClassFormatGroup[] = [\n    {\n      name: 'Exemption Class',\n      exemptionClass: [\n        { value: '1', viewValue: 'Non-hazardous' },\n        {\n          value: '2',\n          viewValue: 'Cosmetic, device, drug or food [Food and Drugs Act]'\n        },\n        {\n          value: '4',\n          viewValue: 'Pest control product [Pest Control Products Act]'\n        },\n        { value: '8', viewValue: 'Consumer product' },\n        { value: '16', viewValue: 'Manufactured article' },\n        { value: '64', viewValue: 'Explosive [Explosives Act]' }\n      ]\n    }\n  ];\n\n  ngOnInit() {\n    this.getRelatedProductsById();\n    this.manufacturerDropDown();\n    this.healthClassDropDown();\n    this.pictogramReferences();\n    this.physicalClassDropDown();\n    this.healthRoutes();\n    this.physicalRoutes();\n    this.getHealthCategoryDropDown();\n    this.getPhysicalCategoryDropDown();\n    this.getHmisRatingshealthDropDown();\n    this.getHmisRatingsChronicDropDown();\n    this.getHmisRatingsFlammabilityDropDown();\n    this.getHmisRatingsReactivityDropDown();\n\n    this.getNfpaRatingsHealthDropDown();\n    this.getNfpaRatingsInstabilityDropDown();\n    this.getNfpaRatingsSpecificDropDown();\n    this.getNfparatingsFlammabilityDropDown();\n\n    this.getIArcDropDown();\n    this.getAcgihDropDown();\n\n    this.getTransportHazardDropDown();\n\n    console.log('ngOninit productAuthorityId: ' + this.productAuthorityId);\n  }\n\n  onSelectStatus(selectedStatus) {\n    var total = 0;\n    for (var i in selectedStatus) {\n      // the + impliys converting the string to a number\n      total = +total + +selectedStatus[i];\n      this.StatusFormatArray = total;\n    }\n    console.log(this.StatusFormatArray);\n    this.model.statusFlag = this.StatusFormatArray;\n  }\n\n  onSelectExemptionClass(selectedExemptionClass) {\n    var total = 0;\n    for (var i in selectedExemptionClass) {\n      // the + impliys converting the string to a number\n      total = +total + +selectedExemptionClass[i];\n      this.ExemptionClassFormatArray = total;\n    }\n    console.log(this.ExemptionClassFormatArray);\n    this.model.exemptionClassFlag = this.ExemptionClassFormatArray;\n  }\n\n  onSelectMSDSFormat(selectedMSDSFormat) {\n    var total = 0;\n    for (var i in selectedMSDSFormat) {\n      // the + impliys converting the string to a number\n      total = +total + +selectedMSDSFormat[i];\n      this.MSDSFormatArray = total;\n    }\n    console.log(this.MSDSFormatArray);\n    this.model.formatId = this.MSDSFormatArray;\n  }\n\n  securityGroupChecked = false;\n\n  onSelectMSDSOrigin(selected) {\n    this.MSDSOriginArray = selected.toString().split(',');\n    if (this.MSDSOriginArray == 0) {\n      this.securityGroupChecked = true;\n\n      this.selected == this.originFlag;\n      // this.originFlag == this.selected\n      // console.log(\"this is true: \" + this.selected );\n      // console.log(\"this is .model.originFlag: \" + this.originFlag );\n    }\n    // console.log(\"MSDSOriginArray: \" + this.MSDSOriginArray);\n  }\n\n  openManufacturerCreationPage() {\n    const dialogRef = this.dialog.open(CreateManufacturerComponent, {\n      width: '500px'\n    });\n\n    dialogRef.disableClose = true;\n  }\n\n  openManufacturerEditPage(selected) {\n    // console.log('openManufacturerEditPage: ' + selected);\n    //var message = confirm('Please select a manufacurer first!');\n    // if(selected == null){\n    //  message;\n    // }\n    // else{\n    const dialogRef = this.dialog.open(EditManufacturerComponent, {\n      width: '500px',\n      data: {\n        selected: selected\n      }\n    });\n\n    dialogRef.disableClose = true;\n    //}\n  }\n\n  // searchTerm: FormControl = new FormControl();\n  // myList: number;\n\n  // manufacturerList = new FormControl();\n  // manufacturers;\n  // manufacturerArray;\n  // // selected;\n\n  // onSelectManufacturers(selected) {\n  //     this.myList = selected[0];\n  //     this.model.manufacturerId = this.myList;\n  //     // console.log(\"onSelectManufacturers: \" + this.myList);\n  // }\n\n  healthHazardClassList = new FormControl('', [Validators.required]);\n  healths;\n  selectedHealthClass;\n  healthClassList: number;\n  physicalClassList: number;\n\n  onSelectedHealthHazardClass(selectedHealthClass) {\n    this.healthClassList = selectedHealthClass[0];\n    this.model.healthClassId = this.healthClassList;\n  }\n\n  healthClassDropDown() {\n    return this.whmis2015Service.getHealthClass().subscribe(res => {\n      this.healths = res;\n    });\n  }\n\n  physicalHazardClassList = new FormControl('', [Validators.required]);\n  physicals;\n  selectedPhysicalClass;\n\n  onSelectedPhysicalHazardClass(selectedPhysicalClass) {\n    this.physicalClassList = selectedPhysicalClass[0];\n    this.model.physicalClassId = this.physicalClassList;\n  }\n\n  physicalClassDropDown() {\n    return this.whmis2015Service.getPhysicalClass().subscribe(res => {\n      this.physicals = res;\n    });\n  }\n\n  pictogramReferences() {\n    return this.whmis2015Service.getPictograms().subscribe(res => {\n      this.pictograms = res;\n    });\n  }\n\n  onSelectedPictograms(checkbox: MatCheckbox, model: { pictogramId: number }) {\n    this.model.pictogramId = model.pictogramId;\n    this.pictogramArray = model.pictogramId;\n  }\n\n  healthRoutes() {\n    return this.whmis2015Service.getHealthRoutes().subscribe(res => {\n      this.routes = res;\n    });\n  }\n\n  onSelectHealthRoutes(\n    checkbox: MatCheckbox,\n    model: { healthRouteId: number }\n  ) {\n    this.model.healthRouteId = model.healthRouteId;\n    this.routesArray = model.healthRouteId;\n  }\n\n  physicalRoutes() {\n    return this.whmis2015Service.getPhysicalRoutes().subscribe(res => {\n      this.physRoutes = res;\n    });\n  }\n\n  onSelectPhysicalRoutes(\n    checkbox: MatCheckbox,\n    model: { physicalRouteId: number }\n  ) {\n    this.model.physicalRouteId = model.physicalRouteId;\n    this.physicalRoutesArray = model.physicalRouteId;\n  }\n\n  manufacturerDropDown() {\n    return this.manufacturerService.manufacturerInformation().subscribe(res => {\n      this.manufacturers = res;\n      // console.log(\"manufacturerDropDown() from res: \" + this.manufacturers.name);\n    });\n  }\n\n  searchTerm: FormControl = new FormControl();\n  myList: number;\n\n  manufacturerList = new FormControl('', [Validators.required]);\n  manufacturers;\n  manufacturerArray;\n  // selected;\n\n  onSelectManufacturers(selected) {\n    this.myList = selected[0];\n    this.model.manufacturerId = this.myList;\n  }\n\n  physicalCategoriesList = new FormControl('', [Validators.required]);\n  physicalCategories;\n  physicalCategList: number;\n  selectedPhysicalCategories;\n\n  getPhysicalCategoryDropDown() {\n    return this.whmis2015Service.getPhysicalCategories().subscribe(res => {\n      this.physicalCategories = res;\n    });\n  }\n\n  onSelectedPhysicalCategories(selectedPhysicalCategories) {\n    this.physicalCategList = selectedPhysicalCategories[0];\n    this.model.physicalHazardCategoryId = this.physicalCategList;\n  }\n\n  healthCategoriesList = new FormControl('', [Validators.required]);\n  healthCategories;\n  healthCategList: number;\n  selectedHealthCategories;\n\n  getHealthCategoryDropDown() {\n    return this.whmis2015Service.getHealthCategories().subscribe(res => {\n      this.healthCategories = res;\n    });\n  }\n\n  onSelectedHealthCategories(selectedHealthCategories) {\n    this.healthCategList = selectedHealthCategories[0];\n    this.model.healthHazardCategoryId = this.healthCategList;\n  }\n\n  transportHazardClassList = new FormControl('', [Validators.required]);\n  transportHazard;\n  TransportHazardList: number;\n  selectedTransportHazard;\n\n  getTransportHazardDropDown() {\n    return this.whmis2015Service.getTransportHazardClasses().subscribe(res => {\n      this.transportHazard = res;\n    });\n  }\n\n  onSelectedTransportHazardClasses(selectedTransportHazard) {\n    this.TransportHazardList = selectedTransportHazard[0];\n    this.model.transportHazardId = this.TransportHazardList;\n  }\n\n  iarcList = new FormControl('', [Validators.required]);\n  iarc;\n  iarcListResult: number;\n  selectedIarc;\n\n  getIArcDropDown() {\n    return this.whmis2015Service.getAllIArcValues().subscribe(res => {\n      this.iarc = res;\n    });\n  }\n\n  onSelectedIArc(selectedIarc) {\n    this.iarcListResult = selectedIarc[0];\n    this.model.iarcid = this.iarcListResult;\n  }\n\n  acgihList = new FormControl('', [Validators.required]);\n  acgih;\n  acgihListResult: number;\n  selectedacgih;\n\n  getAcgihDropDown() {\n    return this.whmis2015Service.getAllAcgihValues().subscribe(res => {\n      this.acgih = res;\n    });\n  }\n\n  onSelectedAcgih(selectedacgih) {\n    this.acgihListResult = selectedacgih[0];\n    this.model.acgihid = this.acgihListResult;\n  }\n\n  nfpaRatingsHealthList = new FormControl('', [Validators.required]);\n  nfpaRatingsHealth;\n  nfpaRatingsHealthListResult: number;\n  selectednfpaRatingsHealth;\n\n  getNfpaRatingsHealthDropDown() {\n    return this.whmis2015Service\n      .getAllNFPARatingsHealthValues()\n      .subscribe(res => {\n        this.nfpaRatingsHealth = res;\n      });\n  }\n\n  onSelectedNfpaRatingsHealth(selectednfpaRatingsHealth) {\n    this.nfpaRatingsHealthListResult = selectednfpaRatingsHealth[0];\n    this.model.nfparatingsHealthId = this.nfpaRatingsHealthListResult;\n  }\n\n  nfparatingsFlammabilityList = new FormControl('', [Validators.required]);\n  nfparatingsFlammability;\n  nfparatingsFlammabilityListResult: number;\n  selectednfparatingsFlammability;\n\n  getNfparatingsFlammabilityDropDown() {\n    return this.whmis2015Service\n      .getAllNfpaRatingsFlammabilityValues()\n      .subscribe(res => {\n        this.nfparatingsFlammability = res;\n      });\n  }\n\n  onSelectedNfparatingsFlammability(selectednfparatingsFlammability) {\n    this.nfparatingsFlammabilityListResult = selectednfparatingsFlammability[0];\n    this.model.nfparatingsFlammabilityId = this.nfparatingsFlammabilityListResult;\n  }\n\n  nfpaRatingsInstabilityList = new FormControl('', [Validators.required]);\n  nfpaRatingsInstability;\n  nfpaRatingsInstabilityListResult: number;\n  selectednfpaRatingsInstability;\n\n  getNfpaRatingsInstabilityDropDown() {\n    return this.whmis2015Service\n      .getAllNfpaRatingsInstability()\n      .subscribe(res => {\n        this.nfpaRatingsInstability = res;\n      });\n  }\n\n  onSelectedNfpaRatingsInstability(selectednfpaRatingsInstability) {\n    this.nfpaRatingsInstabilityListResult = selectednfpaRatingsInstability[0];\n    this.model.nfparatingsInstabilityId = this.nfpaRatingsInstabilityListResult;\n  }\n\n  nfpaRatingsSpecificList = new FormControl('', [Validators.required]);\n  nfpaRatingsSpecific;\n  nfpaRatingsSpecificListResult: number;\n  selectednfpaRatingsSpecific;\n\n  getNfpaRatingsSpecificDropDown() {\n    return this.whmis2015Service.getAllNfpaRatingsSpecific().subscribe(res => {\n      this.nfpaRatingsSpecific = res;\n    });\n  }\n\n  onSelectedNfpaRatingsSpecific(selectednfpaRatingsSpecific) {\n    this.nfpaRatingsSpecificListResult = selectednfpaRatingsSpecific[0];\n    this.model.nfparatingsSpecificId = this.nfpaRatingsSpecificListResult;\n  }\n\n  hmisRatingshealthList = new FormControl('', [Validators.required]);\n  hmisRatingshealth;\n  hmisRatingshealthListResult: number;\n  selectedhmisRatingshealth;\n\n  getHmisRatingshealthDropDown() {\n    return this.whmis2015Service.getAllHmisRatingsHealth().subscribe(res => {\n      this.hmisRatingshealth = res;\n    });\n  }\n\n  onSelectedHmisRatingshealth(selectedhmisRatingshealth) {\n    this.hmisRatingshealthListResult = selectedhmisRatingshealth[0];\n    this.model.hmisratingsHealthId = this.hmisRatingshealthListResult;\n  }\n\n  hmisRatingsChronicList = new FormControl('', [Validators.required]);\n  hmisRatingsChronic;\n  hmisRatingsChronicListResult: number;\n  selectedhmisRatingsChronic;\n\n  getHmisRatingsChronicDropDown() {\n    return this.whmis2015Service.getAllHmisRatingsChronic().subscribe(res => {\n      this.hmisRatingsChronic = res;\n    });\n  }\n\n  onSelectedHmisRatingsChronic(selectedhmisRatingsChronic) {\n    this.hmisRatingsChronicListResult = selectedhmisRatingsChronic[0];\n    this.model.hmisratingsChronicId = this.hmisRatingsChronicListResult;\n  }\n\n  hmisRatingsFlammabilityList = new FormControl('', [Validators.required]);\n  hmisRatingsFlammability;\n  hmisRatingsFlammabilityListResult: number;\n  selectedhmisRatingsFlammability;\n\n  getHmisRatingsFlammabilityDropDown() {\n    return this.whmis2015Service\n      .getAllHmisRatingsFlammability()\n      .subscribe(res => {\n        this.hmisRatingsFlammability = res;\n      });\n  }\n\n  onSelectedHmisRatingsFlammability(selectedhmisRatingsFlammability) {\n    this.hmisRatingsFlammabilityListResult = selectedhmisRatingsFlammability[0];\n    this.model.hmisratingsFlammabilityId = this.hmisRatingsFlammabilityListResult;\n  }\n\n  hmisRatingsReactivityList = new FormControl('', [Validators.required]);\n  hmisRatingsReactivity;\n  hmisRatingsReactivityListResult: number;\n  selectedhmisRatingsReactivity;\n\n  getHmisRatingsReactivityDropDown() {\n    return this.whmis2015Service\n      .getAllHmisRatingsReactivity()\n      .subscribe(res => {\n        this.hmisRatingsReactivity = res;\n      });\n  }\n\n  onSelectedHmisRatingsReactivity(selectedhmisRatingsReactivity) {\n    this.hmisRatingsReactivityListResult = selectedhmisRatingsReactivity[0];\n    this.model.hmisratingsReactivityId = this.hmisRatingsReactivityListResult;\n  }\n\n  getRelatedProductsById() {\n    return this.productService\n      .getRelatedProductsById(this.productId)\n      .subscribe(res => {\n        this.model = res;\n      });\n  }\n\n  updateProductinformation() {\n    // console.log(\n    //   'updateProductinformation() productName: ' + this.model.productName\n    // );\n    return this.productService\n      .updateProductInfo(this.productId, this.model)\n      .subscribe(\n        res => {\n          this.model.manufacturerId = this.myList;\n          this.model = res;\n          // console.log('updateProductInformation() res: ' + res);\n          // console.log(\n          //   'updateProductInformation() res: ' + this.model.manufacturerId\n          // );\n\n          this.alertify.success('Product has been updated');\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again');\n        }\n      );\n  }\n}\n\nexport interface MSDSOrigin {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSOriginGroup {\n  disabled?: boolean;\n  name: string;\n  origin: MSDSOrigin[];\n}\n\nexport interface StatusFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface StatusFormatGroup {\n  disabled?: boolean;\n  name: string;\n  status: StatusFormat[];\n}\n\nexport interface WhmisHazardCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface WhmisHazardCategoryGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: WhmisHazardCategory[];\n}\n\nexport interface ACGIHCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ACGIHGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: ACGIHCategory[];\n}\n\nexport interface TransportHazardClassCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface TransportHazardClassGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: TransportHazardClassCategory[];\n}\n\nexport interface StatusFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface StatusFormatGroup {\n  disabled?: boolean;\n  name: string;\n  status: StatusFormat[];\n}\n\nexport interface ExemptionClassFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ExemptionClassFormatGroup {\n  disabled?: boolean;\n  name: string;\n  exemptionClass: ExemptionClassFormat[];\n}\n\nexport interface MSDSFormat {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSFormatGroup {\n  disabled?: boolean;\n  name: string;\n  format: MSDSFormat[];\n}\n\nexport interface MSDSOrigin {\n  value: string;\n  viewValue: string;\n}\n\nexport interface MSDSOriginGroup {\n  disabled?: boolean;\n  name: string;\n  origin: MSDSOrigin[];\n}\n\nexport interface HealthHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface HealthHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: HealthHazard[];\n}\n\nexport interface PhysicalHazard {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PhysicalHazardGroup {\n  disabled?: boolean;\n  name: string;\n  hazard: PhysicalHazard[];\n}\n","module.exports = \".container {\\n    display: grid;\\n    grid-template-rows: 1fr 8fr;\\n    width: 100%;\\n    height: 98%;\\n    justify-items: center;\\n    border: 1px solid grey;\\n}\\n\\n.search {\\n    height: 15%;\\n    width: 100%;\\n    justify-content: center;\\n    align-content: center;\\n    align-self: center;\\n}\\n\\n.two-columns {\\n    display: grid;\\n    grid-template-rows: auto;\\n    grid-template-columns: 1fr 3fr;\\n    height: 98%;\\n    max-height: 800px;\\n    overflow: auto;\\n    box-sizing: border-box;\\n    width: 100%;\\n    justify-items: center;\\n     \\n}\\n\\n.left-25, .right-70 {\\n    border: 1px solid grey;\\n    height: 98%;\\n    margin: 1%;\\n    align-self: center;\\n}\\n\\n.left-25 {\\n    width: 98%;\\n}\\n\\n.right-70 {\\n    width: 98%;\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9pbnZlbnRvcnktcHJvZHVjdC9pbnZlbnRvcnktcHJvZHVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsV0FBVztJQUNYLHFCQUFxQjtJQUNyQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsV0FBVztJQUNYLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHdCQUF3QjtJQUN4Qiw4QkFBOEI7SUFDOUIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxxQkFBcUI7O0FBRXpCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxVQUFVO0lBQ1Ysa0JBQWtCO0FBQ3RCOztBQUNBO0lBQ0ksVUFBVTtBQUNkOztBQUNBO0lBQ0ksVUFBVTtBQUNkIiwiZmlsZSI6ImFwcC9pbnZlbnRvcnktcHJvZHVjdC9pbnZlbnRvcnktcHJvZHVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA4ZnI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA5OCU7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XG59XG5cbi5zZWFyY2gge1xuICAgIGhlaWdodDogMTUlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi50d28tY29sdW1ucyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyO1xuICAgIGhlaWdodDogOTglO1xuICAgIG1heC1oZWlnaHQ6IDgwMHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgICBcbn1cblxuLmxlZnQtMjUsIC5yaWdodC03MCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JleTtcbiAgICBoZWlnaHQ6IDk4JTtcbiAgICBtYXJnaW46IDElO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cbi5sZWZ0LTI1IHtcbiAgICB3aWR0aDogOTglO1xufVxuLnJpZ2h0LTcwIHtcbiAgICB3aWR0aDogOTglO1xufVxuXG5cblxuIl19 */\"","module.exports = \" <section gdAreas=\\\"invite search search | left-content right-content right-content\\\" gdGap=\\\"5px\\\" gdRows=\\\"auto auto auto\\\">\\n\\n      <br/> <br/>\\n        <div gdArea=\\\"search\\\" fxLayoutAlign=\\\"center center\\\">\\n          <!-- just to hold space -->\\n        </div>\\n        \\n        <div gdArea=\\\"left-content\\\">\\n            <div fxLayout fxLayoutAlign=\\\"center center\\\" style=\\\"height: 50px; margin: 35px;\\\">\\n                <!-- this is a spacer, not being used -->\\n            </div>\\n\\n      \\n       <mat-form-field style=\\\"width: 50%; margin: 10px;\\\">\\n        <mat-select\\n          placeholder=\\\"Health Hazard Class\\\"\\n          [disabled]=\\\"searchResultIsEmpty\\\"\\n          [formControl]=\\\"healthHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedHealthClass\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHealthHazardClass(selectedHealthClass)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let health of healthClass\\\"\\n            [value]=\\\"health.healthClassId\\\"\\n          >\\n            {{ health.healthClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <!-- <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a health class</mat-error\\n        > -->\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 50%; margin: 10px;\\\">\\n        <mat-select\\n          placeholder=\\\"Physical Hazard Class\\\"\\n          [disabled]=\\\"searchResultIsEmpty\\\"\\n          [formControl]=\\\"physicalHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedPhysicalClass\\\"\\n          (selectionChange)=\\\"\\n            onSelectedPhysicalHazardClass(selectedPhysicalClass)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let physical of physicalClass\\\"\\n            [value]=\\\"physical.physicalClassId\\\"\\n          >\\n            {{ physical.physicalClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <!-- <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a Physical class</mat-error\\n        > -->\\n      </mat-form-field>\\n  \\n            <!-- <mat-card style=\\\"width:90%; margin: 5px auto; box-shadow: -4px 4px #C6C6C6;\\\"> -->\\n            <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n                <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding style=\\\"margin-right: 5% !important\\\">\\n                  <button mat-icon-button disabled></button>\\n                  <!-- <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                    {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n                  </mat-icon> -->\\n                  <!-- <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                                [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                                (change)=\\\"todoLeafItemSelectionToggle(node)\\\"  style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox> -->\\n                                <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                                [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                                (change)=\\\"clickedActive(node)\\\"\\n                                 style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n                                <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\n                                <!-- <button mat-icon-button (click)=\\\"updateNode(node)\\\"><mat-icon>edit</mat-icon></button> -->\\n                </mat-tree-node>\\n              \\n                <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n                  <button mat-icon-button disabled></button>\\n                  <mat-form-field>\\n                    <!-- <input matInput #itemValue placeholder=\\\"New item...\\\"> -->\\n                  </mat-form-field>\\n                  <!-- <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button> -->\\n                </mat-tree-node>\\n              \\n                <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n                  <button mat-icon-button matTreeNodeToggle\\n                          [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n                    <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                      {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n                    </mat-icon>\\n                  </button>\\n                  <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\n                                \\n                                (change)=\\\"todoItemSelectionToggle(node)\\\" style=\\\"font-size: 90% !important; font:bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n                  <!-- <button mat-icon-button *ngIf=\\\"node.hasChild\\\" (click)=\\\"removeNode(node)\\\"><mat-icon>clear</mat-icon></button> -->\\n                </mat-tree-node>\\n              </mat-tree>\\n              <button mat-raised-button style=\\\"margin-left: 20px\\\" (click)=\\\"assignProduct()\\\">Assign</button>\\n          <!-- </mat-card> -->\\n\\n                  </div>\\n                  <div gdArea=\\\"right-content\\\" gdColumn=\\\"2 / span 2\\\" >\\n                    <mat-form-field>\\n                      <mat-label>Select a parameter</mat-label>\\n                      <mat-select (selectionChange)=\\\"onSelectParameter($event)\\\" [(value)]=\\\"selectedParameter\\\">\\n                        <mat-option value=\\\"none\\\">All Records</mat-option>\\n                        <mat-option value=\\\"productName\\\">Product Name</mat-option>\\n                        <mat-option value=\\\"productCode\\\">Product Code</mat-option>\\n                        <mat-option value=\\\"manufacturer\\\">Manufacturer Name</mat-option>\\n                        <mat-option value=\\\"casNo\\\">Cas Number</mat-option>\\n                        <mat-option value=\\\"secondaryName\\\">Secondary Name</mat-option>\\n                      </mat-select>\\n                      <mat-error *ngIf=\\\"selectFormControl.hasError('required')\\\">\\n                        This field is required\\n                      </mat-error>\\n                    </mat-form-field>\\n\\n                     <mat-form-field style=\\\"margin-left: 5px; width:450px !important\\\" [formGroup]=\\\"form\\\">\\n                      <input\\n                        #selectedValue\\n                        formControlName=\\\"inventorySearchControl\\\"\\n                        [disabled]=\\\"disableSearchbox()\\\"\\n                        name=\\\"selectedValue\\\"\\n                        type=\\\"text\\\"\\n                        matInput\\n                        color=\\\"secondary\\\"\\n                        placeholder=\\\"Search Inventory\\\"\\n                        (keyup.enter)=\\\"searchForProducts(selectedValue.value)\\\"\\n                        [(ngModel)]=\\\"value\\\"\\n                      />\\n                      <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\">\\n                          <mat-icon>close</mat-icon>\\n                        </button>\\n                      <!-- <mat-icon matSuffix>search</mat-icon> -->\\n                    </mat-form-field>\\n\\n                    <span style=\\\"margin-left:15px !important;\\\">\\n                        <mat-card-actions><button mat-raised-button\\n                            (click)=\\\"searchForProducts(selectedValue.value)\\\">Search</button>\\n                        </mat-card-actions>\\n                      </span>\\n      <span>\\n          <!-- <div fxLayout fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlex=\\\"40%\\\">\\n            <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" />\\n          </mat-form-field>\\n        </div>\\n        <br/> <br/> -->\\n      <div>\\n          <button *ngIf=\\\"hideButton\\\" mat-raised-button (click)=\\\"backUp()\\\" style=\\\"margin-right:2%;\\\"><a [target]=\\\"'_blank'\\\">Backup</a></button>\\n          <button *ngIf=\\\"hideButton\\\" style=\\\"margin-left: 5%;\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openExportList()\\\">Export List</button>\\n          <br/>\\n          <br/>  \\n  \\n          <div\\n          *ngIf=\\\"isLoading\\\"\\n          style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n           <mat-progress-bar\\n            color=\\\"primary\\\"\\n            mode=\\\"indeterminate\\\"\\n          ></mat-progress-bar>\\n        </div> \\n  \\n      <table mat-table [dataSource]=\\\"MyDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n          <!-- Checkbox Column -->\\n          <ng-container matColumnDef=\\\"select\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                            [aria-label]=\\\"checkboxLabel()\\\">\\n              </mat-checkbox>\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n              <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                            (change)=\\\"$event ? selection.toggle(row) : null; isAllSelected()\\\"\\n                            [checked]=\\\"selection.isSelected(row)\\\"\\n                            [aria-label]=\\\"checkboxLabel(row)\\\">\\n              </mat-checkbox>\\n            </td>\\n          </ng-container>\\n        \\n          <ng-container matColumnDef=\\\"Product\\\">\\n            <th mat-header-cell *matHeaderCellDef> Product </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"  [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> {{ product?.product_name }}\\n            </td>\\n          </ng-container>\\n        \\n          <ng-container matColumnDef=\\\"Manufacturer\\\">\\n            <th mat-header-cell *matHeaderCellDef> Manufacturer </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\" [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n              {{ product?.mfg_name }}\\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Revised\\\">\\n            <th mat-header-cell *matHeaderCellDef> Revised </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"\\n            [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n            {{ product?.revision_date }}\\n            </td>\\n          </ng-container>\\n  \\n       <ng-container matColumnDef=\\\"Whmis Exempt\\\">\\n            <th mat-header-cell *matHeaderCellDef> Whmis Exempt </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"\\n            [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n            {{ product?.whmis_exempt }}\\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Last Verified\\\">\\n            <th mat-header-cell *matHeaderCellDef> Last Verified </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"\\n            [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n            {{ product?.last_verified }}\\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Date Added\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date Added </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"\\n            [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n            {{ product?.date_added }}\\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Discontinued\\\">\\n            <th mat-header-cell *matHeaderCellDef> Discontinued </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"\\n            [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> \\n            {{ product?.discontinued }}\\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Product Code\\\">\\n            <th mat-header-cell *matHeaderCellDef> Product Code </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"   [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"> {{ product?.product_code }}\\n  \\n            </td>\\n          </ng-container>\\n  \\n          <ng-container matColumnDef=\\\"Detail\\\">\\n            <th mat-header-cell *matHeaderCellDef> Detail </th>\\n            <td mat-cell *matCellDef=\\\"let product\\\"   [ngStyle]=\\\"{\\n              background: product.addedToInventory ? 'null' : '#D3D3D3'\\n            }\\\"><mat-icon *ngIf=\\\"product.fromVendorAPI === false\\\"\\n            style=\\\"cursor: pointer\\\"\\n            (click)=\\\"openInventoryDetailPage(product)\\\"\\n            >library_books</mat-icon>\\n            <mat-icon *ngIf=\\\"product.fromVendorAPI\\\"\\n            style=\\\"cursor: pointer\\\"\\n            (click)=\\\"openVendorAPIDetailPage(product)\\\"\\n            >library_books</mat-icon>\\n            </td>\\n          </ng-container>\\n  <!-- \\n          <ng-container matColumnDef=\\\"Detail\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"title\\\">\\n              Detail\\n            </mat-header-cell>\\n            <mat-cell\\n              *matCellDef=\\\"let row\\\"\\n              [ngStyle]=\\\"{\\n                background: row.addedToInventory ? 'null' : '#D3D3D3'\\n              }\\\"\\n              ><mat-icon\\n                style=\\\"cursor: pointer\\\"\\n                (click)=\\\"openInventoryDetailPage(row)\\\"\\n                >library_books</mat-icon\\n              >\\n            </mat-cell>\\n          </ng-container> -->\\n  \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr  mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n              (click)=\\\"selection.toggle(row)\\\">\\n          </tr>\\n          \\n        </table>\\n        </div>\\n        <!-- <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n          </mat-paginator> -->\\n\\n          <!-- <mat-paginator #paginator [pageIndex]=\\\"pageIndex\\\" [length]=\\\"totalItems\\\" [pageSize]=\\\"itemsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n          (page)=\\\"pageChanged($event)\\\" >\\n          </mat-paginator> -->\\n           <!-- \\\"{\\\"currentPage\\\":2,\\\"itemsPerPage\\\":10,\\\"totalItems\\\":217,\\\"totalPages\\\":22}\\\" -->\\n\\n          <mat-paginator #paginator [pageIndex]=\\\"pageIndex\\\" [showFirstLastButtons]=\\\"true\\\" [length]=\\\"totalItems\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n          (page)=\\\"pageChanged($event)\\\" >\\n          </mat-paginator>\\n        </span>\\n        </div>\\n      </section>\"","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ChangeDetectorRef,\n  Inject,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatTableDataSource,\n  MatPaginator,\n  MatSort,\n  MatTable,\n  MatTreeFlattener,\n  MatTreeFlatDataSource,\n  PageEvent\n} from '@angular/material';\nimport { UserService } from '../_service/user.service';\nimport { ProductService } from '../_service/product.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ProductPageComponent } from '../search/product-page/product-page.component';\nimport { ProductLocationComponent } from '../product-location/product-location.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { CreateManufacturerComponent } from '../manufacturer/create-manufacturer/create-manufacturer.component';\nimport { InventoryDetailComponent } from './inventory-detail/inventory-detail.component';\nimport { InventoryEditComponent } from './inventory-edit/inventory-edit.component';\nimport { ExportListComponent } from './exportList/exportList.component';\nimport { AuthService } from '../_service/auth.service';\nimport { LocationService } from '../_service/location.service';\nimport { BehaviorSubject, of, Subscription, Subject } from 'rxjs';\nimport { NestedTreeControl, FlatTreeControl } from '@angular/cdk/tree';\nimport { Whmis2015Service } from '../_service/whmis2015.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { SendMailService } from '../_service/send-mail.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { takeUntil } from 'rxjs/operators';\nimport { ProductInventorySearch } from '../_models/ProductInventorySearch';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaginationService } from '../_service/pagination.service';\nimport { element } from '@angular/core/src/render3';\nimport { InventoryVendorapiDetailComponent } from './inventory-vendorapi-detail/inventory-vendorapi-detail.component';\n\nexport class TodoItemNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  name: string;\n  children?: TodoItemNode[];\n  hasChild: boolean;\n  exists: boolean;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  item: string;\n  level: number;\n  expandable: boolean;\n  checked: boolean;\n}\n\n@Component({\n  selector: \"inventory-product\",\n  templateUrl: './inventory-product.component.html',\n  styleUrls: ['./inventory-product.component.css']\n})\n\nexport class InventoryProductComponent implements OnInit {\n  // treeData: TreeData[];\n\n  constructor(\n    private userService: UserService,\n    private productService: ProductService,\n    private alertify: AlertifyService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private authService: AuthService,\n    private locationService: LocationService,\n    private whmisService: Whmis2015Service,\n    private sendMailService: SendMailService,\n    private route: ActivatedRoute,\n    public paginationService: PaginationService\n  ) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren\n    );\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(\n      this.getLevel,\n      this.isExpandable\n    );\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n\n    this.getTopLocations();\n    this.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  searchString;\n  searchResultIsEmpty: boolean = true;\n  authorities;\n  authArrayIds: any = [];\n  MyDataSource: any;\n\n  value = '';\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onPageSwitch = new EventEmitter();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n  isLoading = false;\n  hideButton = false;\n  products: any = [];\n  vendorProducts: any = [];\n  allProducts: any = [];\n  selectedProduct;\n  selectedMfgOption;\n  authorityId;\n\n  healthClass: any;\n  healthClassArray: any;\n\n  // healthClassList = new FormControl(\"\", [Validators.required]);\n  locations;\n  locationArray;\n  selected: number;\n  myList: any = [];\n\n  healthClassArr: any = [];\n  healthClassHazards: any;\n  selectedHealthHazard: number;\n\n  model: any = {\n    productId: null,\n    rootAuthorityUnitId: null,\n    productAuthorityId: null\n  };\n\n  selectedSearchParameter;\n  selectFormControl = new FormControl({value: '', disabled: true}, [Validators.required]);\n  selectedParameter = 'none';\n\n  locationList = new FormControl({value: '', disabled: true}, [Validators.required]);\n  selectedAuth: number;\n  locationId: any;\n\n  productLocation;\n\n  userDetail: any;\n\n  // request: any;\n  request = {\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    emailAddress: '',\n    productName: '',\n    productCode: '',\n    manufacturer: '',\n    casNumber: ''\n  };\n\n  userDetailArray = [];\n\n  displayedColumns: string[] = [\n    'select',\n    'Product',\n    'Manufacturer',\n    'Revised',\n    'Product Code',\n    // 'Location',\n    'Whmis Exempt',\n    'Last Verified',\n    // 'Date Added',\n    'Discontinued',\n    'Detail',\n    // 'Edit',\n    // 'Add/Remove'\n    // \"Print Label\"\n  ];\n\n  ngOnInit() {\n    this.getAuthorityNames();\n    this.healthDropDown();\n    this.physicalClassDropDown();\n    this.productLocationDropDown();\n    this.getUserDetails();\n    // this.loadProducts();\n    // console.log(this.getChildren);\n    // console.log(this.getChildren.name);\n    // console.log(this.checklistSelection.selected);\n  }\n\n  onSelectParameter(event) {\n    this.selectedSearchParameter = event.value;\n    // console.log(this.selectedSearchParameter);\n  }\n\n  form = new FormGroup({\n    inventorySearchControl: new FormControl({value: '', disabled: true}),\n  });\n\n  disableSearchbox() {\n    if (this.selectedParameter === 'none') {\n      return this.form.controls['inventorySearchControl'].disable();\n    } else {\n      return this.form.controls['inventorySearchControl'].enable();\n    }\n  }\n\n  getAllAuthoritiesTest() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(\n      res => {\n        this.authorities = res;\n        this.authArrayIds = res;\n        this.authArrayIds.forEach(item => {});\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  applyFilter(filterValue: string) {\n    this.MyDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  mfgFilter(mfgName) {\n    var newArray: any = [];\n    this.allProducts.filter(p => {\n      if (p.mfg_name === mfgName) {\n        console.log('mfgFilter ' + p.mfg_name + ' , ' + p.product_name);\n        newArray.push(p);\n      }\n      this.MyDataSource = new MatTableDataSource();\n      this.MyDataSource.data = newArray;\n      this.MyDataSource.sort = this.sort;\n      this.MyDataSource.paginator = this.paginator;\n    });\n  }\n\n  openProductLocationPage(productId) {\n    console.log('openProductLocationPage()' + productId);\n    const dialogRef = this.dialog.open(ProductLocationComponent, {\n      width: '1000px',\n      data: {\n        productId: productId\n      }\n    });\n\n    // dialogRef.disableClose = true;\n  }\n\n  public doFilter = (value: string) => {\n    this.MyDataSource.filter = value.trim().toLocaleLowerCase();\n    // this.MyDataSource.filter1 = value.trim().toLocaleLowerCase();\n  };\n\n \n  // getAllProducts(searchString) {\n  //   this.isLoading = true;\n\n  //   this.productService.getAllProductsByAuthority(searchString).subscribe(\n  //     res => {\n  //       this.products = res;\n  //       this.products.forEach(element => {\n  //         this.allProducts.push(element);\n  //       });\n  //       this.MyDataSource = new MatTableDataSource();\n  //       this.MyDataSource.data = this.allProducts;\n  //       this.MyDataSource.sort = this.sort;\n  //       this.MyDataSource.paginator = this.paginator;\n\n  //       this.isLoading = false;\n  //       this.searchResultIsEmpty = false;\n  //     },\n  //     error => {\n  //       console.log('There was an error: ' + error);\n  //       this.searchResultIsEmpty = true;\n  //     }\n  //   );\n  // }\n  productInventorySearch: ProductInventorySearch[];\n  productParams: any = {};\n// tslint:disable-next-line: member-ordering\n  pagination: Pagination;\n\n     // @Output() pageChanged = new EventEmitter();\n\n\n  @Input() totalCount: number;\n  @Input() currentPage: number;\n  @Input() itemsPerPage: number;\n  @Input() totalItems: number;\n  @Input() totalPages: number[];\n  @Input() pageIndex: number = 0;\n  @Input() pageSizeOptions: number[] = [5, 10, 20];\n  @Input() pageSize: number;\n  @Input() nextPage: number;\n  @Input() previousPage: number;\n\n\npageChanged(event: PageEvent) {\n    this.totalItems = event.length;\n    if (event.pageIndex === 0) {\n      this.pageIndex = event.pageIndex;\n    }\n\n    if (event.pageIndex === 0 && event.previousPageIndex === 1) {\n      this.pageIndex = event.pageIndex;\n    }\n\n    if (event.pageIndex === 1 && event.previousPageIndex === 0) {\n      this.pageIndex = event.pageIndex;\n    }\n\n    if (event.pageIndex > 1) {\n      this.pageIndex = event.pageIndex;\n    }\n\n    this.nextPage = event.pageSize;\n    this.getAllProducts();\n  }\n\n  getAllProducts() {\n    this.isLoading = true;\n    this.hideButton = true;\n    this.pageSize = this.pageSizeOptions[1];\n    const currentPageNumber = 1;\n    // this.pageIndex = 0;\n    // this.paginator.pageIndex = 0;\n\n    let findObj: searchCloudSDSObject = {\n      msdsId: '',\n      productName: '',\n      productCode: '',\n      mfgName: '',\n      casNo: '',\n      secondaryName: '',\n      none: '',\n      pageNumber: null,\n      pageSize: null,\n    };\n    \n      if (this.selectedSearchParameter === 'productName') {\n        findObj.productName = this.searchString;\n      }\n      if (this.selectedSearchParameter === 'productCode') {\n        findObj.productCode = this.searchString;\n      } \n      if (this.selectedSearchParameter === 'manufacturer') {\n        findObj.mfgName = this.searchString;\n      }\n      if (this.selectedSearchParameter === 'casNo') {\n        findObj.casNo = this.searchString;\n      }\n      if (this.selectedSearchParameter === 'secondaryName') {\n        findObj.secondaryName = this.searchString;\n      }\n      if (this.selectedParameter === 'none') {\n        findObj.none = this.searchString;\n      }\n\n    if (currentPageNumber === 1 && this.pageIndex === 0) {\n      findObj.pageNumber = currentPageNumber; // 1 \n      findObj.pageSize = this.nextPage; // 10\n    }\n\n    if (this.pageIndex === 1) {\n      findObj.pageNumber = this.pageIndex; // > 1\n      findObj.pageNumber = this.pageIndex + 1; // > 1\n    }\n\n    if (this.pageIndex > 1) {\n      findObj.pageNumber = this.pageIndex; // > 1\n      findObj.pageSize = this.nextPage; // 10\n    }\n\n     let params = new URLSearchParams();\n\n    if (this.healthHazardClassArray != null) {\n      for (const constHealthClass of this.healthHazardClassArray) {\n        params.append('healthHazardClass', constHealthClass);\n      }\n    }\n    if (this.physicalHazardClassArray != null) {\n      for (const constPhysicalClass of this.physicalHazardClassArray) {\n        params.append('physicalHazardClass', constPhysicalClass);\n      }\n    }\n\n    if (this.parentLocations.length !== 0) {\n      params.append('locationId', this.parentLocations);\n    }\n\n    if (this.childLocations.length !== 0) {\n      for (const childLocation of this.childLocations) {\n        params.append('locationId', childLocation.authorityUnitId);\n    }\n    }\n\n    if (this.selectedParameter === 'none' || this.searchString !== '' || this.selectedSearchParameter === 'productName'\n    && this.selectedSearchParameter === 'productCode' && this.selectedSearchParameter === 'manufacturer'\n    && this.selectedSearchParameter === 'casNo' && this.selectedSearchParameter === 'secondaryName') {\n   return this.productService.findInventoryProducts(findObj, params).subscribe(\n      (res: any) => {\n      this.currentPage = JSON.parse(res.headers.get('pagination')).currentPage;\n      this.itemsPerPage = JSON.parse(res.headers.get('pagination')).itemsPerPage; // pageSize\n      this.totalItems = JSON.parse(res.headers.get('pagination')).totalItems; // length\n      this.totalPages = JSON.parse(res.headers.get('pagination')).totalPages;\n        // console.log('Info: ' + JSON.parse(res.headers.get('pagination')).totalPages);\n        // console.log(res.headers.get('pagination'));\n      // \"{\"currentPage\":2,\"itemsPerPage\":10,\"totalItems\":217,\"totalPages\":22}\"\n        // console.log(res.body);\n        this.parentLocations = [];\n        this.childLocations = [];\n        this.allProducts = [];\n        this.healthHazardClassArray = [];\n        this.physicalHazardClassArray = [];\n\n        this.healthHazardClassArray = this.healthClassList;\n        this.physicalHazardClassArray = this.physicalClassList;\n\n        if (res == null) {\n          this.isLoading = false;\n          this.searchResultIsEmpty = false;\n          this.hideButton = false;\n          this.parentLocations = [];\n          this.childLocations = [];\n          this.healthHazardClassArray = [];\n          this.physicalHazardClassArray = [];\n          // this.getAllProducts();\n        } else {\n          this.products = res;\n          for (const response of this.products.body) {\n            this.allProducts.push(response);\n          }\n          \n          this.MyDataSource = new MatTableDataSource<Element>(res);\n          this.MyDataSource.data = res.body;\n          this.MyDataSource.sort = this.sort;\n\n          this.isLoading = false;\n          this.searchResultIsEmpty = false;\n          this.parentLocations = [];\n          this.childLocations = [];\n          this.healthHazardClassArray = [];\n          this.physicalHazardClassArray = [];\n        }\n      },\n      error => {\n        // console.log('There was an error: ' + error);\n        this.searchResultIsEmpty = true;\n        this.isLoading = false;\n      },\n      () => {\n        this.isLoading = false;\n        this.parentLocations = [];\n        this.childLocations = [];\n      }\n    );\n    }\n    this.isLoading = false;\n    this.alertify.message('Please enter a search parameter');\n  }\n\n  searchForProducts(selectedValue: string) {\n    this.allProducts = [];\n    this.searchString = selectedValue;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: '',\n      searchCasNumber: ''\n    };\n\n    // if(this.selectedSearchParameter === 'searchString') {\n    //   findObj.searchString = '';\n    // }\n    if (this.selectedSearchParameter === 'productName') {\n      searchObj.searchProductName = selectedValue;\n    }\n    if (this.selectedSearchParameter === 'productCode') {\n      searchObj.searchProductCode = selectedValue;\n    }\n    if (this.selectedSearchParameter === 'manufacturer') {\n      searchObj.searchMfgName = selectedValue;\n    }\n    if (this.selectedSearchParameter === 'casNo') {\n      searchObj.searchCasNumber = this.searchString;\n    }\n\n    this.getAllProducts();\n  }\n\n  searchProductName(searchBoxProductName: string) {\n    this.allProducts = [];\n    this.searchString = searchBoxProductName;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: '',\n      searchCasNumber: ''\n    };\n\n    searchObj.searchProductName = searchBoxProductName;\n    searchObj.searchProductCode = '';\n    searchObj.searchMfgName = '';\n    // this.getSearchProducts();\n    // this.getVendorProducts();\n    // this.getVendorProductsNew(searchObj);\n  }\n\n  getAuthorityNames() {\n    return this.userService.getAllTopAuthorities().subscribe(\n      res => {\n        this.authorities = res;\n        this.authArrayIds = res;\n        this.authArrayIds.forEach(item => {\n          // console.log(item.rootAuthorityUnitId);\n          // this.editClick(item.rootAuthorityUnitId);\n        });\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  openProductCreationPage() {\n    const dialogRef = this.dialog.open(CreateProductComponent, {\n      width: '1000px'\n    });\n\n    dialogRef.disableClose = true;\n  }\n\n  openInventoryDetailPage(product) {\n    const dialogConfig = new MatDialogConfig();\n    const dialogRef = this.dialog.open(InventoryDetailComponent, {\n      width: '1000px',\n      data: {\n        row: product\n      }\n    });\n\n    dialogConfig.data = {\n      ref_id: product['ref_id'],\n      msdsId: product['msds_id'],\n      internal: product['internal']\n    };\n  }\n\n  openVendorAPIDetailPage(product) {\n    const dialogConfig = new MatDialogConfig();\n    const dialogRef = this.dialog.open(InventoryVendorapiDetailComponent, {\n      width: '1000px',\n      data: {\n        row: product\n      }\n    });\n\n    dialogConfig.data = {\n      ref_id: product['ref_id'],\n      msdsId: product['msds_id'],\n      internal: product['internal']\n    };\n  }\n\n  openDiaglogProductPage(row) {\n    const dialogConfig = new MatDialogConfig();\n    if (row['exemptionclassFlag'] == '1') {\n      row['exemptionclassFlag'] = 'true';\n    } else {\n      row['exemptionclassFlag'] = 'false';\n    }\n    dialogConfig.data = {\n      // product_name: row['product_name'],\n      product_name: row['product_name'],\n      mfg_name: row['mfg_name'],\n      product_code: row['product_code'],\n      cas_no: row['cas_no'],\n      productAlias: row['productAlias'],\n      health_authority: row['health_authority'],\n      productNodes: row['productNote'], // not needed\n      additionalSupplier: row['additionalSupplier'],\n      whmisExempt: row['whmis_exempt'],\n      last_verified: row['last_verified'],\n      revision_date: row['revision_date'],\n      date_added: row['date_added'],\n      discontinued: row['discontinued'],\n      secondaryName: row['secondaryName'],\n      fromVendorApi: row['fromVendorAPI']\n    };\n\n    // const dialogRef = this.dialog.open(ProductPageComponent, dialogConfig);\n    const dialogRef = this.dialog.open(ProductLocationComponent, dialogConfig);\n    this.selectedProduct = row;\n    // console.log(\"selected product \" + this.selectedProduct.internal + ' cas ' + this.selectedProduct.cas_no);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  editClick(product) {\n    // console.log(\"Edit was clicked hospitalName \" + authority.hospitalLevelName);\n    return this.productService\n      .updateProductInfo(product.productId, product)\n      .subscribe(\n        res => {\n          this.products = res;\n          this.products.forEach(element => {\n            this.allProducts.push(element);\n          });\n\n          this.MyDataSource = new MatTableDataSource();\n          // this.MyDataSource.data = res;\n          this.MyDataSource.data = this.allProducts;\n          this.MyDataSource.sort = this.sort;\n          this.MyDataSource.paginator = this.paginator;\n          // this.authorityTree = res;\n        },\n        error => {\n          console.log('There was an error: ' + error);\n        }\n      );\n  }\n\n  openInventoryEditPage(product) {\n    const dialogRef = this.dialog.open(InventoryEditComponent, {\n      width: '1000px',\n      data: {\n        product: product\n      }\n    });\n  }\n\n  // openDiaglogEdit(product) {\n  //   //this.editClick(product.productId);\n  //   const dialogRef = this.dialog.open(EditProductComponent, {\n  //     data: {\n  //       product: product\n  //     }\n  //   });\n  //   // console.log(\"openDialogEdit topLevelName\" + product.topLevelName);\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log(result);\n  //   });\n  // }\n\n  selectRow(row) {\n    // console.warn(row);\n    // console.log(row.productId);\n    // this.openDiaglogProductPage(row);\n  }\n\n  // searchBoxClick(searchBoxValue: string) {\n  //   // console.log(\"searchbox value \" + searchBoxValue);\n  //   this.searchString = searchBoxValue;\n  //   this.getAllProducts(this.searchString);\n  //   this.allProducts = [];\n  // }\n\n  searchBoxClick(searchBoxValue: string) {\n    // console.log(\"searchbox value \" + searchBoxValue);\n    this.searchString = searchBoxValue;\n    this.getAllProducts();\n    this.allProducts = [];\n  }\n  \n  // for(const singleProduct of this.selection.selected) {\n  //   params.append('productId', singleProduct.productId.toString());\n  //   console.log(singleProduct.productId);\n  // }\n\n  openExportList() {\n      const dialogRef = this.dialog.open(ExportListComponent, {\n        width: '1000px',\n        data: {\n          data: this.selection.selected\n        }\n      });   \n  }\n\n  healthHazardClassList = new FormControl({value: '', disabled: true}, [Validators.required]);\n  healths;\n  selectedHealthClass;\n  healthClassList: number;\n  healthHazardClassArray: any = [];\n\n  onSelectedHealthHazardClass(selectedHealthClass) {\n    this.allProducts = [];\n    this.filterByHealthHazardClass(selectedHealthClass);\n  }\n\n  filterByHealthHazardClass(selectedHealthClass) {\n    if (this.products.body) {\n      if (this.products.body.length > 0 && this.selectedSearchParameter !== '' && selectedHealthClass !== null) {\n        this.healthClassList = selectedHealthClass;\n        this.healthHazardClassArray = this.healthClassList;\n        this.model.healthClassId = this.healthClassList;\n        return this.getAllProducts();\n      }\n    }  else {\n      return null;\n    }\n  }\n\n  healthDropDown() {\n    return this.whmisService.getHealthClass().subscribe(res => {\n      this.healthClass = res;\n    });\n  }\n\n  physicalHazardClassList = new FormControl({value: '', disabled: true}, [Validators.required]);\n  physicalClass: any;\n  selectedPhysicalClass;\n  physicalClassList: number;\n  physicalHazardClassArray: any = [];\n\n  onSelectedPhysicalHazardClass(selectedPhysicalClass) {\n    this.allProducts = [];\n    this.filterByPhysicalClass(selectedPhysicalClass);\n  }\n\n  filterByPhysicalClass(selectedPhysicalClass) {\n    if (this.products.body) {\n      if (this.products.body.length > 0 && this.selectedSearchParameter !== '' && selectedPhysicalClass.length !== 0) {\n        this.physicalClassList = selectedPhysicalClass;\n        this.physicalHazardClassArray = this.physicalClassList;\n        this.model.physicalClassId = this.physicalClassList;\n        return this.getAllProducts();\n      }\n      if (this.products.body.length === 0 && selectedPhysicalClass.length !== 0) {\n        this.physicalClassList = selectedPhysicalClass;\n        this.physicalHazardClassArray = this.physicalClassList;\n        this.model.physicalClassId = this.physicalClassList;\n        return this.getAllProducts();\n      }\n      if (this.products.body.length === 0 && selectedPhysicalClass.length === 0) {\n        return this.getAllProducts();\n      }\n      if (this.products.body.length !== 0 && selectedPhysicalClass.length === 0) {\n        return this.getAllProducts();\n      }\n    }  else {\n      return null;\n    }\n  }\n\n  physicalClassDropDown() {\n    return this.whmisService.getPhysicalClass().subscribe(res => {\n      this.physicalClass = res;\n    });\n  }\n\n  productLocationDropDown() {\n    return this.productService.productLocation().subscribe(res => {\n      this.productLocation = res;\n    });\n  }\n\n  getUserDetails() {\n    return this.userService\n      .getUserByEmail(this.authService.decodedToken.email)\n      .subscribe(res => {\n        this.userDetail = res;\n        this.userDetailArray = this.userDetail;\n      });\n  }\n\n  sdsRequest(row) {\n    this.request.productName = row.product_name;\n    this.request.manufacturer = row.mfg_name;\n    this.request.productCode = row.product_code;\n\n    for(const constCasNumber of row.cas_no) {\n      this.request.casNumber = constCasNumber;\n    }\n\n    for (const userInfo of this.userDetailArray) {\n      this.request.firstName = userInfo.firstName;\n      this.request.lastName = userInfo.lastName;\n      this.request.emailAddress = userInfo.emailAddress;\n      this.request.phoneNumber = userInfo.phoneNumber;\n    }\n\n    return this.sendMailService.siteAdminSDSRequest(this.request).subscribe(\n      res => {\n        this.alertify.success('Successfully requested product');\n      },\n      error => {\n        this.alertify.error('Request was not sent, please try again');\n      }\n    );\n  }\n\n  assignProduct() {\n    var node = new TodoItemFlatNode();\n    node: TodoItemFlatNode;\n\n    if (this.selection.selected.length > 0 && this.products.body.length > 0 && this.nodeIsChecked) {\n\n    var prompt = confirm('Do you want to assign these products to this/these locations?');\n    if (prompt) {\n    let params = new URLSearchParams();\n\n    for (const selectedProduct of this.selection.selected) {\n      params.append('productId', selectedProduct.productId.toString());\n      // params.append('rootAuthorityUnitId', selectedProduct.rootAuthorityUnitId.toString())\n    }\n\n    params.append('rootAuthorityUnitId', this.parentLocations);\n\n    for (const childLocation of this.childLocations) {\n      params.append('rootAuthorityUnitId', childLocation.authorityUnitId);\n    }\n    // if(this.selection.selected.length === 0 || this.parentLocations.length === 0 || this.childLocations.length === 0) {\n    //   this.alertify.warning('Please select a product and a location');\n    //   return null;\n    // } else {\n      return this.productService.assignProductLocation(params).pipe(takeUntil(this.unsubscribe)).subscribe(\n        res => {\n          this.locations = res;\n  \n          this.alertify.success(`Successfully added to location`);\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again!');\n        }\n      );\n      // }\n  }\n}\n  this.alertify.warning('Please select a product(s) and/or a location(s)');\n  }\n\n  backUpSDSFiles: any = [];\n\n  backUp() {\n    this.isLoading = true;\n    let params = new URLSearchParams();\n    this.backUpSDSFiles = [];\n    // for (const product of this.model) {\n    //   params.append('productId', product.productId);\n    //   console.log(product.productId);\n    // }\n\n    for(const singleProduct of this.selection.selected) {\n        params.append('productId', singleProduct.productId.toString());\n    }\n\n    this.productService.createArchive(params).pipe(takeUntil(this.unsubscribe)).subscribe(\n      blob => {\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = 'Backup';\n        link.click();\n        this.alertify.success('Backup created');\n        this.isLoading = false;\n        this.hideButton = false;\n        this.backUpSDSFiles = [];\n      },\n      error => {\n        this.alertify.error('Something went wrong, please try again');\n        this.isLoading = false;\n        this.hideButton = false;\n        this.backUpSDSFiles = [];\n      }\n    );\n  }\n  // ===================================Material Tree ================================ //\n  \n  locationsFromResponse: any = [];\n  location: TodoItemNode[] = [];\n  parentLocations: any = [] = [];\n  childLocations: any = [] = [];\n  unsubscribe = new Subject<void>();\n  nodeIsChecked: any;\n\n  selection = new SelectionModel<InventoryModel>(true, []);\n\n\n  \n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    if (numSelected === 0) {\n      return null;\n    }\n    const numRows = this.MyDataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.products.body) {\n      this.isAllSelected()\n      ? this.selection.clear()\n      : this.MyDataSource.data.forEach(row => this.selection.select(row));\n    }\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: InventoryModel): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    // for(const test of this.selection.selected) {\n    //   console.log('This is it: ' + test[0].firstName);\n    // }\n    return `${\n      this.selection.isSelected(row) ? 'deselect' : 'select'\n    } row ${row.position + 1}`;\n  }\n\n  getTopLocations() {\n    return this.locationService.locationHiararchy().pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.locationsFromResponse = res;\n      this.location = this.locationsFromResponse;\n\n      this.dataSource.data = this.location;\n      // this.dataChange.next(data);\n      // const data = this.buildFileTree(this.location, 0);\n      this.dataChange.value.push(this.locationsFromResponse);\n\n      this.dataChange.next(this.location);\n      // this.dataChange.next(data);\n      // this.dataChange.next(this.data);\n    });\n  }\n\n  get data(): TodoItemNode[] {\n    return this.dataChange.value;\n  }\n\n  clickedActive(element) {\n    element.checked = !element.checked;\n    console.log(element.checked);\n  }\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  // tslint:disable-next-line: member-ordering\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  // tslint:disable-next-line: member-ordering\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  // tslint:disable-next-line: member-ordering\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  // tslint:disable-next-line: member-ordering\n  newItemName = '';\n\n  // tslint:disable-next-line: member-ordering\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true);\n\n  // model = {\n  //   name: '',\n  //   rootAuthorityUnitId: null,\n  //   parentAuthorityUnitId: null\n  // };\n\n  // updateModel = {\n  //   name: '',\n  //   authorityUnitId: null,\n  //   rootAuthorityUnitId: null,\n  //   parentAuthorityUnitId: null\n  // };\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  levelsExist = (node: TodoItemNode) => node.exists;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) =>\n    _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.item === node.name\n        ? existingNode\n        : new TodoItemFlatNode();\n    flatNode.item = node.name;\n    flatNode.level = level;\n    flatNode.authorityUnitId = node.authorityUnitId;\n    flatNode.parentAuthorityUnitId = node.parentAuthorityUnitId;\n    flatNode.rootAuthorityUnitId = node.rootAuthorityUnitId;\n    if (node.hasChild) {\n      flatNode.expandable = true;\n    } else {\n      flatNode.expandable = false;\n    }\n\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n  itemSelected: boolean;\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    // console.log(descendants);\n    if(descendants.length === 0) {\n      return this.checklistSelection.isSelected(node);\n    }\n\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    // console.log('CheckList Toggle: ' + this.checklistSelection.toggle(node));\n    // console.log(descendants.values);\n    // console.log(node.item);\n    // console.log(node.authorityUnitId);\n    // console.log('Selected 1056: ' + this.checklistSelection.selected);\n    // const selected = this.checklistSelection.selected;\n    // selected.forEach((node: TodoItemFlatNode) => {\n    //   console.log(node);\n    //   console.log(selected);\n    // });    // for(cons test of selected) {\n    //   console.log();\n    // }\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    // console.log(result);\n\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  filterByProductLocation(authorityUnitId, descendants) {\n    if (this.products.body) {\n      if (this.products.body.length > 0 && this.nodeIsChecked && this.selection.selected.length === 0) {\n        this.parentLocations = authorityUnitId;\n        this.childLocations = descendants;\n        return this.getAllProducts();\n      }\n      if (this.products.body.length > 0 && !this.nodeIsChecked && this.selection.selected.length === 0) {\n        this.parentLocations = [];\n        this.childLocations = [];\n        return this.getAllProducts();\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n    this.checkAllParentsSelection(node);\n    // Force update for the parent\n    descendants.every(child => this.checklistSelection.isSelected(child));\n    this.checkAllParentsSelection(node);\n    node.checked = !node.checked;\n    this.nodeIsChecked = node.checked;\n\n    // ==> node will give me the parent which has the expandable //\n    // console.log(node);\n    // console.log(node.authorityUnitId);\n\n      this.parentLocations = [];\n      this.childLocations = [];\n      this.allProducts = [];\n\n      this.parentLocations = node.authorityUnitId;\n      this.childLocations = descendants;\n\n    this.filterByProductLocation(node.authorityUnitId, descendants);\n  }\n\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n    // console.log('This => ' + node.item);\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n\n    this.parentLocations = [];\n    this.childLocations = [];\n    // this.getAllProducts();\n    // console.log(this.checkAllParentsSelection(node));\n    // console.log(node);\n    // console.log(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\n    // console.log(parent);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n    this.parentLocations = [];\n    this.childLocations = [];\n    // this.getAllProducts();\n    // console.log(parent);\n    // console.log(node);\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    // console.log(nodeSelected);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    // console.log(node);\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n\n    // console.log(this.checklistSelection.select(node));\n    // console.log('node: ' + node);\n    // console.log('nodeSelected: ' + nodeSelected);\n\n    // this.parentLocations = [];\n    // this.childLocations = [];\n    // this.getAllProducts();\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n    // console.log('This => ' + node.item);\n\n    const currentLevel = this.getLevel(node);\n    if (currentLevel < 1) {\n      return null;\n    }\n    // console.log(currentLevel);\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n    // console.log(startIndex);\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n      // console.log('CurrentNode: ' + currentNode.authorityUnitId);\n      // console.log('CurrentNode2: ' + currentNode.item);\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n}\n\nexport interface ProductInterface {\n  product_name: string;\n  mfg_name: string;\n  secondaryName: string;\n  product_code: string;\n  cas_no: string;\n  productAlias: string;\n  productNodes: string;\n  additionalSupplier: string;\n  exemptionclassFlag: string;\n  internal: string;\n}\n\nexport interface searchCloudSDSObject {\n  msdsId: string;\n  productName: string;\n  productCode: string;\n  mfgName: string;\n  casNo: string;\n  secondaryName: string;\n  none: string;\n  pageNumber: number;\n  pageSize: number;\n}\n\nexport interface searchObject {\n  searchProductName: string;\n  searchProductCode: string;\n  searchMfgName: string;\n  searchCasNumber: string;\n}\n\nexport interface InventoryModel {\n  productId: number;\n  rootAuthorityUnitId: number;\n  product_name: string;\n  mfg_name: string;\n  product_code: string;\n  addedToInventory: boolean;\n  revision_date: string;\n  last_verified: string;\n  discontinued: boolean;\n  whmis_exempt: boolean;\n  position: number;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvaW52ZW50b3J5LXZlbmRvcmFwaS1kZXRhaWwvaW52ZW50b3J5LXZlbmRvcmFwaS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card>\\n    <mat-card-title>Vendor API</mat-card-title>\\n    <mat-card-content>\\n      <form>\\n        <!-- <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product.productName\\\" name=\\\"productName\\\">\\n        </mat-form-field> -->\\n        <!-- <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n          <textarea matInput readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" [(ngModel)]=\\\"product.productAlias\\\" name=\\\"productAlias\\\"></textarea>\\n          <input matInput readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" *ngIf=\\\"product.productAlias.length === 0\\\" value=\\\"N/A\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"product.product_code\\\" name=\\\"product_code\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Code\\\" *ngIf=\\\"product.product_code.length === 0\\\" value=\\\"N/A\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n              <input readonly=\\\"true\\\" matInput placeholder=\\\"Cas Number\\\" [(ngModel)]=\\\"product.cas_no\\\" name=\\\"cas_no\\\">\\n              <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.cas_no.length === 0\\\" placeholder=\\\"Cas Number\\\" value=\\\"N/A\\\">\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n          <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.healthHazardClass !== null || product.healthHazardClass !== ''\\\" placeholder=\\\"Health Hazard Class\\\" [(ngModel)]=\\\"product.healthHazardClass\\\" name=\\\"healthHazardClass\\\">\\n          <input readonly=\\\"true\\\" matInput *ngIf=\\\"product.healthHazardClass.length === 0\\\" placeholder=\\\"Health Hazard Class\\\" value=\\\"N/A\\\">\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n          <input readonly=\\\"true\\\" *ngIf=\\\"product.physicalHazardClass !== null\\\" matInput placeholder=\\\"Physical Hazard Class\\\" [(ngModel)]=\\\"product.physicalHazardClass\\\" name=\\\"physicalHazardClass\\\">\\n          <input readonly=\\\"true\\\" *ngIf=\\\"product.physicalHazardClass.length === 0\\\" matInput placeholder=\\\"Physical Hazard Class\\\" value=\\\"N/A\\\">\\n        </mat-form-field> -->\\n<!--   \\n          <table *ngFor=\\\"let product of productDetail\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" width=\\\"325\\\">\\n              <tr>\\n                <th>Location</th>\\n                <th>Product Secondary Name</th>\\n                <th>Date Added</th>\\n                <th>Remove from Location</th>\\n              </tr>\\n              <tr *ngFor=\\\"let productInfo of product.health_authority\\\">\\n                <td>{{productInfo.location}}</td>\\n                <td>{{productInfo.secondaryName}}\\n                  <span *ngIf=\\\"productInfo.secondaryName === null\\\">N/A</span>\\n                  <span *appHasRole=\\\"['Site Admin']\\\">\\n                  <mat-icon style=\\\"cursor: pointer;\\\" *ngIf=\\\"productInfo.secondaryName === null\\\" (click)=\\\"openCreateSecondaryNameModalWindow(productInfo)\\\">library_add</mat-icon>\\n                  <mat-icon style=\\\"cursor: pointer;\\\" *ngIf=\\\"productInfo.secondaryName !== null\\\" (click)=\\\"openUpdateSecondaryNameModalWindow(productInfo)\\\">edit</mat-icon>\\n                </span>\\n                </td>\\n                  \\n                  <td>{{productInfo.date_added}}\\n                    <span *ngIf=\\\"productInfo.date_added === null\\\">N/A</span>\\n                  </td>\\n                  <td><mat-icon style=\\\"cursor: pointer;\\\" (click)=\\\"removeProductfromLocation(productInfo.rootAuthorityUnitId, productInfo.productAuthorityId)\\\">close</mat-icon></td>\\n              </tr>\\n            </table> -->\\n          \\n           <!-- <mat-card-actions class=\\\"fullWidth\\\" style=\\\"display:flex; align-items:flex-end !important; margin-left: 5px; \\\">\\n          <button mat-raised-button *ngIf=\\\"internal\\\" (click)=\\\"getSDSPDF()\\\"><a [target]=\\\"'_blank'\\\">View SDS</a></button>\\n          <button mat-raised-button *ngIf=\\\"!internal\\\" (click)=\\\"getCloudSDSPDF()\\\" ><a>View SDS</a></button>\\n        </mat-card-actions> -->\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-inventory-vendorapi-detail',\n  templateUrl: './inventory-vendorapi-detail.component.html',\n  styleUrls: ['./inventory-vendorapi-detail.component.css']\n})\nexport class InventoryVendorapiDetailComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private productService: ProductService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog\n  ) {}\n\n  productDetail: any;\n  productDetailInfo: any = {};\n  msdsId = this.passedData.row.msds_id;\n  test = this.passedData.row;\n\n  ngOnInit() {\n    console.log(this.msdsId);\n    console.log(this.test);\n    this.getVendorAPIProductDetail();\n  }\n\n  getVendorAPIProductDetail() {\n    return this.productService.getVendorAPIInventoryProductDetail(this.msdsId).subscribe(\n        res => {\n        this.productDetail = res;\n        for(const test of this.productDetail) {\n          console.log('VendorAPIDetail: ' + test.product_name);\n          console.log('VendorAPIDetail: ' + test);\n        }\n        console.log(this.productDetail);\n      // this.productDetailInfo = this.productDetail.health_authority;\n      //  this.MyDataSource = new MatTableDataSource(this.productDetail);\n      //  this.MyDataSource.data = res;\n      },\n      error => {\n        this.alertify.error('Unable to retrieve product detail');\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LXByb2R1Y3QvdXBkYXRlLXNlY29uZGFyeW5hbWUvdXBkYXRlLXNlY29uZGFyeW5hbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form\\n#updateSecondaryNameForm=\\\"ngForm\\\"\\n(submit)=\\\"updateSecondaryProductName()\\\"\\nid=\\\"updateSecondaryNameForm\\\"\\n>\\n<mat-form-field class=\\\"fullWidth\\\">\\n  <input\\n    matInput\\n    placeholder=\\\"Secondary Name\\\"\\n    name=\\\"secondaryName\\\"\\n    [(ngModel)]=\\\"secondaryName\\\"\\n  />\\n</mat-form-field>\\n\\n<button\\n  mat-raised-button\\n  style=\\\"margin-right: 2%\\\"\\n  type=\\\"submit\\\"\\n  form=\\\"updateSecondaryNameForm\\\"\\n>\\n  Save\\n</button>\\n\\n<button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">\\n  Close\\n</button>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n\n@Component({\n  selector: 'update-secondaryname',\n  templateUrl: './update-secondaryname.component.html',\n  styleUrls: ['./update-secondaryname.component.css']\n})\nexport class UpdateSecondarynameComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private productService: ProductService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog\n  ) {}\n  \n  productId = this.passedData.row.productId;\n  productAuthorityId = this.passedData.row.productAuthorityId;\n  secondaryName = this.passedData.row.secondaryName;\n  rootAuthorityUnitId = this.passedData.row.rootAuthorityUnitId;\n\n  model: any = {};\n\n  ngOnInit() {\n    console.log('RootAuthorityUnitId: ' + this.rootAuthorityUnitId);\n  }\n\n\n  updateSecondaryProductName() {\n    this.model.productId = this.productId;\n    this.model.productAuthorityId = this.productAuthorityId;\n    this.model.secondaryName = this.secondaryName;\n    this.model.rootAuthorityUnitId = this.rootAuthorityUnitId;\n\n    return this.productService.updateSecondaryName(this.productId, this.model).subscribe(res => {\n      console.log('RootAuthorityUnitId: ' + this.rootAuthorityUnitId);\n      this.model =  res;\n      this.alertify.success('Secondary name updated successfully');\n    },\n    error => {\n      this.alertify.error('Something went wrong, please try again');\n    });\n  }\n}\n","module.exports = \".form-style{\\n    margin: auto; margin-top: 250px;\\n    width: 30%;\\n    border: 0.5px solid rgb(121, 124, 123);\\n    padding: 10px;\\n    }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9pbnZpdGUvaW52aXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZLEVBQUUsaUJBQWlCO0lBQy9CLFVBQVU7SUFDVixzQ0FBc0M7SUFDdEMsYUFBYTtJQUNiIiwiZmlsZSI6ImFwcC9pbnZpdGUvaW52aXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1zdHlsZXtcbiAgICBtYXJnaW46IGF1dG87IG1hcmdpbi10b3A6IDI1MHB4O1xuICAgIHdpZHRoOiAzMCU7XG4gICAgYm9yZGVyOiAwLjVweCBzb2xpZCByZ2IoMTIxLCAxMjQsIDEyMyk7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICB9Il19 */\"","module.exports = \"\\n    <form (ngSubmit)=\\\"inviteUser()\\\">\\n        <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Invite User</mat-card-title>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select\\n          placeholder=\\\"Authority\\\"\\n          [(ngModel)]=\\\"selectedAuthority\\\"\\n          name=\\\"authority\\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let authority of authorities\\\"\\n            [value]=\\\"authority.authorityUnitId\\\"\\n          >\\n            {{ authority.name }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <!-- <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Authority\\\">\\n          <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority\\\" >\\n            {{authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field> -->\\n      <!-- \\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Location\\\">\\n          <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority\\\"\\n          >\\n            {{level1authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Site\\\">\\n          <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority\\\">\\n            {{level2authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Department\\\">\\n          <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority\\\">\\n            {{level3authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field> -->\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"First Name\\\"\\n          [(ngModel)]=\\\"model.firstName\\\"\\n          name=\\\"firstName\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Last Name\\\"\\n          [(ngModel)]=\\\"model.lastName\\\"\\n          name=\\\"lastName\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Email\\\"\\n          [(ngModel)]=\\\"model.email\\\"\\n          name=\\\"email\\\"\\n        />\\n      </mat-form-field>\\n\\n      <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n        <button\\n          mat-raised-button\\n          matTooltip=\\\"Press to invite\\\"\\n          aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\"\\n        >\\n          Invite\\n        </button>\\n\\n        <!-- <button\\n          mat-raised-button\\n          style=\\\"margin-left: 5px;\\\"\\n          type=\\\"button\\\"\\n          routerLink=\\\"/users\\\"\\n        >\\n          Back\\n        </button> -->\\n        <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n      </mat-card-actions>\\n    </form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\nimport { UserService } from '../_service/user.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'invite',\n  templateUrl: './invite.component.html',\n  styleUrls: ['./invite.component.css']\n})\n\nexport class InviteComponent implements OnInit {\n//Email: string;\n// Username: string;\n\n  constructor(private http: HttpClient,\n     private api: ApiService,\n      private userService: UserService,\n      private router: Router,\n      private alertify: AlertifyService) { }\n\n  baseUrl = 'https://localhost:44309/api/v1/user/';\n // baseUrl = 'https://ohssdsdev.azurewebsites.net/api/v1/user';\n\n\nuser: User;\n\nmodel: any = {\n  authorityUnitId: null,\n  firstName: '',\n  lastName: '',\n  email: '',\n//  userId: null\n}\n\n\nauthorities;\nlevel1Authorities;\nlevel2Authorities;\nlevel3Authorities;\nlocations;\nselectedHospital: string;\npublic selectedAuthority: any;\n\nlistOfAuthorityNames = [];\n\n  ngOnInit() {\n    this.getAuthorityNames();\n    this.getLevel1AuthorityNames();\n    this.getLevel2AuthorityNames();\n    this.getLevel3AuthorityNames();\n    // this.userService.getAuthorityNames().subscribe(res => {\n    //   console.log(res);\n    //   this.authorities = res; });\n\n    //   this.userService.getLevel1AuthorityNames().subscribe(res => {\n    //     console.log(res);\n    //     this.level1Authorities = res;\n    //   });\n\n    //   this.userService.getLevel2AuthorityNames().subscribe(res => {\n    //     console.log(res);\n    //     this.level2Authorities = res;\n    //   });\n\n    //   this.userService.getLevel3AuthorityNames().subscribe(res => {\n    //     console.log(res);\n    //     this.level3Authorities = res;\n    //   });\n    }\n\n  // getAllAuthoritiesByRoles() {\n  //   return this.http.get(this.baseUrl + 'authoritiesbyroles');\n  // }\n\n  // getAuthorityNames() {\n  //   console.log('in getauthorityname of invitecomponent ' + this.authorities);\n  //   return this.userService.getAuthorityNames().subscribe(res => {\n  //     console.log(res);\n  //     this.authorities = res;\n  //   });\n  // }\n\n  // getLevel1AuthorityNames() {\n  //   console.log('in level1authority of invitecomponent ' + this.level1Authorities);\n  //   return this.userService.getLevel1AuthorityNames();\n  // }\n\n  // getLevel2AuthorityNames() {\n  //   console.log('in level1authority of invitecomponent ' + this.level2Authorities);\n  //   return this.userService.getLevel2AuthorityNames();\n  // }\n\n  // getLevel3AuthorityNames() {\n  //   console.log('in level1authority of invitecomponent ' + this.level3Authorities);\n  //   return this.userService.getLevel3AuthorityNames();\n  // }\n\n  getAuthorityNames() {\n    //console.log('in getauthorityname of invitecomponent ' + this.authorities);\n    return this.userService.getAuthorityNames().subscribe(res => {\n      //console.log(res);\n      this.authorities = res;\n    });\n  }\n\n  getLevel1AuthorityNames() {\n    //console.log('in level1authority of invitecomponent ' + this.level1Authorities);\n    return this.userService.getLevel1AuthorityNames().subscribe(res => {\n      this.level1Authorities = res;\n      //console.log('This is coming from level2AuthoritiesNames: ' + this.level1Authorities);\n\n    });\n  }\n\n  getLevel2AuthorityNames() {\n    //console.log('in level1authority of user-location ' + this.level2Authorities);\n    return this.userService.getLevel2AuthorityNames().subscribe(res => {\n      this.level2Authorities = res;\n    });\n  }\n\n  getLevel3AuthorityNames() {\n   // console.log('in level1authority of invitecomponent ' + this.level3Authorities);\n    return this.userService.getLevel3AuthorityNames().subscribe(res => {\n      //console.log(res);\n      this.level3Authorities = res;\n    });\n  }\n\n  inviteUser() {\n    // this.model.userId = this.user.userId;\n    this.model.authorityUnitId = this.selectedAuthority;\n    // this.model.firstName = this.user.firstName;\n    // this.model.lastName = this.user.lastName;\n    // this.model.email = this.user.emailAddress;\n\n  //  console.log(this.model.email + this.model.username + \n  //   this.model.authorities + this.model.level1Authorities\n  //    + this.model.level2Authorities + this.model.level3Authorities);\n\n    return this.userService.inviteUserBySiteAdmin(this.model).subscribe(\n      res => {\n        this.alertify.success(`Invitation sent to email: ${this.model.email}`);\n        this.router.navigate(['/users']);\n        this.locations = res;\n      },\n      error => {\n        this.alertify.error('Something went wrong!');\n        console.log('issue with invitation');\n      }\n    )\n  }\n\n  assignLocation() {\n    this.model.userId = this.user.userId;\n    this.model.authorityUnitId = this.selectedAuthority;\n    return this.userService.assignUserLocation(this.model).subscribe(res => {\n      //console.log(res);\n      //console.log('AssignLocation()/current userId: ' + this.user.userId + ',' + 'LocationId: ' + this.authorities.authorityUnitId);\n      this.locations = res;\n    });\n  }\n \n\n \n}\n\nexport interface Authority {\n  value: string;\n  viewValue: string;\n}\n\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9sZXZlbDNhdXRoL2xldmVsM2F1dGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwiZmlsZSI6ImFwcC9sZXZlbDNhdXRoL2xldmVsM2F1dGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZvcm0ge1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH0iXX0= */\"","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Authority\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n        {{option}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n\\n  <!-- <mat-form-field class=\\\"fullWidth\\\">\\n    <mat-select placeholder=\\\"Department\\\" [(ngModel)]=\\\"selectedLevel3Authority\\\" name=\\\"level3authority\\\">\\n      <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n        {{level3authority.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field> -->\\n</form>\\n\\n \\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { UserService } from '../_service/user.service';\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: 'app-level3auth',\n  templateUrl: './level3auth.component.html',\n  styleUrls: ['./level3auth.component.css']\n})\nexport class Level3authComponent implements OnInit {\n  myControl = new FormControl();\n  options: string[] = ['Fraser Health Authority', 'Coastal Health Authority', 'Vancouver Island Health Authority'];\n  //options = this.getLevel3AuthorityNames();\n  filteredOptions: Observable<string[]>;\n  level3Authorities;\n  selectedLevel3Authority;\n  constructor(private userService: UserService, private api: ApiService) { }\n\n\n  ngOnInit() {\n    this.level3Authorities = this.getLevel3AuthorityNames();\n    \n    console.log(\"this.getleve3auth Init\" + this.getLevel3AuthorityNames());\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  // private _filter(value: string): string[] {\n    private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    let returnValues = this.options.filter(option => option.toLowerCase().includes(filterValue));\n    //console.log(returnValues);\n    return returnValues; //this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  getLevel3AuthorityNames() {\n    // console.log('in level1authority of invitecomponent ' + this.level3Authorities);\n   \n     return this.userService.getLevel3AuthorityNames().subscribe(res => {\n       //console.log(res);\n       this.level3Authorities = res;\n     });\n   }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9jYXRpb25UcmVlL2xvY2F0aW9uVHJlZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngFor=\\\"let model of locationTree\\\">\\n    <mat-checkbox\\n      #checkbox=\\\"matCheckbox\\\"\\n      [checked]=\\\"model.selected\\\"\\n      (click)=\\\"onSelectedLocationTree(checkbox, model)\\\"\\n      >{{model.topLevelName}}</mat-checkbox>\\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationService } from '../_service/location.service';\nimport { ProductService } from '../_service/product.service';\nimport { AuthoritytreeService } from '../_service/authoritytree.service';\nimport { MatCheckbox } from '@angular/material';\n\n@Component({\n  selector: 'app-locationTree',\n  templateUrl: './locationTree.component.html',\n  styleUrls: ['./locationTree.component.css']\n})\nexport class LocationTreeComponent implements OnInit {\n\n  constructor(\n    private productService: ProductService,\n    private http: HttpClient,\n    private locationService: LocationService,\n    private authorityTreeService: AuthoritytreeService\n  ) {}\n\n  locationTreeArray: number;\n  locationTree: any;\n  level1TreeArray: number;\n  level1Tree: any;\n  model: any;\n\n  ngOnInit() {\n    this.locationCheckBoxes();\n  }\n\n  locationCheckBoxes() {\n    return this.authorityTreeService.getLocationCheckBoxes().subscribe(res => {\n      this.locationTree = res;\n    });\n  }\n\n  onSelectedLocationTree(checkbox: MatCheckbox, model: { authorityUnitId: number }) {\n    this.model.authorityUnitId = model.authorityUnitId;\n    this.locationTreeArray = model.authorityUnitId;\n  }\n\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .example-container > * {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYiIsImZpbGUiOiJhcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIFxuICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */\"","module.exports = \"    <!-- <mat-card class=\\\"form-style\\\">\\n    <form\\n      #loginForm=\\\"ngForm\\\"\\n      \\n      (ngSubmit)=\\\"login()\\\"\\n    >\\n      <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Login</mat-card-title>\\n\\n      <div class=\\\"example-container container !important\\\">\\n        <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n            <input\\n              matInput\\n              placeholder=\\\"Enter your email\\\"\\n              name=\\\"email\\\"\\n              [(ngModel)]=\\\"model.email\\\"\\n              required\\n            />\\n          </mat-form-field>\\n        </div>\\n\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your password\\\"\\n            [type]=\\\"hide ? 'password' : 'text'\\\"\\n            required\\n            name=\\\"password\\\"\\n            [(ngModel)]=\\\"model.password\\\"\\n            autocomplete=\\\"on\\\"\\n          />\\n          <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n            hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n          }}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <button\\n          mat-raised-button\\n          [disabled]=\\\"!loginForm.valid\\\"\\n          class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Login\\n        </button>\\n\\n        <button mat-raised-button routerLink=\\\"/register\\\">Register</button>\\n\\n        <button mat-raised-button routerLink=\\\"/forgotpassword\\\">Forgot Password</button>\\n      </div>\\n\\n    </form>\\n    <br/>\\n</mat-card> -->\\n\\n<mat-tab-group dynamicHeight>\\n  <mat-tab label=\\\"Login\\\">\\n    <form\\n    #loginForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"login()\\\"\\n    style=\\\"padding: 20px !important\\\"\\n  >\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Login</mat-card-title>\\n\\n    <div class=\\\"example-container container !important\\\">\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your email\\\"\\n            name=\\\"email\\\"\\n            [(ngModel)]=\\\"model.email\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- <mat-form-field class=\\\"demo-full-width\\\">\\n          <input matInput placeholder=\\\"Email Address\\\" formControlName=\\\"emailFormControl\\\">\\n          <mat-error *ngIf=\\\"loginForm.get('emailFormControl').hasError('email') && loginForm.get('emailFormControl').hasError('pattern')\\\">\\n            Please enter a valid email address -->\\n            <!-- <mat-hint>Email must have this format: ****@domain.com</mat-hint> -->\\n          <!-- </mat-error>\\n          <mat-error *ngIf=\\\"loginForm.get('emailFormControl').hasError('required')\\\">\\n            Email is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field> -->\\n\\n      <mat-form-field>\\n        <input\\n          matInput\\n          placeholder=\\\"Enter your password\\\"\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\n          required\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"model.password\\\"\\n          autocomplete=\\\"on\\\"\\n        />\\n        <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n          hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n        }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <button\\n        mat-raised-button\\n        [disabled]=\\\"!loginForm.valid\\\"\\n        class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n        type=\\\"submit\\\"\\n        style=\\\"margin-right: 5px\\\"\\n      >\\n        Login\\n      </button>\\n\\n      <!-- <button mat-raised-button routerLink=\\\"/register\\\">Register</button> -->\\n\\n      <button mat-raised-button routerLink=\\\"/forgotpassword\\\">Forgot Password</button>\\n      <br/>\\n    </div>\\n  </form>\\n  </mat-tab>\\n  <!-- <mat-tab label=\\\"Register\\\">\\n    <register></register>\\n  </mat-tab> -->\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_service/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { MatDialog } from '@angular/material';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: \"login\",\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  model: any = {};\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog,\n    public fb: FormBuilder,\n  ) {\n    this.loginForm = fb.group({\n      passwordFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(125)\n      ]),\n      emailFormControl : new FormControl('', [\n        Validators.required,\n        Validators.email,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigateByUrl('/search');\n    }\n  }\n\n  authorizedDatabaseUsersMessage() {\n    var message = `We regret that this service is only available to authorized OHSAH SDS Database users, \\n\n    including all BC Health Authorities and their employees, and registered subscription clients. If you are an authorized database user, \\n\n    please provide a valid work email address.`;\n  }\n\n  login() {\n    this.authService.login(this.model.email, this.model.password).subscribe(\n      next => {\n        this.router.navigate(['/search']);\n        this.alertify.success('Logged in successfully');\n        this.dialog.closeAll();\n      },\n      error => {\n        this.alertify.error('Incorrect username or password');\n      }\n    );\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n  loggedInWindowsUser() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbWFudWZhY3R1cmVyL2NvbnRhY3RMb2NhdGlvbi9jb250YWN0TG9jYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"              <mat-form-field style=\\\"width:100%\\\">\\n              <mat-label>Contact Location</mat-label>\\n              <mat-select [formControl]=\\\"ContactLocationFormControl\\\" multiple [(value)]=\\\"selected\\\" (selectionChange)=\\\"onSelectContactLocation(selected)\\\" >\\n                <mat-optgroup *ngFor=\\\"let group of ContactLocationGroups\\\" [label]=\\\"group.name\\\"\\n                              [disabled]=\\\"group.disabled\\\">\\n                  <mat-option *ngFor=\\\"let location of group.contactLocation\\\" [value]=\\\"location.effectiveContactMethodFlag\\\">\\n                    {{location.viewValue}}\\n                  </mat-option>\\n                </mat-optgroup>\\n              </mat-select>\\n            </mat-form-field>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'contactLocation',\n  templateUrl: './contactLocation.component.html',\n  styleUrls: ['./contactLocation.component.css']\n})\nexport class ContactLocationComponent implements OnInit {\n\nmodel: any = {};\nlocationArray;\nselected;\n  constructor() { }\n\n  ContactLocationFormControl = new FormControl();\n  ContactLocationGroups: ContactLocationGroup[] = [\n    {\n      name: 'Contact Location',\n      contactLocation: [\n        {effectiveContactMethodFlag: '0', viewValue: 'Unknown'},\n        {effectiveContactMethodFlag: '1', viewValue: 'Canada'},\n        {effectiveContactMethodFlag: '2', viewValue: 'USA'},\n        {effectiveContactMethodFlag: '3', viewValue: 'Europe'},\n        {effectiveContactMethodFlag: '4', viewValue: 'Other'}\n      ]\n    }\n  ];\n\n onSelectContactLocation(selected) {\n    this.locationArray = selected.toString().split(',');\n    console.log(this.locationArray);\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n\n\nexport interface ContactLocationCategory {\n  effectiveContactMethodFlag: string;\n  viewValue: string;\n}\n\nexport interface ContactLocationGroup {\n  disabled?: boolean;\n  name: string;\n  contactLocation: ContactLocationCategory[];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbWFudWZhY3R1cmVyL2NyZWF0ZS1tYW51ZmFjdHVyZXIvY3JlYXRlLW1hbnVmYWN0dXJlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card>\\n  <form\\n    #createManufacturer=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"createManufacturers()\\\"\\n    id=\\\"createManufacturer\\\"\\n  >\\n    <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Create Manufacturer</mat-card-title\\n    >\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Company Name\\\"\\n        name=\\\"name\\\"\\n        [(ngModel)]=\\\"model.name\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input matInput placeholder=\\\"URL\\\" name=\\\"url\\\" [(ngModel)]=\\\"model.url\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"MSDS Url\\\"\\n        name=\\\"msdsUrl\\\"\\n        [(ngModel)]=\\\"model.msdsUrl\\\"\\n      />\\n    </mat-form-field>\\n\\n    <!-- <contactLocation></contactLocation>\\n    <br /> -->\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <mat-label>Contact Location</mat-label>\\n      <mat-select\\n        [formControl]=\\\"ContactLocationFormControl\\\"\\n        multiple\\n        [(value)]=\\\"selectedContactInfo\\\"\\n        [(ngModel)]=\\\"selectedContactInfo\\\"\\n        (selectionChange)=\\\"onSelectContactLocation(selectedContactInfo)\\\"\\n      >\\n        <mat-optgroup\\n          *ngFor=\\\"let group of ContactLocationGroups\\\"\\n          [label]=\\\"group.name\\\"\\n          [disabled]=\\\"group.disabled\\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let model of group.contactLocation\\\"\\n            [value]=\\\"model.value\\\"\\n          >\\n            {{ model.viewValue }}\\n          </mat-option>\\n        </mat-optgroup>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <textarea\\n        matInput\\n        placeholder=\\\"Notes\\\"\\n        name=\\\"notes\\\"\\n        [(ngModel)]=\\\"model.notes\\\"\\n      ></textarea>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Email\\\"\\n        name=\\\"contactEmail\\\"\\n        [(ngModel)]=\\\"model.contactEmail\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Form URL\\\"\\n        name=\\\"contactUrl\\\"\\n        [(ngModel)]=\\\"model.contactUrl\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Phone\\\"\\n        name=\\\"contactPhoneNumber\\\"\\n        [(ngModel)]=\\\"model.contactPhoneNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Fax\\\"\\n        name=\\\"contactFaxNumber\\\"\\n        [(ngModel)]=\\\"model.contactFaxNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <textarea\\n        matInput\\n        placeholder=\\\"Contact Details\\\"\\n        name=\\\"contactDetails\\\"\\n        [(ngModel)]=\\\"model.contactDetails\\\"\\n      ></textarea>\\n    </mat-form-field>\\n\\n    <button\\n      mat-raised-button\\n      style=\\\"margin-left: 5px;\\\"\\n      type=\\\"submit\\\"\\n      form=\\\"createManufacturer\\\"\\n    >\\n      Save\\n    </button>\\n\\n    <button\\n      style=\\\"margin-left: 5px;\\\"\\n      mat-raised-button\\n      [mat-dialog-close]=\\\"false\\\"\\n      color=\\\"warn\\\"\\n    >\\n      Cancel\\n    </button>\\n\\n  </form>\\n</mat-card>\\n\"","import { ManufacturerService } from 'src/app/_service/manufacturer.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'create-manufacturer',\n  templateUrl: './create-manufacturer.component.html',\n  styleUrls: ['./create-manufacturer.component.css']\n})\nexport class CreateManufacturerComponent implements OnInit {\n\nmodel: any = {};\nselected: number;\nselectedContactInfo: number;\n\nlocationArray: number;\n\nContactLocationFormControl = new FormControl();\n  ContactLocationGroups: ContactLocationGroup[] = [\n    {\n      name: 'Contact Location',\n      contactLocation: [\n        {value: '0', viewValue: 'Unknown'},\n        {value: '1', viewValue: 'Canada'},\n        {value: '2', viewValue: 'USA'},\n        {value: '3', viewValue: 'Europe'},\n        {value: '4', viewValue: 'Other'}\n      ]\n    }\n  ];\n\n   onSelectContactLocation(selectedContactInfo) {\n    this.locationArray = selectedContactInfo[0];\n    this.model.contactLocationId = this.locationArray;\n    console.log(this.locationArray);\n  }\n\n  constructor(\n    private manufacturerService: ManufacturerService,\n    private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n    console.log(this.selected);\n  }\n\ncreateManufacturers() {\n  return this.manufacturerService.createManufacturer(this.model).subscribe(next => {\n\n    this.model.contactLocationId = this.locationArray;\n      this.alertify.success('New Manufacturer has been created successfully');\n      this.router.navigate(['/create-products']);\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n}\n}\n\nexport interface ContactLocationCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ContactLocationGroup {\n  disabled?: boolean;\n  name: string;\n  contactLocation: ContactLocationCategory[];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbWFudWZhY3R1cmVyL2VkaXQtbWFudWZhY3R1cmVyL2VkaXQtbWFudWZhY3R1cmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n  <form\\n    #updateManufacturer=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"updateManufacturerInformation()\\\"\\n    id=\\\"updateManufacturer\\\"\\n  >\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Edit Manufacturer</mat-card-title\\n    >\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Company Name\\\"\\n        name=\\\"name\\\"\\n        [(ngModel)]=\\\"model.name\\\"  \\n      />\\n    </mat-form-field>\\n\\n    \\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input matInput placeholder=\\\"URL\\\" name=\\\"url\\\" [(ngModel)]=\\\"model.url\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"MSDS Url\\\"\\n        name=\\\"msdsUrl\\\"\\n        [(ngModel)]=\\\"model.msdsUrl\\\"\\n      />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <textarea\\n        matInput\\n        placeholder=\\\"Notes\\\"\\n        name=\\\"notes\\\"\\n        [(ngModel)]=\\\"model.notes\\\"\\n      ></textarea>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <mat-label>Contact Location</mat-label>\\n      <mat-select\\n        [formControl]=\\\"ContactLocationFormControl\\\"\\n        multiple\\n        [(value)]=\\\"selectedContactInfo\\\"\\n        [(ngModel)]=\\\"selectedContactInfo\\\"\\n        (selectionChange)=\\\"onSelectContactLocation(selectedContactInfo)\\\"\\n      >\\n        <mat-optgroup\\n          *ngFor=\\\"let group of ContactLocationGroups\\\"\\n          [label]=\\\"group.name\\\"\\n          [disabled]=\\\"group.disabled\\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let model of group.contactLocation\\\"\\n            [value]=\\\"model.value\\\"\\n          >\\n            {{ model.viewValue }}\\n          </mat-option>\\n        </mat-optgroup>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Email\\\"\\n        name=\\\"contactEmail\\\"\\n        [(ngModel)]=\\\"model.contactEmail\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Form URL\\\"\\n        name=\\\"contactUrl\\\"\\n        [(ngModel)]=\\\"model.contactUrl\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Phone\\\"\\n        name=\\\"contactPhoneNumber\\\"\\n        [(ngModel)]=\\\"model.contactPhoneNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Fax\\\"\\n        name=\\\"contactFaxNumber\\\"\\n        [(ngModel)]=\\\"model.contactFaxNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width:100%\\\">\\n      <textarea\\n        matInput\\n        placeholder=\\\"Contact Details\\\"\\n        name=\\\"contactDetails\\\"\\n        [(ngModel)]=\\\"model.contactDetails\\\"\\n      ></textarea>\\n    </mat-form-field>\\n\\n    <button\\n      mat-raised-button\\n      type=\\\"submit\\\"\\n      form=\\\"updateManufacturer\\\"\\n    >\\n      Save\\n    </button>\\n\\n    <button\\n      mat-raised-button\\n      [mat-dialog-close]=\\\"false\\\"\\n      color=\\\"warn\\\"\\n    >\\n      Back\\n    </button>\\n\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ManufacturerService } from 'src/app/_service/manufacturer.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Manufacturer } from 'src/app/_models/manufacturer';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'edit-manufacturer',\n  templateUrl: './edit-manufacturer.component.html',\n  styleUrls: ['./edit-manufacturer.component.css']\n})\nexport class EditManufacturerComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private manufacturerService: ManufacturerService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) { }\n\n  selectedContactInfo: number;\n  selected: number;\nlocationArray: number;\nmodel: any = {};\n\nContactLocationFormControl = new FormControl();\n  ContactLocationGroups: ContactLocationGroup[] = [\n    {\n      name: 'Contact Location',\n      contactLocation: [\n        {value: '0', viewValue: 'Unknown'},\n        {value: '1', viewValue: 'Canada'},\n        {value: '2', viewValue: 'USA'},\n        {value: '3', viewValue: 'Europe'},\n        {value: '4', viewValue: 'Other'}\n      ]\n    }\n  ];\n\n  onSelectContactLocation(selectedContactInfo) {\n    this.locationArray = selectedContactInfo[0];\n    this.model.contactLocationId = this.locationArray;\n    console.log(this.locationArray);\n  }\n\n  manufacturerId = this.passedData.selected;\n  // myList = this.passedData.row.myList;\n  // name = this.passedData.row.manufacturerName;\n  // contactLocationId = this.passedData.row.contactLocationId;\n  // url = this.passedData.row.url;\n  // msdsUrl = this.passedData.row.msdsUrl;\n  // contactEmail = this.passedData.row.contactEmail;\n  // contactUrl = this.passedData.row.contactUrl;\n  // contactPhoneNumber = this.passedData.row.contactPhoneNumber;\n  // contactFaxNumber = this.passedData.row.contactFaxNumber;\n  // contactDetails = this.passedData.row.contactDetails;\n  // notes = this.passedData.row.notes;\n  // effectiveContactMethodFlag = this.passedData.row.contactDetails;\n\n  // model = {\n  //   manufacturerId: null,\n  //   contactLocationId: null,\n  //   name: '',\n  //   url: '',\n  //   contactEmail: '',\n  //   msdsUrl: '',\n  //   contactUrl: '',\n  //   contactPhoneNumber: '',\n  //   contactFaxNumber: '',\n  //   contactDetails: '',\n  //   notes: '',\n  //   effectiveContactMethodFlag: ''\n  // };\n  \n// loadUser() {\n//   this.userService.getUser(this.route.snapshot.params['id']).subscribe((user: User) => {\n//     this.user = user;\n//     //console.log('This is coming from the loadUser() ' + this.user)\n//   },\n//   error => {\n//     this.alertify.error(error);\n//   });\n// }\n\n  ngOnInit() {\n    // console.log(\"EditManufacturerComponent: \" + this.myList);\n    console.log(\"EditManufacturerComponent: \" + this.manufacturerId);\n    this.getManufacturerId();\n\n  }\n\n\n  getManufacturerId(){\n    return this.manufacturerService.getByManufacturerId(this.manufacturerId).subscribe((manufacturer: Manufacturer) => {\n      \n      this.model = manufacturer; \n      console.log(\"getManufacturerId: \" + this.model.name);\n    });\n  }\n\n  updateManufacturerInformation(){\n    console.log(\"updateManufacturerInformation(): \" + this.model.name);\n    return this.manufacturerService.updateManufacturer(this.manufacturerId, this.model).subscribe(res => {\n\n      this.model.contactLocationId = this.locationArray;\n      this.alertify.success('Manufacturer has been updated');\n    }, error => {\n      this.alertify.error(error);\n    }); \n  }\n}\n\nexport interface ContactLocationCategory {\n  value: string;\n  viewValue: string;\n}\n\nexport interface ContactLocationGroup {\n  disabled?: boolean;\n  name: string;\n  contactLocation: ContactLocationCategory[];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbWFudWZhY3R1cmVyL21hbnVmYWN0dXJlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card>\\n  <mat-card-title>\\n    <!-- <span *ngIf=\\\"quiz.id\\\">Edit Quiz</span>\\n    <span *ngIf=\\\"!quiz.id\\\">New Quiz</span> -->\\n    <span>Company</span>\\n  </mat-card-title>\\n  <mat-card *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\n    <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\n    </mat-progress-spinner>\\n  </mat-card>\\n  <mat-list *ngFor=\\\"let company of companies\\\">\\n    <mat-list-item class=\\\"clickLink\\\" (click)=\\\"null\\\">{{company.name}}</mat-list-item>\\n    <mat-divider></mat-divider>\\n</mat-list>\\n<mat-card-content>\\n  <!-- <form>\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input matInput color=\\\"secondary\\\"/>\\n    </mat-form-field>\\n  </form> -->\\n</mat-card-content>\\n<mat-card-actions>\\n  <!-- <button  (click)=\\\"getCompanies()\\\" mat-raised-button>Get Company</button> -->\\n  <!-- <button *ngIf=\\\"quiz.id\\\" (click)=\\\"quiz = {}\\\" mat-button>NEW</button>\\n  <button *ngIf=\\\"quiz.id\\\" [routerLink]=\\\"['/question', quiz.id]\\\" mat-button>EDIT QUESTION</button>\\n  <button *ngIf=\\\"!quiz.id\\\" (click)=\\\"api.postQuiz(quiz)\\\" mat-button>POST</button> -->\\n</mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: 'app-manufacturer',\n  templateUrl: './manufacturer.component.html',\n  styleUrls: ['./manufacturer.component.css']\n})\nexport class ManufacturerComponent implements OnInit {\n  companies;\n  isLoading = false;\n  constructor(private api: ApiService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.api.getCompanies().subscribe(res => {\n      this.isLoading = false;\n      this.companies = res; });\n  }\n\n  getCompanies(searchString)\n  {\n    console.log(\"get companies \");\n    console.log(this.companies)  ;\n    return this.companies;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatToolbarModule,\n        MatListModule,\n        MatDividerModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n        MatTreeModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatSidenavModule,\n        \n    ],\n    exports: [\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatToolbarModule,\n        MatListModule,\n        MatDividerModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n        MatTreeModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatSidenavModule,\n    ]\n})\n\nexport class MaterialModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbmF2LXJlc3BvbnNpdmUvbmF2LXJlc3BvbnNpdmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  nav-responsive works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-responsive',\n  templateUrl: './nav-responsive.component.html',\n  styleUrls: ['./nav-responsive.component.css']\n})\nexport class NavResponsiveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<mat-toolbar >\\n    <button mat-button routerLink=\\\"/app-product\\\" >SAFETY DATA SHEETS</button>\\n  <button mat-button routerLink=\\\"/app-product\\\">Search</button>\\n  <button mat-button routerLink=\\\"/request\\\">SDS Request</button>\\n \\n \\n  <!-- <button mat-button routerLink=\\\"/app-manufacturer\\\">Company</button> -->\\n  \\n  <button *ngIf=\\\"loggedIn()\\\" mat-button [matMenuTriggerFor]=\\\"admin\\\">Administration</button>\\n<mat-menu #admin=\\\"matMenu\\\">\\n  <button mat-menu-item>Sites</button>\\n  <button mat-menu-item>Companies</button>\\n  <button mat-menu-item>Products</button>\\n  <button mat-menu-item routerLink=\\\"/users\\\">Users</button>\\n  <button mat-menu-item>Reports</button>\\n</mat-menu>\\n\\n  <span style=\\\"flex: 1 1 auto;\\\"></span>\\n  <button *ngIf=\\\"loggedIn()\\\" mat-button>{{authService.decodedToken?.email}} </button>\\n \\n  <button *ngIf=\\\"!loggedIn()\\\" mat-button routerLink=\\\"/login\\\">Login</button>\\n  <button *ngIf=\\\"!loggedIn()\\\" mat-button routerLink=\\\"/register\\\">Register</button>\\n  <button *ngIf=\\\"loggedIn()\\\" mat-button (click)=\\\"logout()\\\">Logout</button>\\n \\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item>\\n      <mat-icon>link</mat-icon>\\n      <span>SDS Link</span>\\n    </button>\\n    <button mat-menu-item >\\n      <mat-icon>voicemail</mat-icon>\\n      <span>Product Page</span>\\n    </button>\\n    <button mat-menu-item>\\n      <mat-icon>print</mat-icon>\\n      <span>Print Label</span>\\n    </button>\\n  </mat-menu>\\n  <button mat-button >Help</button>\\n  <button mat-button >Contact Us</button>\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n  <!-- <button *ngIf=\\\"!auth.isAuthenticated\\\" mat-button routerLink=\\\"/register\\\">Register</button>\\n  <button *ngIf=\\\"!auth.isAuthenticated\\\" mat-button routerLink=\\\"/login\\\">Login</button>\\n  <button *ngIf=\\\"auth.isAuthenticated\\\" mat-button (click)=\\\"auth.logout()\\\">Logout</button> -->\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_service/auth.service';\nimport { AlertifyService } from '../_service/alertify.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private http: HttpClient,\n    public authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    this.authService.logout();\n    this.alertify.message('Logged out Successfully');\n    this.router.navigate(['/app-product']);\n    console.log('Logged out successfully');\n  }\n}\n","module.exports = \"/* .mat-list-base .mat-list-item .mat-list-item-content, .mat-list-base, .mat-list-option, .mat-list-item-content\\n{\\n    display: inline !important;\\n} */\\n\\n.mat-list-text{\\n    display: inline !important;\\n}\\n\\n.footer{\\nposition: fixed;\\n   left: 0;\\n   bottom: 0;\\n   width: 100%;\\n   border-top: 1px solid #bbb;\\n   background: #e8e8e8;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9uYXZpZ2F0aW9uL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUg7SUFDSSwwQkFBMEI7QUFDOUI7O0FBRUE7QUFDQSxlQUFlO0dBQ1osT0FBTztHQUNQLFNBQVM7R0FDVCxXQUFXO0dBQ1gsMEJBQTBCO0dBQzFCLG1CQUFtQjtBQUN0QiIsImZpbGUiOiJhcHAvbmF2aWdhdGlvbi9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSAubWF0LWxpc3QtaXRlbS1jb250ZW50LCAubWF0LWxpc3QtYmFzZSwgLm1hdC1saXN0LW9wdGlvbiwgLm1hdC1saXN0LWl0ZW0tY29udGVudFxue1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xufSAqL1xuXG4ubWF0LWxpc3QtdGV4dHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbn1cblxuLmZvb3RlcntcbnBvc2l0aW9uOiBmaXhlZDtcbiAgIGxlZnQ6IDA7XG4gICBib3R0b206IDA7XG4gICB3aWR0aDogMTAwJTtcbiAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYmJiO1xuICAgYmFja2dyb3VuZDogI2U4ZThlODtcbn1cblxuIl19 */\"","module.exports = \"  <div class=\\\"footer\\\">\\n    <ul style=\\\"list-style-type:none;\\\">\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/search\\\">Search SDS DB</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/request\\\">SDS Request</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/contact-us\\\">Help</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/inventory-product\\\">Inventory</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/authority\\\">Sites</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/users\\\">Users</li>\\n      <li style=\\\"cursor: pointer;\\\" routerLink=\\\"/report\\\">Reports</li>\\n    </ul>\\n    <p style=\\\"font-size: 13px; text-align: center; padding-bottom: 8px\\\">© {{getCurrentDate()}} - Provincial Health Services Authority - OHS Solutions (IMITS)</p>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getCurrentDate() {\n    return new Date().getFullYear();\n  }\n}\n","module.exports = \"a {\\n    text-decoration: none;\\n    color: white;\\n}\\na:hover, \\na:active {\\n    color: lightgrey;\\n}\\n.navigation-items {\\n    list-style: none;\\n    padding: none;\\n    margin: none;\\n}\\n.nav-caption {\\n    display: inline-block;\\n    padding-left: 6px;\\n}\\n.tooltip {\\n    position: relative;\\n    display: inline-block;\\n    border-bottom: 1px dotted black;\\n  }\\n.tooltip .tooltiptext {\\n    visibility: hidden;\\n    width: 120px;\\n    background-color: #555;\\n    color: #fff;\\n    text-align: center;\\n    border-radius: 6px;\\n    padding: 5px 0;\\n    position: absolute;\\n    z-index: 1;\\n    bottom: 125%;\\n    left: 50%;\\n    margin-left: -60px;\\n    opacity: 0;\\n    transition: opacity 0.3s;\\n  }\\n.tooltip .tooltiptext::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 100%;\\n    left: 50%;\\n    margin-left: -5px;\\n    border-width: 5px;\\n    border-style: solid;\\n    border-color: #555 transparent transparent transparent;\\n  }\\n.tooltip:hover .tooltiptext {\\n    visibility: visible;\\n    opacity: 1;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9uYXZpZ2F0aW9uL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixZQUFZO0FBQ2hCO0FBQ0E7O0lBRUksZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixpQkFBaUI7QUFDckI7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsK0JBQStCO0VBQ2pDO0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixVQUFVO0lBQ1Ysd0JBQXdCO0VBQzFCO0FBRUE7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsc0RBQXNEO0VBQ3hEO0FBRUE7SUFDRSxtQkFBbUI7SUFDbkIsVUFBVTtFQUNaIiwiZmlsZSI6ImFwcC9uYXZpZ2F0aW9uL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5hOmhvdmVyLCBcbmE6YWN0aXZlIHtcbiAgICBjb2xvcjogbGlnaHRncmV5O1xufVxuXG4ubmF2aWdhdGlvbi1pdGVtcyB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiBub25lO1xuICAgIG1hcmdpbjogbm9uZTtcbn1cblxuLm5hdi1jYXB0aW9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XG59XG5cbi50b29sdGlwIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgYmxhY2s7XG4gIH1cbiAgXG4gIC50b29sdGlwIC50b29sdGlwdGV4dCB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgcGFkZGluZzogNXB4IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAxMjUlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTYwcHg7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG4gIH1cbiAgXG4gIC50b29sdGlwIC50b29sdGlwdGV4dDo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTAwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC01cHg7XG4gICAgYm9yZGVyLXdpZHRoOiA1cHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6ICM1NTUgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gIH1cbiAgXG4gIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxO1xuICB9Il19 */\"","module.exports = \"<mat-toolbar  color=\\\"primary\\\">\\n    <div fxHide.gt-xs>\\n        <button mat-icon-button (click)=\\\"onToggleSidenav()\\\">\\n            <mat-icon>menu</mat-icon>\\n        </button>\\n    </div>\\n    <div><a class=\\\"title-menu\\\" routerLink=\\\"/search\\\">SDS</a></div>\\n    <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n        <ul fxLayout fxLayoutGap=\\\"10px\\\" class=\\\"navigation-items\\\">\\n            <li><a routerLink=\\\"/search\\\" class=\\\"title-menu\\\">Search</a></li>\\n            <li><a *ngIf=\\\"loggedIn()\\\" routerLink=\\\"/request\\\" class=\\\"title-menu\\\">Request</a></li>\\n            <!-- <li *appHasRole=\\\"['Super Admin', 'Site Admin']\\\" routerLinkActive=\\\"active\\\"> -->\\n            <li *ngIf=\\\"loggedIn()\\\" class=\\\"title-menu\\\" style=\\\"cursor: pointer;\\\">\\n                <a [matMenuTriggerFor]=\\\"admin\\\"> \\n                    <!-- <button *ngIf=\\\"loggedIn()\\\" mat-button [matMenuTriggerFor]=\\\"admin\\\">Administration</button> -->\\n                    Administration\\n                </a>\\n                <mat-menu #admin=\\\"matMenu\\\">\\n                    <button mat-menu-item class=\\\"sub-title\\\" routerLink=\\\"/authority\\\">Sites</button>\\n                    <button mat-menu-item class=\\\"sub-title\\\" style=\\\"cursor: pointer;\\\" routerLink=\\\"/authorityTree\\\">Sites2</button>\\n                    <!-- <button mat-menu-item class=\\\"sub-title\\\">Companies</button> -->\\n                    <!-- <button mat-menu-item class=\\\"sub-title\\\" routerLink=\\\"/inventory-product\\\">Products</button> -->\\n                    <button mat-menu-item class=\\\"sub-title\\\" style=\\\"cursor: pointer;\\\" routerLink=\\\"/inventory-product\\\">Inventory</button>\\n                    <button mat-menu-item class=\\\"sub-title\\\" style=\\\"cursor: pointer;\\\" routerLink=\\\"/users\\\">Users</button>\\n                    <button mat-menu-item class=\\\"sub-title\\\" style=\\\"cursor: pointer;\\\" routerLink=\\\"/report\\\">Reports</button>\\n                </mat-menu>\\n            </li>\\n            <!-- <li><a routerLink=\\\"/help\\\" class=\\\"title-menu\\\" style=\\\"cursor: pointer;\\\">Help</a></li> -->\\n            <li><a routerLink=\\\"/contact-us\\\" class=\\\"title-menu\\\" style=\\\"cursor: pointer;\\\">Help</a></li>\\n            <!-- <li><a routerLink=\\\"/login\\\">Login</a></li> -->\\n            <!-- <li *ngIf=\\\"loggedIn()\\\" ><a>{{authService.decodedToken?.email}}</a></li> -->\\n            <li *ngIf=\\\"loggedIn() && isLoggedInUser()\\\" style=\\\"cursor: pointer;\\\">\\n                    <a [matMenuTriggerFor]=\\\"admin\\\"> \\n                        {{authService.decodedToken?.email}}\\n                    </a>\\n                    <mat-menu #admin=\\\"matMenu\\\">\\n                        <!-- <button mat-menu-item [routerLink]=\\\"['/user-profile/', authService.decodedToken?.nameid]\\\">Your Profile</button> -->\\n                        <button mat-menu-item (click)=\\\"openUserProfileModalWindow(authService.decodedToken?.nameid)\\\">Your Profile</button>\\n                    </mat-menu>\\n            </li>\\n            <li *ngIf=\\\"loggedInWindowsUser() && isWindowsUser()\\\" style=\\\"cursor: pointer;\\\">\\n                <a [matMenuTriggerFor]=\\\"admin\\\"> \\n                    {{authService.decodedToken?.given_name}}\\n                </a>\\n                <mat-menu #admin=\\\"matMenu\\\">\\n                    <!-- <button mat-menu-item [routerLink]=\\\"['/user-profile/', authService.decodedToken?.nameid]\\\">Your Profile</button> -->\\n                    <button mat-menu-item (click)=\\\"openUserProfileModalWindow(authService.decodedToken?.nameid)\\\">Your Profile</button>\\n                </mat-menu>\\n        </li>\\n            <li style=\\\"cursor: pointer;\\\" *ngIf=\\\"!loggedIn()\\\"  class=\\\"title-menu\\\"><a (click)=\\\"openLoginModalWindow()\\\">Login</a></li>\\n            <!-- <li *ngIf=\\\"!loggedIn()\\\" class=\\\"title-menu\\\"><a routerLink=\\\"/register\\\">Register</a></li> -->\\n            <!-- <li> <div class=\\\"tooltip\\\">  <span class=\\\"tooltiptext\\\">For mobile testing</span>\\n                <img *ngIf=\\\"loggedIn()\\\" style=\\\"width: 50px;\\\" src=\\\"assets/qrCode/qrCode.png\\\"></div></li> -->\\n            <li style=\\\"cursor: pointer;\\\" *ngIf=\\\"loggedIn()\\\" class=\\\"title-menu\\\"  (click)=\\\"logout()\\\">Logout</li>\\n        </ul>\\n    </div>\\n</mat-toolbar>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../../_service/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../../_service/alertify.service';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { MatDialog } from '@angular/material';\nimport { UserProfileComponent } from 'src/app/users/user-profile/user-profile.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() sidenavToggle = new EventEmitter<void>();\n\n  constructor(\n    private http: HttpClient,\n    public authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {}\n\n  onToggleSidenav() {\n    this.sidenavToggle.emit();\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  // loggedInAdmin() {\n  //   if (this.authService.decodedToken.role === 'Site Admin' || this.authService.decodedToken.role === 'Super Admin') {\n  //     return this.authService.loggedIn();\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  loggedInWindowsUser() {\n    return this.authService.loggedInWindowsUser();\n  }\n\n  isWindowsUser() {\n    if (this.authService.decodedToken.actort === 'True') {\n      return true;\n    }\n    if (this.authService.decodedToken.actort === 'False') {\n      return false;\n    }\n  }\n\n  isLoggedInUser() {\n    if (this.authService.decodedToken.primarysid === 'True') {\n      return true;\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n    this.alertify.message('Logged out Successfully');\n    this.router.navigate(['/search']);\n  }\n\n  openUserProfileModalWindow(id) {\n    const dialogRef = this.dialog.open(UserProfileComponent, {\n      width: '500px',\n      data: {\n        user: id\n      }\n    });\n  }\n\n  openLoginModalWindow() {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '500px'\n    });\n  }\n}\n","module.exports = \"a {\\n    text-decoration: none;\\n    color: white;\\n}\\na:hover, \\na:active {\\n    color: lightgrey;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9uYXZpZ2F0aW9uL3NpZGVuYXYtbGlzdC9zaWRlbmF2LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixZQUFZO0FBQ2hCO0FBQ0E7O0lBRUksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6ImFwcC9uYXZpZ2F0aW9uL3NpZGVuYXYtbGlzdC9zaWRlbmF2LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5hOmhvdmVyLCBcbmE6YWN0aXZlIHtcbiAgICBjb2xvcjogbGlnaHRncmV5O1xufVxuXG4iXX0= */\"","module.exports = \"<mat-nav-list>\\n    <mat-list-item>\\n        <button mat-icon-button (click)=\\\"onClose()\\\">\\n            <mat-icon>eject</mat-icon>\\n            <span>Logout</span>\\n            <!-- <button *ngIf=\\\"loggedIn()\\\" mat-button (click)=\\\"logout()\\\">Logout</button> -->\\n        </button>\\n    </mat-list-item>\\n    <!-- <a mat-list-item routerLink=\\\"/register\\\" (click)=\\\"onClose()\\\">\\n        <mat-icon>face</mat-icon><span class=\\\"nav-caption\\\">Register</span>\\n    </a> -->\\n    <a mat-list-item routerLink=\\\"/login\\\" (click)=\\\"onClose()\\\">\\n        <mat-icon>input</mat-icon>\\n        <span>Login</span>\\n    </a>\\n    <a mat-list-item routerLink=\\\"/app-product\\\" (click)=\\\"onClose()\\\">\\n        <mat-icon>search</mat-icon>\\n        <span>Product</span>\\n    </a>\\n\\n</mat-nav-list>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.css']\n})\nexport class SidenavListComponent implements OnInit {\n  @Output() closeSidenav = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClose() {\n    this.closeSidenav.emit();\n  }\n\n}\n","module.exports = \"<mat-tab-group>\\n  <mat-tab label=\\\"Orders\\\">\\n\\n    <div class=\\\"order-actions\\\">\\n      <button mat-button color=\\\"primary\\\">DELETE</button>\\n      <button mat-button color=\\\"primary\\\">ARCHIVE</button>\\n    </div>\\n    <div class=\\\"order-container\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort multiTemplateDataRows>\\n\\n        <ng-container matColumnDef=\\\"action\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            <mat-checkbox (change)=\\\"selectAll()\\\"></mat-checkbox>\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <mat-checkbox [checked]=\\\"element.isChecked\\\"></mat-checkbox>\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"orderNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Order# </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{element.orderNumber}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"orderDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{element.orderDate | date:'MM/dd/yy'}}\\n            </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n\\n        <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{element.description}}\\n            </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"total\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{element.total | currency}}\\n            </td>\\n            <td mat-footer-cell *matFooterCellDef>$100.00</td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;sticky:true;\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row;columns:displayedColumns;\\\"></tr>\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky:true;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <mat-paginator\\n      [length]=\\\"length\\\"\\n      [pageSize]=\\\"pageSize\\\"\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n      (page)=\\\"onPageChange($event)\\\"\\n    ></mat-paginator>\\n\\n  </mat-tab>\\n  <mat-tab label=\\\"Shipments\\\">\\n    <ng-template matTabContent>\\n      <p>Lazy loaded</p>\\n    </ng-template>\\n  </mat-tab>\\n  <mat-tab label=\\\"Archived\\\">\\n    <ng-template matTabContent>\\n      <p>Really old orders here.</p>\\n    </ng-template>\\n  </mat-tab>\\n</mat-tab-group>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatTableDataSource } from '@angular/material';\nimport { PageEvent } from '@angular/material';\n\nconst ELEMENT_DATA = [\n  {\n    orderDate:new Date(),\n    orderNumber:100,\n    total:29.99,\n    description:'2lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:101,\n    total:39.99,\n    description:'5lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:102,\n    total:59.99,\n    description:'1lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:100,\n    total:29.99,\n    description:'2lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:101,\n    total:39.99,\n    description:'5lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:102,\n    total:59.99,\n    description:'1lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:100,\n    total:29.99,\n    description:'2lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:101,\n    total:39.99,\n    description:'5lbs of tuna',\n    isChecked:false\n  },\n  {\n    orderDate:new Date(),\n    orderNumber:102,\n    total:59.99,\n    description:'1lbs of tuna',\n    isChecked:false\n  },\n];\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  // styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n  displayedColumns:string[] = ['action', 'orderNumber', 'orderDate', 'description', 'total'];\n  dataSource:MatTableDataSource<object>;\n\n  length = 100;\n  pageIndex = 0;\n  pageSize = 10;\n  pageSizeOptions = [1,2,5,10];\n\n  @ViewChild(MatSort) sort:MatSort;\n\n  pageEvent:PageEvent;\n\n  constructor() { }\n\n  onPageChange(e) {\n    this.pageIndex = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.loadData(this.pageIndex, this.pageSize);\n  }\n\n  loadData(pageIndex, pageSize)\n  {\n    this.dataSource = new MatTableDataSource<object>(ELEMENT_DATA.slice(pageIndex, pageIndex + pageSize));\n  }\n\n  ngOnInit() {\n    this.loadData(0, this.pageSize);\n    this.dataSource.sort = this.sort;\n  }\n\n  selectAll() {\n    for(var elm of ELEMENT_DATA)\n    {\n      elm.isChecked = !elm.isChecked;\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Page not found</h2>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcHJvZHVjdC1kZXRhaWwvcHJvZHVjdC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Product Details</mat-card-title>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput placeholder=\\\"Cas Number\\\" [(ngModel)]=\\\"product.CasNumber\\\" name=\\\"CasNumber\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput placeholder=\\\"Product Alias\\\" [(ngModel)]=\\\"product.ProductAlias\\\" name=\\\"ProductAlias\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product.ProductName\\\" name=\\\"ProductName\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput  placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"product.ProductCode\\\"\\n          name=\\\"ProductCode\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput placeholder=\\\"Additional Supplier\\\" [(ngModel)]=\\\"product.AdditionalSupplier\\\" name=\\\"AddtionalSupplier\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from \"../api.service\";\nimport { TreeCheckboxComponent} from '../tree-checkbox/tree-checkbox.component';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  @Input() row;\n  @Input() rowSelected;\n  product = {\n    ProductName: '',\n    ProductCode: '',\n    ManufacturerName: '',\n    CasNumber: '',\n    ProductAlias: '',\n    AdditionalSupplier: ''\n  };\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.api.productSelected.subscribe(\n      (product) => {\n        this.product = product\n        //console.log('product is: ' + this.product.productName)\n      }\n      );\n    console.log(\"in product details, selected product name\" + this.product.ProductName);\n    //rowSelected will tell us if a row has been clicked in parent component product-list,\n    // only set value if a row selected\n    //console.log(\"product details ngOnInit value of rowSelected \" + this.rowSelected);\n    // if (this.rowSelected){\n    //   this.api.productSelected.subscribe(product => this.product = product);\n    //   console.log(\"selected product name\" + this.product.productName);\n    // }\n     \n     \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcHJvZHVjdC1sYWJlbC9wcm9kdWN0LWxhYmVsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-title>SDS Label</mat-card-title>\\n  <mat-horizontal-stepper linear #stepper>\\n      <div *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n          <mat-progress-bar color=\\\"primary\\\"  mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        </div>\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\" errorMessage=\\\"Name is required.\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Select Dimensions</ng-template>\\n\\n          \\n            <mat-radio-group class=\\\"person-radio-group\\\" formControlName=\\\"averyDimensions\\\" [(ngModel)]=\\\"selectedAveryDimension\\\">\\n              <mat-radio-button\\n              name=\\\"{{dimension.name}}\\\"\\n              (change)=\\\"onSelectedAveryDimensions($event)\\\" class=\\\"person-radio-button\\\" *ngFor=\\\"let dimension of dimensions\\\" [value]=\\\"dimension.averyId\\\" required><br/>\\n                 <b>{{dimension.name}}</b><br/><br/>  <img style=\\\"margin-left: 20px; width: 60px; padding-left: 10px; margin-right: 10px;\\\"\\n                 src=\\\"assets/dimensions/{{ dimension.averyDimension }}.png\\\">\\n              </mat-radio-button>\\n            </mat-radio-group> \\n          <div>\\n            <br/>\\n            <br/>\\n            <br/>\\n            <button mat-raised-button matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\" errorMessage=\\\"Address is required.\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Statements & Pictograms </ng-template>\\n<!-- \\n          <div *ngFor=\\\"let model of pictograms\\\" style=\\\"display: inline !important;\\\">\\n              <mat-checkbox\\n                multiple\\n                [value]=\\\"model.selected\\\"\\n                #checkbox=\\\"matCheckbox\\\"\\n                [checked]=\\\"model.selected\\\"\\n                (click)=\\\"onSelectedPictograms(checkbox, model)\\\"\\n                ><img style=\\\"width: 60px; padding-left: 10px; margin-right: 10px;\\\"\\n                src=\\\"assets/pictograms/{{ model.pictogramName }}.png\\\"></mat-checkbox>\\n            </div> -->\\n\\n\\n                    <form [formGroup]=\\\"pictogramFormGroup\\\" (ngSubmit)=\\\"null\\\">\\n            \\n                        <div *ngFor=\\\"let pictogram of pictograms; let i = index\\\" style=\\\"display: inline !important;\\\">\\n                            <mat-checkbox class=\\\"example-margin\\\" \\n                            (change)=\\\"onChangePictogram($event)\\\" [value]=\\\"pictogram.pictogramName\\\">\\n                            <img style=\\\"width: 60px; padding-left: 10px; margin-right: 10px;\\\"\\n                            src=\\\"assets/pictograms/{{ pictogram.pictogramName }}.png\\\"></mat-checkbox>\\n                        </div>\\n            \\n                    </form>\\n            <br/>\\n            <br/>\\n\\n            <mat-radio-group class=\\\"person-radio-group\\\" formControlName=\\\"signalWordVal\\\" [(ngModel)]=\\\"selectedAveryDimension\\\">\\n                <mat-radio-button\\n                name=\\\"{{signalWord.signalName}}\\\"\\n                (change)=\\\"onSelectedSignalWords($event)\\\" class=\\\"person-radio-button\\\" *ngFor=\\\"let signalWord of signalWords\\\" [value]=\\\"signalWord.signalId\\\" required>\\n                   <b>{{signalWord.signalName}}</b>\\n                </mat-radio-button>\\n              </mat-radio-group>\\n              <br/>\\n              <br/>\\n              <br/>\\n                         \\n          <mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 100%\\\">\\n              <textarea matInput placeholder=\\\"Safe Handling Instructions\\\"  rows=\\\"5\\\" cols=\\\"40\\\"  [(ngModel)]=\\\"safeHandlingInstructions\\\" name=\\\"safeHandlingInstructions\\\" formControlName=\\\"safeHandlingInstructions\\\" required></textarea>\\n          </mat-form-field>\\n          \\n          <br/>\\n          <br/>\\n\\n          <div>\\n            <button style=\\\"margin-right: 5px\\\" mat-raised-button matStepperPrevious>Back</button>\\n            <button mat-raised-button matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step>\\n        <ng-template matStepLabel>Done</ng-template>\\n        <br/>\\n        <b>Please click submit to view a copy of your label(s).</b>\\n        <br/>\\n        <br/>\\n        <br/>\\n        <div>\\n          <button style=\\\"margin-right: 5px\\\" mat-raised-button matStepperPrevious>Back</button>\\n          <!-- <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button> -->\\n          <button style=\\\"margin-right: 5px\\\" mat-raised-button (click)=\\\"generateLabel()\\\"><a [target]=\\\"'_blank'\\\">Submit</a></button>\\n        </div>\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n\\n    <br/> <br/>\\n        <mat-card style=\\\"border: 2px solid black; border-radius: 19px;\\\">\\n          <div style=\\\"border: 2px dashed red; border-radius: 15px; padding: 15px;\\\">\\n      <mat-card-header><u>Label Preview</u></mat-card-header>\\n        <p *ngIf=\\\"imageBind\\\"><b><img *ngFor=\\\"let item of imageBind\\\" style=\\\"width: 60px; padding-left: 10px; margin-right: 10px;\\\"\\n          src=\\\"assets/pictograms/{{ item }}.png\\\"></b></p>\\n        <p><b>Product Name:</b> {{productName}}</p>\\n        <p *ngIf=\\\"signalWord\\\"><b>Signal Word: </b> <span style=\\\"color:red; font: bold\\\">{{signalWord}}</span></p>\\n        <p><b>Supplier/Manufacturer:</b> {{mfg_detail}}</p>\\n        <p><b>Product Code:</b> {{productCode}}</p>\\n        <p *ngIf=\\\"safeHandlingInstructions\\\"><b>Safe Handling Instructions: {{safeHandlingInstructions}}</b> </p>\\n        </div>\\n    </mat-card>\\n  </mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatCheckbox,\n  MatRadioChange\n} from '@angular/material';\nimport { LabelService } from '../_service/label.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport { Whmis2015Service } from '../_service/whmis2015.service';\nimport { AlertifyService } from '../_service/alertify.service';\n\n@Component({\n  selector: 'app-product-label',\n  templateUrl: './product-label.component.html',\n  styleUrls: ['./product-label.component.css']\n})\nexport class ProductLabelComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    private labelService: LabelService,\n    private formBuilder: FormBuilder,\n    private whmis2015Service: Whmis2015Service,\n    private alertify: AlertifyService\n  ) {}\n  \n  isLoading = false;\n\n  pictograms: any = [];\n  pictogramResponse: any;\n  selected: any;\n  // pictograms: any = [];\n  pictogramArray: number;\n  model: any = {};\n\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  averyCheckGroup: FormGroup;\n  pictogramFormGroup: FormGroup;\n\n  productId = this.passedData.productId;\n  productName = this.passedData.productName;\n  productCode = this.passedData.productCode;\n  mfg_detail = this.passedData.mfg_detail;\n  firstCtrl;\n  safeHandlingInstructions;\n  imageBind: any = [];\n  test: any = [];\n  selectedAveryDimension;\n  width;\n  height;\n  rows;\n  columns;\n  margins;\n  labelPerPage;\n  signalWord;\n  averyName;\n\n\n  //  selectedAveryDimension: number;\n  //  AveryDimensionArray: number;\n  //  securityGroupChecked = false;\n\n  //  AveryDimensionsFormControl = new FormControl();\n  // AveryDimensionGroups: AveryDimensionsGroup[] = [\n  //   {\n  //     name: 'Avery Dimensions',\n  //     dimension: [\n  //       { id: '0', width: '100', height: '200' },\n  //       { id: '1', width: '200', height: '300' },\n  //     ]\n  //   }\n  // ];\n\n  // onSelectMSDSOrigin(selected) {\n  //   this.AveryDimensionArray = selected.toString().split(',');\n  //   if (this.AveryDimensionArray == 0) {\n  //     this.securityGroupChecked = true;\n\n  //     // this.selected == this.originFlag;\n  //     // this.originFlag == this.selected\n  //     // console.log(\"this is true: \" + this.selected );\n  //     // console.log(\"this is .model.originFlag: \" + this.originFlag );\n  //   }\n  //   // console.log(\"MSDSOriginArray: \" + this.MSDSOriginArray);\n  // }\n\n  dimensions: AveryDimensions[] = [\n    {\n      averyId: 1,\n      name: 'Avery 5160',\n      width: '2',\n      height: '200',\n      averyDimension: '5160'\n    },\n    {\n      averyId: 2,\n      name: 'Avery 5164',\n      width: '4',\n      height: '200',\n      averyDimension: '5164'\n    },\n    {\n      averyId: 3,\n      name: 'Avery 5168',\n      width: '10',\n      height: '200',\n      averyDimension: '5168'\n    },\n    {\n      averyId: 4,\n      name: 'Avery 8168',\n      width: '100',\n      height: '200',\n      averyDimension: '8168'\n    },\n    {\n      averyId: 5,\n      name: 'Avery 60502',\n      width: '100',\n      height: '200',\n      averyDimension: '60502'\n    },\n    {\n      averyId: 6,\n      name: 'Avery 60503',\n      width: '100',\n      height: '200',\n      averyDimension: '60503'\n    },\n    {\n      averyId: 7,\n      name: 'Avery 60506',\n      width: '100',\n      height: '200',\n      averyDimension: '60506'\n    }\n  ];\n\n  signalWords: SignalWords[] = [\n    {\n      signalId: 1,\n      signalName: 'Danger'\n    },\n    {\n      signalId: 2,\n      signalName: 'Warning'\n    },\n    {\n      signalId: 3,\n      signalName: 'None'\n    },\n  ];\n  checked: Boolean;\n\n  ngOnInit() {\n    this.firstFormGroup = this.formBuilder.group({\n      // firstCtrl: ['', Validators.required],\n      averyDimensions: ['', Validators.required],\n    });\n    this.secondFormGroup = this.formBuilder.group({\n      safeHandlingInstructions: ['', Validators.required],\n      signalWordVal: ['', Validators.required]\n    });\n\n    this.pictogramFormGroup = this.formBuilder.group({\n      pictograms: this.formBuilder.array([])\n    });\n\n    setTimeout((res) => {\n      this.pictograms = this.pictogramResponse;\n    });\n    // console.log(this.dimensions);\n\n    this.pictogramReferences();\n\n    console.log(this.selectedAveryDimension);\n  }\n\n  onChangePictogram($event) {\n    const pictograms = <FormArray>this.pictogramFormGroup.get('pictograms') as FormArray;\n\n    if ($event.checked) {\n      pictograms.push(new FormControl($event.source.value));\n    } else {\n      const i = pictograms.controls.findIndex(x => x.value === $event.source.value);\n      pictograms.removeAt(i);\n    }\n\n    // this.model.pictogramId = pictograms.value;\n    this.imageBind = pictograms.value;\n  }\n\n  onSelectedAveryDimensions($event: MatRadioChange) {\n    this.selectedAveryDimension = $event.source.value;\n\n    if ($event.source.value === 1) {\n      this.averyName = '5160';\n      this.width = 100;\n      this.height = 200;\n      this.rows = 10;\n      this.columns = 3;\n      this.margins = 3;\n      this.labelPerPage = 30;\n    }\n    if ($event.source.value === 2) {\n      this.averyName = '5164';\n      this.width = 200;\n      this.height = 200;\n      this.rows = 3;\n      this.columns = 2;\n      this.margins = 5;\n      this.labelPerPage = 6;\n    }\n    if ($event.source.value === 3) {\n      this.averyName = '5168';\n      this.width = 40;\n      this.height = 200;\n      this.rows = 2;\n      this.columns = 2;\n      this.margins = 5;\n      this.labelPerPage = 4;\n    }\n    if ($event.source.value === 4) {\n      this.averyName = '8168';\n      this.width = 20;\n      this.height = 200;\n      this.rows = 2;\n      this.columns = 2;\n      this.margins = 5;\n      this.labelPerPage = 4;\n    }\n    if ($event.source.value === 5) {\n      this.averyName = '60502';\n      this.width = 60;\n      this.height = 200;\n      this.rows = 2;\n      this.columns = 1;\n      this.margins = 5;\n      this.labelPerPage = 2;\n    }\n    if ($event.source.value === 6) {\n      this.averyName = '60503';\n      this.width = 25;\n      this.height = 200;\n      this.rows = 2;\n      this.columns = 2;\n      this.margins = 5;\n      this.labelPerPage = 4;\n    }\n    if ($event.source.value === 7) {\n      this.averyName = '60506';\n      this.width = 12;\n      this.height = 200;\n      this.rows = 4;\n      this.columns = 3;\n      this.margins = 5;\n      this.labelPerPage = 12;\n    }\n    console.log('This is a width: ' + this.width);\n  }\n\n  onSelectedSignalWords($event: MatRadioChange) {\n\n    if ($event.source.value === 1) {\n      this.signalWord = 'Danger';\n    }\n    if ($event.source.value === 2) {\n      this.signalWord = 'Warning';\n    }\n    if ($event.source.value === 3) {\n      this.signalWord = '';\n      this.checked = true;\n    }\n  }\n\n  pictogramReferences() {\n    return this.whmis2015Service.getPictograms().subscribe(res => {\n      this.pictograms = res;\n    });\n  }\n\n  // onSelectedPictograms(\n  //   checkbox: MatCheckbox,\n  //   model: { pictogramId: number; pictogramName: string }\n  // ) {\n  //   this.model.pictogramId = model.pictogramId;\n  //   // this.test = model.pictogramId;\n  //   this.test = model;\n  //   console.log(this.test);\n\n  //   // this.pictogramArray = model.pictogramId;\n  //   this.imageBind = model.pictogramName;\n  //   // this.test = model.pictogramId;\n  //   // // console.log(model.pictogramId);\n  //   // // console.log(this.pictogramArray);\n  //   // // console.log(this.pictograms);\n  //   // // console.log(this.model.pictogramName);\n  //   // // console.log(model.pictogramName);\n  //   // // console.log(model);\n  //   // // console.log(checkbox.id);\n  //   // console.log(model);\n  //   // console.log(this.test);\n  // }\n\n  generateLabel() {\n    // let params = new URLSearchParams();\n    // params.append('productName', this.model.productName);\n    // params.append('model', this.model.productCode);\n    // params.append('model', this.model.instructions);\n    // params.append('model', this.model.manufacturerName);\n    // params.append('model', this.model.margin);\n    // params.append('model', this.model.rows);\n    // params.append('model', this.model.columns);\n    // params.append('model', this.model.labelPerPage);\n    // params.append('model', this.model.signalWord);\n\n\n    // for(const image of this.imageBind) {\n    //   this.model.pictogramName = image;\n    //   // params.append('model', this.model.pictogramName);\n\n    // }\n    this.model.productName = this.productName;\n    this.model.productCode = this.productCode;\n    this.model.manufacturerName = this.mfg_detail;\n    this.model.instructions = this.safeHandlingInstructions;\n    this.model.margin = this.margins;\n    this.model.rows = this.rows;\n    this.model.columns = this.columns;\n    this.model.labelPerPage = this.labelPerPage;\n    this.model.signalWord = this.signalWord;\n    this.model.averyName = this.averyName;\n\n    const params = new URLSearchParams();\n    for (const image of this.imageBind) {\n      params.append('pictogramName', image);\n    }\n\n    // params.append('model', this.model.productName);\n    // params.append('model', this.model.productCode);\n    // params.append('model', this.model.instructions);\n    // params.append('model', this.model.manufacturerName);\n    // params.append('model', this.model.margin);\n    // params.append('model', this.model.rows);\n    // params.append('model', this.model.columns);\n    // params.append('model', this.model.labelPerPage);\n    // params.append('model', this.model.signalWord);\n\n    return this.labelService.generateWorkPlaceLabel(this.model ,params).subscribe(blob => {\n      const link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      // link.click();\n      window.open(link.href, '_blank');\n\n      this.alertify.success('SDS Label has been successfully created');\n\n    }, error => {\n      this.alertify.error('Something went wrong');\n    });\n  }\n}\n\nexport interface AveryDimensions {\n  averyId: number;\n  name: string;\n  width: string;\n  height: string;\n  averyDimension: string;\n}\n\nexport interface SignalWords {\n  signalId: number;\n  signalName: string;\n}\n","module.exports = \"<mat-tab-group>\\n  <mat-tab label=\\\"Products\\\">\\n\\n    <mat-card *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\n      <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\n      </mat-progress-spinner>\\n    </mat-card>\\n    <div class=\\\"order-container\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort multiTemplateDataRows>\\n\\n        <ng-container matColumnDef=\\\"productName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Product Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{element.productName}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"productCode\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            <!-- <mat-checkbox (change)=\\\"selectAll()\\\"></mat-checkbox> -->\\n            Product Code\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <!-- <mat-checkbox [checked]=\\\"element.isChecked\\\"></mat-checkbox> -->\\n            {{element.productCode}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n\\n        <ng-container matColumnDef=\\\"revisionDate\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Revision Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{element.revisionDate | date:'MM/dd/yy'}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n\\n        <ng-container matColumnDef=\\\"manufacturerName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Manufacturer </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{element.manufacturerName}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"AdditionalSupplier\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Addtional Supplier </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{element.additionalSupplier}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"lastVerifiedDate\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Verfied Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <!-- {{element.total | currency}} -->\\n            {{element.lastVerifiedDate | date:'MM/dd/yy'}}\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;sticky:true;\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row;columns:displayedColumns;\\\" (click)=\\\"selectRow(row)\\\"></tr>\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky:true;\\\"></tr>\\n      </table>\\n      <!-- <mat-card *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\n        <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\n        </mat-progress-spinner>\\n      </mat-card> -->\\n    </div>\\n\\n    <mat-paginator #paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n      (page)=\\\"onPageChange($event)\\\"></mat-paginator>\\n\\n  </mat-tab>\\n\\n</mat-tab-group>\\n<app-product-detail *ngIf=\\\"rowSelected\\\" [rowSelected]=\\\"rowSelected\\\"></app-product-detail>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { MatSort, MatTableDataSource } from '@angular/material';\nimport { PageEvent } from '@angular/material';\nimport { ApiService } from \"../api.service\";\nimport { Subject} from 'rxjs';\n\nconst ELEMENT_DATA = [\n  {\n    orderDate: new Date(),\n    orderNumber: 100,\n    total: 29.99,\n    description: '2lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 101,\n    total: 39.99,\n    description: '5lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 102,\n    total: 59.99,\n    description: '1lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 100,\n    total: 29.99,\n    description: '2lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 101,\n    total: 39.99,\n    description: '5lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 102,\n    total: 59.99,\n    description: '1lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 100,\n    total: 29.99,\n    description: '2lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 101,\n    total: 39.99,\n    description: '5lbs of tuna',\n    isChecked: false\n  },\n  {\n    orderDate: new Date(),\n    orderNumber: 102,\n    total: 59.99,\n    description: '1lbs of tuna',\n    isChecked: false\n  },\n];\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  // styleUrls: ['./order-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  @Input() searchBox;\n\n  ELEMENT_DATA1 = [];\n  //displayedColumns: string[] = ['productCode', 'productName', 'revisionDate', 'manufacturerName', 'lastVerifiedDate'];\n  displayedColumns: string[] = ['productName', 'manufacturerName','AdditionalSupplier' , 'productCode', 'revisionDate','lastVerifiedDate',];\n  dataSource: MatTableDataSource<object>;\n\n  length = 0;\n  pageIndex = 0;\n  pageSize = 5;\n  pageSizeOptions = [1, 2, 5];\n  isLoading = false;\n  row;\n  test = 'khoa';\n  product = {\n    ProductName: '',\n    ProductCode: '',\n    ManufacturerName: '',\n    CasNumber: '',\n    ProductAlias: '',\n    AdditionalSupplier: ''\n  };\n  rowSelected = false;\n  \n\n  @ViewChild(MatSort) sort: MatSort;\n\n  pageEvent: PageEvent;\n\n  constructor(private api: ApiService) { }\n\n  selectRow(row){\n    this.rowSelected = true;\n   // console.log(\"selected row: cas# \" + row['casNumber'] + ' || '+ row['productCode'] + ' || ' + row['productName'] + ' || ' + row['manufacturerName']);\n    this.product.ProductName = row['productName']; \n    this.product.ProductCode = row['productCode'];\n    this.product.ManufacturerName = row['manufacturerName'] ;\n    this.product.CasNumber = row['casNumber'];\n    this.product.ProductAlias = row['productAlias'];\n    this.product.AdditionalSupplier = row['additionalSupplier'];\n    this.api.selectProduct(this.product);\n  }\n\n  onPageChange(e) {\n    this.pageIndex = e.pageIndex;\n    this.pageSize = e.pageSize;  \n    // this.loadData(this.pageIndex, this.pageSize);\n    this.loadData1(this.pageIndex, this.pageSize);\n  }\n\n\n  loadData(pageIndex, pageSize) {\n\n    this.dataSource = new MatTableDataSource<object>(ELEMENT_DATA.slice(pageIndex, pageIndex + pageSize));\n  }\n\n  loadData1(pageIndex, pageSize) {\n    //console.log('load data1 is called')\n    this.isLoading = true;\n    var products;\n    if (this.searchBox && this.searchBox.length == 0) {\n      this.searchBox.value = ''; //this product doesn't exist, display nothing. \n    } else {\n      this.api.searchProducts(this.searchBox.value).subscribe(res => {\n        products = res;\n        this.isLoading = false;\n        var i = 0;\n        products.forEach(element => {\n          this.ELEMENT_DATA1[i] = element;\n          i++;\n        });\n        console.log(\"loadData1[0].casnumber \" + this.ELEMENT_DATA1[0].casNumber);\n        // console.log(\"loadData1 \" + this.ELEMENT_DATA1);\n        if (this.ELEMENT_DATA1.length > 0) {\n          console.log(\"loadData1[0].ProductAlias \" + this.ELEMENT_DATA1[0].productAlias);\n          console.log(\"loadData1[0].AdditionalSupplier \" + this.ELEMENT_DATA1[0].additionalSupplier);\n          console.log(\"loadData1[0].productNote \" + this.ELEMENT_DATA1[0].productNote);\n          this.length = this.ELEMENT_DATA1.length;\n          this.dataSource = new MatTableDataSource<object>(this.ELEMENT_DATA1.slice(pageIndex, pageIndex + pageSize));\n          this.dataSource.sort = this.sort;\n        }\n\n      });\n    }\n     \n    \n  }\n\n  ngOnInit() {\n    // do we have a value for searchBox that is from parent component;\n    \n    if (this.searchBox.value){\n      //console.log(\"on init this.searchBox \" + this.searchBox.value);\n      this.loadData1(0, this.pageSize);\n    }\n    // else {\n    //   this.loadData(0, this.pageSize); // for now, will remove later\n    // }\n  }\n\n  selectAll() {\n    for (var elm of ELEMENT_DATA) {\n      elm.isChecked = !elm.isChecked;\n    }\n    // console.log(this.ELEMENT_DATA1);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcHJvZHVjdC1sb2NhdGlvbi9wcm9kdWN0LWxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-title>Assign Product To Location</mat-card-title>\\n  <mat-dialog-content>\\n    <form #assignForm (ngSubmit)=\\\"assignProduct(assignForm)\\\">\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <!-- <input matInput placeholder=\\\"product name\\\" [(ngModel)]=\\\"productName\\\" name=\\\"productName\\\"\\n          value=\\\"productName\\\"> -->\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"product name\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n\\n      </mat-form-field>\\n      <!-- <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Product\\\" [(ngModel)]=\\\"selectedProduct\\\" name=\\\"product\\\">\\n          <mat-option *ngFor=\\\"let product of products\\\" [value]=\\\"product.productId\\\">\\n            {{product.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field> -->\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Authority\\\" (selectionChange)=\\\"onUserSelectTopAuthority($event)\\\" [(value)] = \\\"selectedAuthority\\\">\\n          <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\" >\\n            {{authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\">\\n          <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\"\\n          >\\n            {{level1authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\">\\n          <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n            {{level2authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field> \\n\\n      <mat-form-field class=\\\"fullWidth\\\" [hidden]=\\\"hideLevel3DropDown\\\">\\n        <mat-select placeholder=\\\"Department\\\" (selectionChange)=\\\"onUserSelectLevel3($event)\\\" [(value)] = \\\"selectedLevel3Authority\\\" required>\\n          <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n            {{level3authority.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n        <!-- <button type=\\\"submit\\\" mat-raised-button matTooltip=\\\"Press to assign\\\"\\n          aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">Assign</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button  matTooltip=\\\"Press to assign\\\" color=\\\"primary\\\">SUBMIT</button>\\n        <button type=\\\"button\\\" mat-raised-button  [mat-dialog-close]=\\\"false\\\" class=\\\"spacer-left\\\" color=\\\"warn\\\">CANCEL</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-dialog-content>\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { User } from './../_models/user';\nimport { UserService } from \"src/app/_service/user.service\";\nimport { AlertifyService } from \"src/app/_service/alertify.service\";\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray} from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ApiService } from '../api.service';\n// import {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { modelGroupProvider } from '@angular/forms/src/directives/ng_model_group';\nimport { ProductService } from '../_service/product.service';\nimport { Product } from '../_models/product';\nimport { LocationService } from '../_service/location.service';\n\n@Component({\n  selector: 'product-location',\n  templateUrl: './product-location.component.html',\n  styleUrls: ['./product-location.component.css']\n})\nexport class ProductLocationComponent implements OnInit {\n\n  user: User;\n  \n  // model: any = {\n  //   productId: null,\n  //   rootAuthorityUnitId: null,\n  //   addedDate: null,\n  // };\n\n  model: any = {};\n\n  products;\n  authorities;\n  level1Authorities;\n  level2Authorities;\n  level3Authorities;\n  locations;\n  productName = this.passedData.productName;\n  productId = this.passedData.productId;\n  departmentCount: number;\n  hideLevel3DropDown: boolean;\n\n  public selectedAuthority: any = 0;\n  public selectedLevel1Authority: any = 0;\n  public selectedLevel2Authority: any = 0 ;\n  public selectedLevel3Authority: any = 0;\n\n\n  \n  public selectedProduct: any;\n product;\n\n  constructor(\n    private userService: UserService,\n    private apiService: ApiService,\n    private productService: ProductService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private locationService: LocationService,\n    private dialogRef: MatDialogRef<ProductLocationComponent>,\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n\n  ) { }\n\n  ngOnInit() {\n   // this.getAllProduct();\n    this.getAuthorityNames();\n    // console.warn(this.passedData.product_name);\n    // console.warn(this.passedData.selected);\n    // console.warn(this.model.productId);\n    // console.log(this.passedData.productName);\n    // console.warn(this.passedData['product_name']);\n    // console.warn(this.passedData['product_code']);\n    // console.warn(this.passedData['mfg_name']);\n    // console.log(\"getProductById(): \" + this.getProductById() );\n    // console.log(\"this.passedData.selected: \" + this.passedData.selected);\n    // console.log(\"this.passedData.productId: \" + this.passedData.productId);\n    // console.log(\"this.passedData.productName: \" + this.passedData.productName);\n    // console.log(\"this.model.product_name: \" + this.model.name);\n    this.getProductById();\n  }\n\n  getAllProduct(){\n    return this.apiService.getProducts().subscribe(res => {\n      this.products = res;\n      //console.log('Get All Products ' + this.products[0].name + ' id ' + this.products[0].productId)\n     \n    });\n  }\n\n  getProductById() {\n    return this.productService.getProductbyId(this.passedData.productId).subscribe((product: Product) => {\n      \n      this.model = product; \n      console.log(\"productName:  \" + this.model.name);\n\n    });;\n  }\n\n  getAuthorityNames() {\n    return this.locationService.getAllTopAuthorityNames().subscribe(res => {\n      this.authorities = res;\n    });\n  }\n\n\nonUserSelectTopAuthority(event) {\n this.selectedAuthority = event.value;\n this.getLevel1DropDown();\n}\n\nonUserSelectLevel1(event) {\n  this.selectedLevel1Authority = event.value;\n  this.getLevel2DropDown();\n}\n\nonUserSelectLevel2(event) {\n  this.selectedLevel2Authority = event.value;\n  this.getLevel3DropDown();\n}\n\nonUserSelectLevel3(event) {\n  this.selectedLevel3Authority = event.value;\n}\n\ngetLevel1DropDown() {\n  return this.locationService.level1DropDown(this.selectedAuthority).subscribe(res => {\n    this.level1Authorities = res;\n});\n}\n\ngetLevel2DropDown() {\n  return this.locationService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n    this.level2Authorities = res;\n});\n}\n\n  getLevel3DropDown() {\n    this.departmentCount = 0;\n    if (this.departmentCount == 0) {\n      this.hideLevel3DropDown = true;\n    } \n    return this.locationService.level3DropDown(this.selectedLevel2Authority).subscribe(res => {\n      this.level3Authorities = res;\n    });\n  }\n\n  // productAuthority table requires productId, rootAuthorityId\n  // note that rootAuthorityId is just the authorityId of the place\n  // where the product is used. \n  assignProduct() {\n    console.warn(this.model.productId);\n    console.log(this.passedData.productId);\n    var now = new Date(); \n    var datetime = now.getFullYear()+'/'+(now.getMonth()+1)+'/'+now.getDate();\n    this.model.addedDate = datetime; \n    // console.log(\"Assign clicked!\");\n    // console.log('assignProduct() this.model.productId: ' +this.model.productId);\n    this.model.productId = this.passedData.productId; \n     console.warn(this.model.productId);\n   if(this.selectedLevel3Authority == null) {\n    this.model.rootAuthorityUnitId = this.selectedLevel2Authority;\n   } else {\n    this.model.rootAuthorityUnitId = this.selectedLevel3Authority;\n   }\n\n      return this.apiService.assignProductLocation(this.model).subscribe(res => {\n        this.alertify.success(`Product assigned a location`);\n        this.locations = res;\n      });\n  }\n\n\n}\n","module.exports = \"/deep/ .mat-checkbox-frame { \\n    border-color: grey \\n}\\n\\n.flex-space-around {\\n    display: flex;\\n    justify-content: space-around;\\n}\\n\\n.flex-space-between {\\n    display: flex;\\n    justify-content: space-between;\\n}\\n\\n.search-location, .search-hazard, .include-fields {\\n    border: 1px solid grey;\\n    padding: 10px;\\n    width: 40%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9wcm9kdWN0L3Byb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtBQUNsQzs7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsVUFBVTtBQUNkIiwiZmlsZSI6ImFwcC9wcm9kdWN0L3Byb2R1Y3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi9kZWVwLyAubWF0LWNoZWNrYm94LWZyYW1lIHsgXG4gICAgYm9yZGVyLWNvbG9yOiBncmV5IFxufVxuXG4uZmxleC1zcGFjZS1hcm91bmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5mbGV4LXNwYWNlLWJldHdlZW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuLnNlYXJjaC1sb2NhdGlvbiwgLnNlYXJjaC1oYXphcmQsIC5pbmNsdWRlLWZpZWxkcyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JleTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIHdpZHRoOiA0MCU7XG59XG5cbiJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-title>\\n    <span>Search SDS</span>\\n  </mat-card-title>\\n\\n  <mat-card-content>\\n    <form>\\n      <div class=\\\"fullWidth flex-container\\\">\\n        <mat-form-field style=\\\"width:400px !important\\\">\\n          <mat-icon matSuffix>search</mat-icon>\\n          <input #searchBox name=\\\"searchBox\\\" type=\\\"text\\\" matInput color=\\\"secondary\\\"\\n            placeholder=\\\"product name, product code or manufacturer\\\" (click)=\\\"searchBoxClick(); searchBox.value = null; loadComponent = false\\\"/>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:150px; margin-left: 5px;\\\" *ngIf=\\\"loggedIn()\\\">\\n            <mat-select placeholder=\\\"Site\\\" [(ngModel)]=\\\"selectedLevel2Authority\\\" name=\\\"level2authority\\\" >\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field> \\n\\n        <mat-form-field style=\\\"width:150px; margin-left: 5px;\\\" *ngIf=\\\"loggedIn()\\\">\\n            <mat-select placeholder=\\\"Department\\\" [(ngModel)]=\\\"selectedLevel3Authority\\\" name=\\\"level3authority\\\">\\n              <mat-option  *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n                {{level3authority.name}}\\n              </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n\\n        <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n          <button (click)=\\\"getProduct(searchBox.value)\\\" mat-raised-button\\n            matTooltip=\\\"Click Clear before starting a new search\\\"\\n            aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">Search</button>\\n        </mat-card-actions>\\n        <!-- <mat-card-actions style=\\\"margin-left: 10px;\\\">\\n          <button mat-raised-button (click)=\\\"searchBox.value = null; loadComponent = false\\\">Clear</button>\\n        </mat-card-actions> -->\\n      </div>\\n      <!-- <div class=\\\"flex-container-with-space\\\">\\n        <mat-checkbox name=\\\"productNameChecked\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"productNameChecked\\\" [(indeterminate)]=\\\"indeterminate\\\"\\n          [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"\\n          style=\\\"width: 170px;padding: 4px;margin-left: 25px; border:1px solid grey; margin: 1px\\\">\\n          Filter By Product Name\\n        </mat-checkbox> \\n\\n        <mat-checkbox name=\\\"productCodeChecked\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"productCodeChecked\\\" [(indeterminate)]=\\\"indeterminate\\\"\\n          [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"\\n          style=\\\"width: 170px;padding: 4px;margin-left: 25px; border:1px solid grey; margin: 1px\\\">\\n          Filter By Product Code\\n        </mat-checkbox>\\n\\n        <mat-checkbox name=\\\"casNumberChecked\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"casNumberChecked\\\" [(indeterminate)]=\\\"indeterminate\\\"\\n          [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"\\n          style=\\\"width: 170px;padding: 4px;margin-left: 25px; border:1px solid grey; margin: 1px\\\">\\n          Filter By CasNumber\\n        </mat-checkbox>\\n\\n        <mat-checkbox name=\\\"manufacturerChecked\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"manufacturerChecked\\\"\\n          [(indeterminate)]=\\\"indeterminate\\\" [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"\\n          style=\\\"width: 170px;padding: 4px;margin-left: 25px; border:1px solid grey; margin: 1px\\\">\\n          Filter By Manufacturer\\n        </mat-checkbox>\\n      </div> -->\\n    </form>\\n\\n    <!-- <app-product-list [searchInput] = \\\"searchInput\\\"></app-product-list> -->\\n    <!-- <app-product-list [searchBox]=\\\"searchBox\\\" *ngIf=\\\"loadComponent\\\"></app-product-list> -->\\n    <app-product-list [searchBox]=\\\"searchBox\\\" *ngIf=\\\"loadComponent\\\"></app-product-list>\\n\\n  </mat-card-content>\\n\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-content class=\\\"flex-space-between\\\">\\n    <div class=\\\"search-location\\\">\\n      <mat-card-title>Refine search by location:</mat-card-title>\\n      <app-tree-checkbox></app-tree-checkbox>\\n      <div class=\\\"button-group\\\" class=\\\"flex-space-around\\\" >\\n        <button mat-raised-button>Export List</button>\\n        <button mat-raised-button>Create Backup</button>\\n      </div>\\n    </div>  \\n    <div class=\\\"search-hazard\\\">\\n        <mat-card-title>Refine search by hazard - template:</mat-card-title>\\n        <app-tree-checkbox></app-tree-checkbox>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-card >\\n  <div class=\\\"include-fields\\\">\\n      <mat-card-title>Include:</mat-card-title>\\n      <mat-card-content style=\\\"display: flex; flex-direction: column;\\\">\\n        <mat-checkbox >\\n        Product Name\\n      </mat-checkbox>\\n      <mat-checkbox >\\n        Product Code\\n      </mat-checkbox>\\n      <mat-checkbox >\\n        Last VerifiedDate\\n      </mat-checkbox>\\n      <mat-checkbox >\\n        Supplier/Manufacturer\\n      </mat-checkbox>\\n      <mat-checkbox >\\n        Health Authority\\n      </mat-checkbox>\\n      <mat-checkbox >\\n        Facility/Department\\n      </mat-checkbox>\\n      <div class=\\\"button-group\\\" class=\\\"flex-space-around\\\" >\\n          <button mat-raised-button>Generate List</button>\\n          <button mat-raised-button>Cancel</button>\\n        </div>\\n      </mat-card-content>\\n  </div>\\n \\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from \"../api.service\";\nimport { UserService } from \"src/app/_service/user.service\";\nimport { AlertifyService } from \"src/app/_service/alertify.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from './../_service/auth.service';\n\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material';\n\n\nimport { PageEvent } from '@angular/material';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { TreeCheckboxComponent} from '../tree-checkbox/tree-checkbox.component';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  //displayedColumns: string[] = ['productName', 'manufacturerName', 'productNote', 'revisionDate'];\n  // dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  //dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  // searchInput;\n  searchBox;\n  // productNameChecked = false;\n  // productCodeChecked = false;\n  // casNumberChecked = false;\n  manufacturerChecked = false;\n  indeterminate = false;\n  labelPosition = 'before';\n  disabled = false;\n  products;\n  level2Authorities;\n  level3Authorities;\n  _loggedIn;\n  public selectedLevel2Authority: any;\n  public selectedLevel3Authority: any;\n // productArray;\n  companies;\n  loadComponent;\n  ELEMENT_DATA1: ProductInterface[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  constructor(\n    private api: ApiService,\n    private userService: UserService,\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n  ngOnInit() {\n   // this.dataSource.paginator = this.paginator;\n   this.loadComponent = false;\n   \n    // this.getLevel2AuthorityNames();\n    // this.getLevel3AuthorityNames();\n   \n \n  }\n\n  loggedIn() {\n    this._loggedIn = this.authService.loggedIn();\n    return this._loggedIn;\n  }\n\n  getProduct(value: string) {\n    if (value.length > 0) {\n      this.loadComponent = false;\n      this.loadComponent =true;\n      \n    } else {\n      this.loadComponent = false;\n    }\n\n  }\n\n  getLevel2AuthorityNames() {\n    return this.userService.getLevel2AuthorityNames().subscribe(res => {\n      this.level2Authorities = res;\n    });\n  }\n\n  getLevel3AuthorityNames() {\n    return this.userService.getLevel3AuthorityNames().subscribe(res => {\n      this.level3Authorities = res;\n    });\n  }\n\n  searchBoxClick() {\n    console.log(\"searchBoxclick\");\n  }\n\n\n}\n\nexport interface ProductInterface {\n  productName: string;\n  manufacturerName: string;\n  productCode: string;\n  revisionDate: string;\n  lastVerifiedDate: string;\n}","module.exports = \"<mat-card>\\n    <mat-card-title>\\n      <!-- <span *ngIf=\\\"quiz.id\\\">Edit Quiz</span>\\n      <span *ngIf=\\\"!quiz.id\\\">New Quiz</span> -->\\n      <span>Product Alias</span>\\n    </mat-card-title>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input matInput color=\\\"secondary\\\"/>\\n      </mat-form-field>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button  (click)=\\\"getProduct()\\\" mat-raised-button>Get Product</button>\\n    <!-- <button *ngIf=\\\"quiz.id\\\" (click)=\\\"quiz = {}\\\" mat-button>NEW</button>\\n    <button *ngIf=\\\"quiz.id\\\" [routerLink]=\\\"['/question', quiz.id]\\\" mat-button>EDIT QUESTION</button>\\n    <button *ngIf=\\\"!quiz.id\\\" (click)=\\\"api.postQuiz(quiz)\\\" mat-button>POST</button> -->\\n  </mat-card-actions>\\n</mat-card>\"","import { ApiService } from \"./api.service\";\nimport { Component, Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators , ValidatorFn, AbstractControl, FormControl} from '@angular/forms'\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { catchError, map, tap,startWith, switchMap, debounceTime, distinctUntilChanged, takeWhile, first } from 'rxjs/operators';\n\n@Injectable() \nexport class Service {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUsers(): Observable<any[]> {\n    return this.httpClient.get<any>('https://jsonplaceholder.typicode.com/users')\n  }\n\n}\n\n\n@Component({\n  selector: \"productalias\",\n  templateUrl: \"./productalias.component.html\"\n})\nexport class ProductAliasComponent {\n  quiz = {}  ;\n  productAlias;\n  // constructor(private api: ApiService) {}\n\n  ngOnInit() {\n         this.api.getProductAlias().subscribe(res => {\n            this.productAlias = res;\n        });\n        console.log(\"On init \" + this.productAlias);\n  }\n\n  getProduct()\n  {\n    console.log(\"get product \");\n    console.log(this.productAlias)  ;\n    return this.productAlias;\n  }\n\n  myControl = new FormControl();\n  filteredOptions: Observable<any[]>;\n\n  constructor(private api: ApiService, private service: Service) { \n\n  this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(null),\n          debounceTime(200),\n          distinctUntilChanged(),\n          switchMap(val => {\n            return this.filter(val || '')\n          })       \n        );\n  }\n\n  filter(val: string): Observable<any[]> {\n    return this.service.getUsers()\n    .pipe(\n      map(response => response.filter(option => { \n        return option.name.toLowerCase().indexOf(val.toLowerCase()) === 0\n      }))\n    )\n  }\n}","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .example-container > * {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYiIsImZpbGUiOiJhcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIFxuICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */\"","module.exports = \"<form #RegisterForm=\\\"ngForm\\\" class=\\\"form-register\\\" (ngSubmit)=\\\"register()\\\" style=\\\"padding: 20px !important\\\"\\n>\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Register</mat-card-title\\n    >\\n    <div class=\\\"example-container container !important\\\">\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your email\\\"\\n            name=\\\"email\\\"\\n            [(ngModel)]=\\\"model.email\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"First name\\\"\\n            name=\\\"firstname\\\"\\n            [(ngModel)]=\\\"model.firstname\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Last name\\\"\\n            name=\\\"lastname\\\"\\n            [(ngModel)]=\\\"model.lastname\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your password\\\"\\n            [type]=\\\"hide ? 'password' : 'text'\\\"\\n            required\\n            name=\\\"password\\\"\\n            [(ngModel)]=\\\"model.password\\\"\\n            autocomplete=\\\"off\\\"\\n          />\\n          <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n            hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n          }}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"Confirm your password\\\"\\n            [type]=\\\"hide ? 'password' : 'text'\\\"\\n            required\\n            name=\\\"confirmpassword\\\"\\n            [(ngModel)]=\\\"model.confirmpassword\\\"\\n            autocomplete=\\\"off\\\"\\n          />\\n          <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n            hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n          }}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <button mat-raised-button style=\\\"margin-right:5px\\\" [disabled]=\\\"!RegisterForm.valid\\\" type=\\\"submit\\\">\\n      Register\\n    </button>\\n    <button mat-raised-button [mat-dialog-close]=\\\"false\\\">\\n      Close\\n    </button>\\n    <br/>\\n  </form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_service/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  model: any = {};\n@Input() valuesFromHome: any;\n@Output() cancelRegister = new EventEmitter();\nhide = true;\n\n  constructor(private authService: AuthService,\n     private router: Router,\n     private alertify: AlertifyService,\n     private dialog: MatDialog\n     ) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    // console.log(this.model);\n    this.authService.register(this.model).subscribe(\n      data => {\n        this.alertify.success('Please confirm your email');\n        this.router.navigate(['/login']);\n        this.dialog.closeAll();\n      },\n      error => {\n        this.alertify.error('Something went wrong!');\n        console.log('issue with registering');\n      }\n    )\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    this.router.navigate(['/login']);\n  }\n}","module.exports = \"\\n  \\n  .example-section {\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    height: 60px;\\n  }\\n  \\n  .example-margin {\\n    margin: 0 10px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZXBvcnQvY29tcGFueS1yZXBvcnQvY29tcGFueS1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztFQUVFO0lBQ0UsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsWUFBWTtFQUNkOztFQUVBO0lBQ0UsY0FBYztFQUNoQiIsImZpbGUiOiJhcHAvcmVwb3J0L2NvbXBhbnktcmVwb3J0L2NvbXBhbnktcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgXG4gIC5leGFtcGxlLXNlY3Rpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICB9XG4gIFxuICAuZXhhbXBsZS1tYXJnaW4ge1xuICAgIG1hcmdpbjogMCAxMHB4O1xuICB9Il19 */\"","module.exports = \"<!-- <report-menu></report-menu> -->\\n<!-- <section fxLayout fxLayoutAlign=\\\"center center\\\">\\n  \\n  <mat-card class=\\\"result\\\" style=\\\"width: 60%;\\\">\\n    <mat-card-content>\\n      <h4>Select Report Fields</h4>\\n      <section class=\\\"example-section\\\">\\n        <mat-checkbox (change)=\\\"updateCheck()\\\" [(ngModel)]=\\\"selectAll\\\" style=\\\"font-style: italic; font-weight: bold; \\\">\\n          Select All\\n        </mat-checkbox>\\n      </section>\\n      <section *ngFor=\\\"let field of companyFields; let i = index\\\" class=\\\"example-section\\\" >\\n          <section > \\n              <mat-checkbox *ngIf=\\\" i > 0 && i <= 4\\\" [(ngModel)]=\\\"field.checked\\\" >\\n               <span>{{field.fieldname}}</span>  \\n              </mat-checkbox>\\n            </section>\\n            <section >\\n                <mat-checkbox *ngIf=\\\" i > 4 && i <= 7 \\\" [(ngModel)]=\\\"field.checked\\\">\\n                 <span> {{field.fieldname}} </span>\\n                </mat-checkbox>\\n              </section>  \\n\\n              <section >\\n                  <mat-checkbox *ngIf=\\\" i >7\\\" [(ngModel)]=\\\"field.checked\\\">\\n                    {{field.fieldname}}\\n                  </mat-checkbox>\\n                </section>\\n      </section>\\n\\n\\n \\n      <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n        <button mat-raised-button style=\\\"margin-right: 15%;\\\" color=\\\"primary\\\">Create Report</button>\\n      </mat-card-actions>\\n\\n\\n\\n    </mat-card-content>\\n  </mat-card>\\n\\n</section> -->\\n<!-- <section fxLayout fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"result\\\" style=\\\"width: 60%;\\\">\\n    <mat-card-content>\\n      <h4>Select Report Fields</h4>\\n\\n      <section class=\\\"example-section\\\">\\n        <mat-checkbox (change)=\\\"updateCheck()\\\" [(ngModel)]=\\\"selectAll\\\" style=\\\"font-style: italic; font-weight: bold; \\\">\\n          Select All\\n        </mat-checkbox>\\n        <section *ngFor=\\\"let field of companyFields; let i = index\\\" class=\\\"example-section\\\">\\n          <mat-checkbox [(ngModel)]=\\\"field.checked\\\">\\n            {{field.fieldname}}\\n          </mat-checkbox>\\n        </section>\\n      </section>\\n\\n\\n      <section *ngFor=\\\"let field of companyFields; let i = index\\\" class=\\\"example-section\\\">\\n        <mat-checkbox [(ngModel)]=\\\"field.checked\\\">\\n          {{field.fieldname}}\\n        </mat-checkbox>\\n      </section>\\n      <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n        <button mat-raised-button style=\\\"margin-right: 15%;\\\" color=\\\"primary\\\">Create Report</button>\\n      </mat-card-actions>\\n\\n    </mat-card-content>\\n  </mat-card>\\n</section> -->\\n<!-- <mat-card style=\\\"width: 65%; margin-left: 20%;\\\">\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"companyName\\\"\\n      [(ngModel)]=\\\"companyNameChecked\\\"\\n      [checked]=\\\"companyNameChecked\\\"\\n      (change)=\\\"onCompanyNameChecked()\\\"\\n      >Company Name</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"url\\\"\\n      [(ngModel)]=\\\"urlChecked\\\"\\n      [checked]=\\\"urlChecked\\\"\\n      (change)=\\\"onUrlChecked()\\\"\\n      >URL</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"sdsURL\\\"\\n      [(ngModel)]=\\\"sdsURLChecked\\\"\\n      [checked]=\\\"sdsURLChecked\\\"\\n      (change)=\\\"onSDSURLChecked()\\\"\\n      >SDS URL</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"contactLocation\\\"\\n      [(ngModel)]=\\\"contactLocationChecked\\\"\\n      [checked]=\\\"contactLocationChecked\\\"\\n      (change)=\\\"onContactLocationChecked()\\\"\\n      >Contact Location</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"contactDetails\\\"\\n      [(ngModel)]=\\\"contactDetailsChecked\\\"\\n      (change)=\\\"onContactDetailsChecked()\\\"\\n      >Contact Details</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"contactEmail\\\"\\n      [(ngModel)]=\\\"contactEmailChecked\\\"\\n      [checked]=\\\"contactEmailChecked\\\"\\n      (change)=\\\"onContactEmailChecked()\\\"\\n      >Email Address</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"contactUrl\\\"\\n      [(ngModel)]=\\\"contactUrlChecked\\\"\\n      [checked]=\\\"contactUrlChecked\\\"\\n      (change)=\\\"onContactURLChecked()\\\"\\n      >MSDS Request Form URL</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      name=\\\"phoneNumber\\\"\\n      [(ngModel)]=\\\"phoneNumberChecked\\\"\\n      [checked]=\\\"phoneNumberChecked\\\"\\n      (change)=\\\"onPhoneNumberChecked()\\\"\\n      >Phone Number</mat-checkbox\\n    >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n  <mat-checkbox\\n    class=\\\"example-margin\\\"\\n    name=\\\"faxNumber\\\"\\n    [(ngModel)]=\\\"faxNumberChecked\\\"\\n    [checked]=\\\"faxNumberChecked\\\"\\n    (change)=\\\"onContactFaxNumberChecked()\\\"\\n    >Fax Number</mat-checkbox\\n  >\\n  </section>\\n  <section class=\\\"example-section\\\">\\n  <mat-checkbox\\n    class=\\\"example-margin\\\"\\n    name=\\\"alternateCompanyNames\\\"\\n    [(ngModel)]=\\\"alternateCompanyNamesChecked\\\"\\n    [checked]=\\\"alternateCompanyNamesChecked\\\"\\n    (change)=\\\"onAlternateCompanyNamesChecked()\\\"\\n    >Alternate Company Names</mat-checkbox\\n  >\\n</section>\\n<section class=\\\"example-section\\\">\\n  <mat-checkbox\\n    class=\\\"example-margin\\\"\\n    name=\\\"companyNotes\\\"\\n    [(ngModel)]=\\\"companyNotesChecked\\\"\\n    [checked]=\\\"companyNotesChecked\\\"\\n    (change)=\\\"onCompanyNotesChecked()\\\"\\n    >Company Notes</mat-checkbox\\n  >\\n  </section>\\n  \\n  <mat-card-actions>\\n    <button\\n      mat-raised-button\\n      style=\\\"margin-left: 30%\\\"\\n      (click)=\\\"generateCompanyExcelReport()\\\"\\n    >\\n      <a [target]=\\\"'_blank'\\\">Generate Report</a>\\n    </button>\\n  </mat-card-actions>\\n</mat-card> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ReportService } from 'src/app/_service/report.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n\n@Component({\n  selector: 'company-report',\n  templateUrl: './company-report.component.html',\n  styleUrls: ['./company-report.component.css']\n})\nexport class CompanyReportComponent implements OnInit {\n  title: string;\n  companyFields: any;\n  selectAll: any;\n  constructor(\n    private reportService: ReportService,\n    private alertify: AlertifyService\n  ) {}\n  \n  report;\n\n  isLoading = false;\n\n  companyName;\n  companyNameChecked = false;\n\n  url;\n  urlChecked = false; //\n\n  sdsURL; //\n  sdsURLChecked = false;\n\n  contactLocation; //\n  contactLocationChecked = false;\n\n  contactEmail; //\n  contactEmailChecked = false;\n\n  contactDetails;\n  contactDetailsChecked = false;\n\n  contactUrl;\n  contactUrlChecked = false;\n\n  faxNumber;\n  faxNumberChecked = false;\n  \n  alternateCompanyNames;\n  alternateCompanyNamesChecked = false;\n\n  companyNotes;\n  companyNotesChecked = false;\n\n  phoneNumber;\n  phoneNumberChecked = false;\n\n  ngOnInit() {\n  }\n\n\n  onCompanyNameChecked() {\n    this.companyName = '';\n    if (this.companyNameChecked) {\n      this.companyName = 'ManufacturerName';\n    }\n    console.log('fn ' + this.companyName);\n  }\n\n  onUrlChecked() {\n    this.url = '';\n    if (this.urlChecked) {\n      this.url = 'URL';\n    }\n    console.log('fn ' + this.url);\n  }\n\n  onSDSURLChecked() {\n    this.sdsURL = '';\n    if (this.sdsURLChecked) {\n      this.sdsURL = 'SDS_URL';\n    }\n    console.log('fn ' + this.sdsURL);\n  }\n\n  onContactLocationChecked() {\n    this.contactLocation = '';\n    if (this.contactLocationChecked) {\n      this.contactLocation = 'ContactLocation';\n    }\n    console.log('fn ' + this.contactLocation);\n  }\n\n  onContactEmailChecked() {\n    this.contactEmail = '';\n    if (this.contactEmailChecked) {\n      this.contactEmail = 'ContactEmail';\n    }\n    console.log('fn ' + this.contactEmail);\n  }\n\n  onContactURLChecked() {\n    this.contactUrl = '';\n    if (this.contactUrlChecked) {\n      this.contactUrl = 'ContactURL';\n    }\n    console.log('fn ' + this.contactUrl);\n  }\n\n  onPhoneNumberChecked() {\n    this.phoneNumber = '';\n    if (this.phoneNumberChecked) {\n      this.phoneNumber = 'PhoneNumber';\n    }\n    console.log('fn ' + this.phoneNumber);\n  }\n\n  onContactDetailsChecked() {\n    this.contactDetails = '';\n    if (this.contactDetailsChecked) {\n      this.contactDetails = 'ContactDetails';\n    }\n    console.log('fn ' + this.contactDetails);\n  }\n\n  onContactFaxNumberChecked() {\n    this.faxNumber = '';\n    if (this.faxNumberChecked) {\n      this.faxNumber = 'FaxNumber';\n    }\n    console.log('fn ' + this.faxNumber);\n  }\n\n  onAlternateCompanyNamesChecked() {\n    this.alternateCompanyNames = '';\n    if (this.alternateCompanyNamesChecked) {\n      this.alternateCompanyNames = 'ManufacturerAlias';\n    }\n    console.log('fn ' + this.alternateCompanyNames);\n  }\n\n  onCompanyNotesChecked() {\n    this.companyNotes = '';\n    if (this.companyNotesChecked) {\n      this.companyNotes = 'CompanyNotes';\n    }\n    console.log('fn ' + this.companyNotes);\n  }\n\n  // generateCompanyExcelReport() {\n  //   let params = new URLSearchParams();\n  //   params.append('selection', this.companyName);\n  //   params.append('selection', this.url);\n  //   params.append('selection', this.sdsURL);\n  //   params.append('selection', this.contactLocation);\n  //   params.append('selection', this.contactEmail);\n  //   params.append('selection', this.contactDetails);\n  //   params.append('selection', this.contactUrl);\n  //   params.append('selection', this.faxNumber);\n  //   params.append('selection', this.alternateCompanyNames);\n  //   params.append('selection', this.companyNotes);\n  //   params.append('selection', this.phoneNumber);\n\n  //   this.isLoading = true;\n  //   this.reportService.generateCompanyReport(params).subscribe(\n  //     blob => {\n  //       this.report = blob;\n  //       const link = document.createElement('a');\n  //       link.href = window.URL.createObjectURL(blob);\n  //       link.download = 'Company';\n  //       link.click();\n  //       this.alertify.success('Company Report Generation is Completed');\n\n  //       this.isLoading = false;\n  //     },\n  //     error => {\n  //       this.alertify.error('Company Report Generation failed, please try again!');\n  //     }\n  //   );\n  // }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVwb3J0L2dlbmVyYXRlL2dlbmVyYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Report Generated\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-generate',\n  templateUrl: './generate.component.html',\n  styleUrls: ['./generate.component.css']\n})\nexport class GenerateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVwb3J0L3JlcG9ydC1tZW51L3JlcG9ydC1tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mat-h1\\\" fxLayout fxLayoutAlign=\\\"space-around center\\\"\\nstyle=\\\"margin-top:5px; height: 2rem;background-color: rgb(255,219,196); color: black;\\\">\\n<div routerLink=\\\"/report\\\" style=\\\"cursor: pointer;\\\">Products</div>\\n<!-- <div routerLink=\\\"/company-report\\\" style=\\\"cursor: pointer;\\\">Companies</div> -->\\n<div style=\\\"cursor: pointer;\\\">Authorities</div>\\n<div routerLink=\\\"/user-report\\\" style=\\\"cursor: pointer;\\\">Users</div>\\n<div routerLink=\\\"/schedule\\\" style=\\\"cursor: pointer;\\\">Schedule Reports</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'report-menu',\n  templateUrl: './report-menu.component.html',\n  styleUrls: ['./report-menu.component.css']\n})\nexport class ReportMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container {\\n    /* border: 1px solid lightgrey; */\\n    height: 100vh;\\n    width: 98hw;\\n    margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZXBvcnQvcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQ0FBaUM7SUFDakMsYUFBYTtJQUNiLFdBQVc7SUFDWCxXQUFXO0FBQ2YiLCJmaWxlIjoiYXBwL3JlcG9ydC9yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JleTsgKi9cbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHdpZHRoOiA5OGh3O1xuICAgIG1hcmdpbjogNXB4O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container spacer-top mat-typography; height: auto;\\\">\\n    <div *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n        <mat-progress-bar color=\\\"primary\\\"  mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      </div>\\n  <report-menu></report-menu>\\n\\n  <div class=\\\"rep-type\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\" style=\\\"margin-top:5px; height: 4rem;\\\">\\n    <div class=\\\"spacerLeft-30 mat-h2\\\">Select Report Type</div>\\n    <div>\\n      <mat-radio-group fxLayout fxLayoutAlign=\\\"space-around\\\">\\n        <mat-radio-button value=\\\"1\\\" name=\\\"checkWorkSheetUpdate\\\" (change)=\\\"onSelectUpdatingWorkSheetClick()\\\">Updating WorkSheet</mat-radio-button>\\n        <mat-radio-button value=\\\"2\\\" (change)=\\\"onSelectInventoryStatusReportClick()\\\">Inventory Status Report</mat-radio-button>\\n        <mat-radio-button value=\\\"3\\\" name=\\\"checkProductPropertyInfo\\\" (change)=\\\"onSelectProductPropertyInfoClick()\\\">Product Property Info</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"selection-top spacer-top-50\\\" fxLayout fxLayoutAlign=\\\"space-around\\\" >\\n    <div>\\n      <p class=\\\"mat-h2\\\">Product Info</p>\\n      <mat-checkbox class=\\\"example-margin sub-title\\\" [(ngModel)]=\\\"checkAllProductInfo\\\" (change)=\\\"onSelectAllProductinfoClick()\\\">Check All</mat-checkbox>\\n      <section class=\\\"example-section\\\" fxLayout=\\\"column\\\">\\n        <br/>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"productNameChecked\\\" [(ngModel)]=\\\"productNameChecked\\\" [checked]=\\\"productNameChecked\\\" (change)=\\\"onProductNameChecked()\\\">Product Name</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"manufacturerNameChecked\\\" [(ngModel)]=\\\"manufacturerNameChecked\\\" [checked]=\\\"manufacturerNameChecked\\\" (change)=\\\"onManufacturerNameChecked()\\\">Manufacturer</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"sdsFile\\\" [(ngModel)]=\\\"sdsFileChecked\\\" [checked]=\\\"sdsFileChecked\\\" (change)=\\\"onSdsFileChecked()\\\">SDS File</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"creationDate\\\" [(ngModel)]=\\\"creationDateChecked\\\" [checked]=\\\"creationDateChecked\\\" (change)=\\\"onCreationDateChecked()\\\">Creation Date</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"modifiedDate\\\" [(ngModel)]=\\\"modifiedDateChecked\\\" [checked]=\\\"modifiedDateChecked\\\" (change)=\\\"onModifiedDateChecked()\\\">Date Modified</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"revisionDate\\\" [(ngModel)]=\\\"revisionDateChecked\\\" (change)=\\\"onRevisionDateChecked()\\\">Revision Date</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"productCodeChecked\\\" [(ngModel)]=\\\"productCodeChecked\\\" [checked]=\\\"productCodeChecked\\\" (change)=\\\"onProductCodeChecked()\\\">Product Code</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"casNumber\\\" [(ngModel)]=\\\"casNumberChecked\\\" [checked]=\\\"casNumberChecked\\\" (change)=\\\"onCasNumberChecked()\\\">Cas Number</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"productAlias\\\" [(ngModel)]=\\\"productAliasChecked\\\" [checked]=\\\"productAliasChecked\\\" (change)=\\\"onProductAliasChecked()\\\">Product Aliases</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"sdsOrigin\\\" [(ngModel)]=\\\"sdsOriginChecked\\\" [checked]=\\\"sdsOriginChecked\\\" (change)=\\\"onSdsOriginChecked()\\\">SDS Origin</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"sdsFormat\\\" [(ngModel)]=\\\"sdsFormatChecked\\\" [checked]=\\\"sdsFormatChecked\\\" (change)=\\\"onSdsFormatChecked()\\\">SDS Format</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"discontinued\\\" [(ngModel)]=\\\"discontinuedChecked\\\" [checked]=\\\"discontinuedChecked\\\" (change)=\\\"onDiscontinuedChecked()\\\">Discontinued</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"exemptWHMIS\\\" [(ngModel)]=\\\"exemptWHMISChecked\\\" [checked]=\\\"exemptWHMISChecked\\\" (change)=\\\"onWHMISExemptChecked()\\\">WHMIS Exempt</mat-checkbox>\\n        <!-- <mat-checkbox class=\\\"example-margin\\\" name=\\\"exemptionClass\\\" [(ngModel)]=\\\"exemptionClassChecked\\\" [checked]=\\\"exemptionClassChecked\\\" (change)=\\\"onExemptionClassChecked()\\\">Exemption Class</mat-checkbox> -->\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"registrationNumber\\\" [(ngModel)]=\\\"registrationNumberChecked\\\" [checked]=\\\"registrationNumberChecked\\\" (change)=\\\"onRegistrationNumberChecked()\\\">Registration Number</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"additionalSupplier\\\" [(ngModel)]=\\\"additionalSupplierChecked\\\" [checked]=\\\"additionalSupplierChecked\\\" (change)=\\\"onAdditionalSuppliersChecked()\\\">Addition Supplier</mat-checkbox>\\n        <mat-checkbox class=\\\"example-margin\\\" name=\\\"notes\\\" [(ngModel)]=\\\"notesChecked\\\" [checked]=\\\"notesChecked\\\" (change)=\\\"onNotesChecked()\\\">Notes</mat-checkbox>\\n      </section>\\n    </div>\\n    <div fxLayout=\\\"column\\\">\\n      <p class=\\\"mat-h2\\\">Supplier/Manufactuerer (Company) Info</p>\\n      <!-- <mat-checkbox class=\\\"example-margin sub-title\\\" [(ngModel)]=\\\"checkAllSuppliers\\\" (change)=\\\"onSelectAllSupplierClick()\\\">Check All</mat-checkbox> -->\\n      <br/>\\n      <section class=\\\"example-section\\\" fxLayout=\\\"column\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"url\\\" [(ngModel)]=\\\"urlChecked\\\" [checked]=\\\"urlChecked\\\" (change)=\\\"onUrlChecked()\\\">URL</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"sdsURL\\\" [(ngModel)]=\\\"sdsURLChecked\\\" [checked]=\\\"sdsURLChecked\\\" (change)=\\\"onSDSURLChecked()\\\">SDS URL</mat-checkbox>\\n\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"contactLocation\\\" [(ngModel)]=\\\"contactLocationChecked\\\" [checked]=\\\"contactLocationChecked\\\" (change)=\\\"onContactLocationChecked()\\\">Contact Location</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"contactEmail\\\" [(ngModel)]=\\\"contactEmailChecked\\\" [checked]=\\\"contactEmailChecked\\\" (change)=\\\"onContactEmailChecked()\\\">Contact Email</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"contactDetails\\\" [(ngModel)]=\\\"contactDetailsChecked\\\" [checked]=\\\"contactDetailsChecked\\\" (change)=\\\"onContactDetailsChecked()\\\">Contact Details</mat-checkbox>\\n</section>\\n<!--       \\n      <p class=\\\"mat-h2\\\">Chemical Classification</p>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"physicalState\\\">Physical State</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"flammable\\\">Flammable</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"gasesUnderPressure\\\">Gases Under Pressure</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"selfReactive\\\">Self-reactive substances and mixtures</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"substancesMixtures\\\">Substances and mixtures which, in contact with</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"waterFlammable\\\">Water, Emmit Flammable gases</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"oxidizing\\\">Oxidizing</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"organicPeroxides\\\">Organic Peroxides</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"corrosiveMetals\\\">Corrosive to metals</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"combustibleDusts\\\">Combustible Dusts</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"simpleAsphyxiants\\\">Simple asphyxiants</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"physicalHazardsNotClassified\\\">Physical hazards not otherwise clasified</mat-checkbox> -->\\n    </div>\\n    <div>\\n      <p class=\\\"mat-h2\\\">Inventory Info</p>\\n      <mat-checkbox class=\\\"example-margin\\\" name=\\\"mostRecentRequestDate\\\" [(ngModel)]=\\\"mostRecentRequestDateChecked\\\" [checked]=\\\"mostRecentRequestDateChecked\\\" (change)=\\\"onMostRecentRequestDateChecked()\\\">Most recent request</mat-checkbox>\\n      <p>Format</p>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"oneProductPerRow\\\">One product per row</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"oneRowPerLocation\\\">One row per location</mat-checkbox>\\n      <p>Include</p>\\n      <mat-form-field>\\n          <mat-select placeholder=\\\"Authorities\\\" [formControl]=\\\"locationList\\\" multiple [(value)]=\\\"selectedAuth\\\" (selectionChange)=\\\"onSelectAuthority(selectedAuth)\\\" >\\n            <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\" >\\n              {{  authority.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"locationList.hasError('required')\\\"\\n              >Please choose an authority</mat-error\\n            >\\n        </mat-form-field>      \\n    </div>\\n    <div style=\\\"width:10%;\\\"></div>\\n  </div>\\n  <button mat-raised-button style=\\\"margin-left: 50%\\\" (click)=\\\"generateExcelReport()\\\"><a [target]=\\\"'_blank'\\\">Generate Report</a></button>\\n\\n          <!-- <button mat-raised-button style=\\\"margin-left: 5%;\\\" (click)=\\\"openDiaglogGenerate('test')\\\">Schedule Report</button> -->\\n<!-- \\n  <div class=\\\"selection-bottom\\\" fxLayout fxLayoutAlign=\\\"space-around\\\" style=\\\"height:40vh;\\\" class=\\\"space-top-50\\\">\\n    <div fxLayout=\\\"column\\\">\\n      <p class=\\\"mat-h2\\\">Health Properties</p>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"acuteToxicity\\\">Acute Toxicity</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"skinCorrosion\\\">Skin corrosion/irritation</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"eyeDamage\\\">Serious eye damage/eye irritation</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"respiratory\\\">Respiratory or skin sensitization</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"germCell\\\">Germ cell mutatgenicity</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"carcinogenicity\\\">Carcinogenicity</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"reproductive\\\">Reproductive Toxicity</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"specificOrgan\\\">Specific target organ toxicity</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"aspirationHazard\\\">Aspiration hazard</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"biohazardous\\\">Biohazardous infection material</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"healthHazard\\\">Health hazards not otherwise specified</mat-checkbox>\\n    </div> -->\\n    <!-- <div style=\\\"width:40%;\\\"> </div> spacer column -->\\n    <!-- <div fxLayout=\\\"column\\\"  fxLayoutGap=\\\"20px;\\\" >\\n      <div style=\\\"height:80vh\\\">test</div>\\n      <div fxLayout=\\\"row\\\"  class=\\\"spacer-bottom-20\\\">\\n          \\n      </div>\\n \\n    </div> -->\\n  </div>\\n<!-- </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport { UserService } from '../_service/user.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GenerateComponent } from './generate/generate.component';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { ReportService } from '../_service/report.service';\n\n@Component({\n  selector: \"report\",\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  checkAllProductInfo = false;\n  checkAllSuppliers = false;\n  checkInventoryStatus = false;\n  checkWorkSheetUpdate = false;\n  checkProductPropertyInfo = false;\n  //Product Info section\n  productName;\n  productNameChecked = false;\n\n  productCode;\n  productCodeChecked = false;\n\n  casNumber;\n  casNumberChecked = false;\n\n  manufacturerName;\n  manufacturerNameChecked = false;\n\n  authorityLocation: any = [];\n  authorityLocationChecked = false;\n\n  sdsFile;\n  sdsFileChecked = false;\n\n  creationDate;\n  creationDateChecked = false;\n\n  modifiedDate;\n  modifiedDateChecked = false;\n\n  revisionDate;\n  revisionDateChecked = false;\n\n  productAlias;\n  productAliasChecked = false;\n\n  sdsOrigin;\n  sdsOriginChecked = false;\n\n  sdsFormat;\n  sdsFormatChecked = false;\n\n  discontinued;\n  discontinuedChecked = false;\n\n  exemptWHMIS;\n  exemptWHMISChecked = false;\n\n  // exemptionClass;\n  // exemptionClassChecked = false;\n\n  registrationNumber;\n  registrationNumberChecked = false;\n\n  additionalSupplier;\n  additionalSupplierChecked = false;\n\n  notes;\n  notesChecked = false;\n\n  // status;\n  // statusChecked = false;\n\n  url;\n  urlChecked = false;\n\n  sdsURL;\n  sdsURLChecked = false;\n\n  contactLocation;\n  contactLocationChecked = false;\n\n  contactEmail;\n  contactEmailChecked = false;\n  // effectiveContactMethod;\n  // effectiveContactMethodChecked = false;\n\n  contactDetails;\n  contactDetailsChecked = false;\n\n  mostRecentRequestDate;\n  mostRecentRequestDateChecked = false;\n\n  isLoading = false;\n\n  onSelectAllProductinfoClick() {\n    this.checkAllProductInfo = true;\n\n    this.productNameChecked = !this.productNameChecked;\n    this.productCodeChecked = !this.productCodeChecked;\n    this.casNumberChecked = !this.casNumberChecked;\n    this.manufacturerNameChecked = !this.manufacturerNameChecked;\n    this.sdsFileChecked = !this.sdsFileChecked;\n    this.creationDateChecked = !this.creationDateChecked;\n    this.notesChecked = !this.notesChecked;\n    this.modifiedDateChecked = !this.modifiedDateChecked;\n    this.revisionDateChecked = !this.revisionDateChecked;\n    this.productAliasChecked = !this.productAliasChecked;\n    this.sdsOriginChecked = !this.sdsOriginChecked;\n    this.sdsFormatChecked = !this.sdsFormatChecked;\n    this.discontinuedChecked = !this.discontinuedChecked;\n    this.exemptWHMISChecked = !this.exemptWHMISChecked;\n    this.additionalSupplierChecked = !this.additionalSupplierChecked;\n    this.registrationNumberChecked = !this.registrationNumberChecked;\n    this.urlChecked = !this.urlChecked;\n    this.sdsURLChecked = !this.sdsURLChecked;\n    this.contactLocationChecked = !this.contactLocationChecked;\n    this.contactDetailsChecked = !this.contactDetailsChecked;\n    this.contactEmailChecked = !this.contactEmailChecked;\n  }\n\n  // onSelectAllSupplierClick() {\n  //   this.checkAllSuppliers = true;\n\n  // }\n\n  onSelectInventoryStatusReportClick() {\n    this.checkInventoryStatus = true;\n\n    this.revisionDateChecked = !this.revisionDateChecked;\n    this.discontinuedChecked = !this.discontinuedChecked;\n    this.exemptWHMISChecked = !this.exemptWHMISChecked;\n  }\n\n  onSelectUpdatingWorkSheetClick() {\n    this.checkWorkSheetUpdate = true;\n\n    this.productNameChecked = !this.productNameChecked;\n    this.manufacturerNameChecked = !this.manufacturerNameChecked;\n    this.sdsFileChecked = !this.sdsFileChecked;\n    this.revisionDateChecked = !this.revisionDateChecked;\n    this.productCodeChecked = !this.productCodeChecked;\n    this.discontinuedChecked = !this.discontinuedChecked;\n    this.exemptWHMISChecked = !this.exemptWHMISChecked;\n  }\n\n  onSelectProductPropertyInfoClick() {\n    this.checkProductPropertyInfo = true;\n\n    this.productNameChecked = !this.productNameChecked;\n    this.manufacturerNameChecked = !this.manufacturerNameChecked;\n    this.revisionDateChecked = !this.revisionDateChecked;\n    this.discontinuedChecked = !this.discontinuedChecked;\n    this.exemptWHMISChecked = !this.exemptWHMISChecked;\n  }\n\n  //Supplier/Manufacturer section\n  // URL;\n  // sdsURL;\n  // contactLocation;\n  // effectiveContactMethod;\n  // contactDetails;\n\n  //Chemical Classification section\n  // physicalState;\n  // flammable;\n  // gasesUnderPressure;\n  // selfReactive;\n  // substancesMixtures;\n  // waterFlammable;\n  // oxidizing;\n  // organicPeroxides;\n  // corrosiveMetals;\n  // combustibleDusts;\n  // simpleAsphyxiants;\n  // physicalHazardsNotClassified;\n\n  //Inventory Info section\n  recentRequest;\n\n  model: any = {};\n\n  //Format section\n  oneProductPerRow;\n  oneRowPerLocation;\n\n  arrayAuth: number;\n  topauths = new FormControl();\n  // authorities = [\n  //   {value: 1, viewValue:'Fraser Health Authority' },\n  //   {value:2, viewValue:'Northern Health' },\n  //   {value:3, viewValue: 'Coastal Health'}\n  // ];\n  authorities;\n\n  //Health Properties section\n  // acuteToxicity;\n  // skinCorrosion;\n  // eyeDamage;\n  // respiratory;\n  // germCell;\n  // carcinogenicity;\n  // reproductive;\n  // specificOrgan;\n  // aspirationHazard;\n  // biohazardous;\n  // healthHazard;\n\n  selection;\n  ProductName;\n  report;\n  selectedBox;\n  selectedAuth: number;\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private reportService: ReportService\n  ) {}\n\n  ngOnInit() {\n    this.getAuthorityNames();\n  }\n\n  onSelectAuthority(selectedAuth: number) {\n    this.arrayAuth = selectedAuth;\n    this.authorityLocation = this.arrayAuth;\n    console.log(this.arrayAuth);\n  }\n\n  getAuthorityNames() {\n    this.userService.getAuthorityNames().subscribe(\n      res => {\n        // console.log(res);\n        this.authorities = res;\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  openDiaglogGenerate(authority) {\n    const dialogRef = this.dialog.open(GenerateComponent, {\n      data: {\n        authority: authority\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  openDiaglogSchedule(authority) {\n    const dialogRef = this.dialog.open(ScheduleComponent, {\n      data: {\n        authority: authority\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  onProductNameChecked() {\n    this.productName = '';\n    if (this.productNameChecked) {\n      this.productName = 'ProductName';\n    }\n    console.log('fn ' + this.productName);\n  }\n\n  onProductCodeChecked() {\n    this.productCode = '';\n    if (this.productCodeChecked) {\n      this.productCode = 'ProductCode';\n    }\n    console.log('fn ' + this.productCode);\n  }\n\n  onCasNumberChecked() {\n    this.casNumber = '';\n    if (this.casNumberChecked) {\n      this.casNumber = 'CasNumber';\n    }\n    console.log('fn ' + this.casNumber);\n  }\n\n  onManufacturerNameChecked() {\n    this.manufacturerName = '';\n    if (this.manufacturerNameChecked) {\n      this.manufacturerName = 'ManufacturerName';\n    }\n    console.log('fn ' + this.manufacturerName);\n  }\n\n  onAuthorityLocationChecked() {\n    this.authorityLocation = '';\n    if (this.authorityLocationChecked) {\n      this.authorityLocation = 'AuthorityLocation';\n    }\n    console.log('fn ' + this.manufacturerName);\n  }\n\n  onSdsFileChecked() {\n    this.sdsFile = '';\n    if (this.sdsFileChecked) {\n      this.sdsFile = 'SDSFile';\n    }\n    console.log('fn ' + this.sdsFile);\n  }\n\n  onSdsFormatChecked() {\n    this.sdsFormat = '';\n    if (this.sdsFormatChecked) {\n      this.sdsFormat = 'SDSFormat';\n    }\n    console.log('fn ' + this.sdsFormat);\n  }\n\n  onSdsOriginChecked() {\n    this.sdsOrigin = '';\n    if (this.sdsOriginChecked) {\n      this.sdsOrigin = 'SDSOrigin';\n    }\n    console.log('fn ' + this.sdsOrigin);\n  }\n\n  onCreationDateChecked() {\n    this.creationDate = '';\n    if (this.creationDateChecked) {\n      this.creationDate = 'CreatedDate';\n    }\n    console.log('fn ' + this.creationDate);\n  }\n\n  onModifiedDateChecked() {\n    this.modifiedDate = '';\n    if (this.modifiedDateChecked) {\n      this.modifiedDate = 'DateModified';\n    }\n    console.log('fn ' + this.modifiedDate);\n  }\n\n  onRevisionDateChecked() {\n    this.revisionDate = '';\n    if (this.revisionDateChecked) {\n      this.revisionDate = 'RevisionDate';\n    }\n    console.log('fn ' + this.revisionDate);\n  }\n\n  onProductAliasChecked() {\n    this.productAlias = '';\n    if (this.productAliasChecked) {\n      this.productAlias = 'ProductAlias';\n    }\n    console.log('fn ' + this.productAlias);\n  }\n\n  onDiscontinuedChecked() {\n    this.discontinued = '';\n    if (this.discontinuedChecked) {\n      this.discontinued = 'Discontinued';\n    }\n    console.log('fn ' + this.discontinued);\n  }\n\n  onWHMISExemptChecked() {\n    this.exemptWHMIS = '';\n    if (this.exemptWHMISChecked) {\n      this.exemptWHMIS = 'WHMISExempt';\n    }\n    console.log('fn ' + this.exemptWHMIS);\n  }\n\n  // onExemptionClassChecked() {\n  //   this.exemptionClass = \"\"\n  //   if (this.exemptionClassChecked) {\n  //     this.exemptionClass = \"ExemptionClass\"\n  //   }\n  //   console.log(\"fn \" + this.exemptionClass);\n  // }\n\n  onRegistrationNumberChecked() {\n    this.registrationNumber = '';\n    if (this.registrationNumberChecked) {\n      this.registrationNumber = 'RegistrationNumber';\n    }\n    console.log('fn ' + this.registrationNumber);\n  }\n\n  onAdditionalSuppliersChecked() {\n    this.additionalSupplier = '';\n    if (this.additionalSupplierChecked) {\n      this.additionalSupplier = 'AdditionalSuppliers';\n    }\n    console.log('fn ' + this.additionalSupplier);\n  }\n\n  onNotesChecked() {\n    this.notes = '';\n    if (this.notesChecked) {\n      this.notes = 'Notes';\n    }\n    console.log('fn ' + this.notes);\n  }\n\n  // onStatusChecked() {\n  //   this.status = \"\"\n  //   if (this.statusChecked) {\n  //     this.status = \"Status\"\n  //   }\n  //   console.log(\"fn \" + this.status);\n  // }\n\n  onUrlChecked() {\n    this.url = '';\n    if (this.urlChecked) {\n      this.url = 'URL';\n    }\n    console.log('fn ' + this.url);\n  }\n\n  onSDSURLChecked() {\n    this.sdsURL = '';\n    if (this.sdsURLChecked) {\n      this.sdsURL = 'SDS_URL';\n    }\n    console.log('fn ' + this.sdsURL);\n  }\n\n  onContactLocationChecked() {\n    this.contactLocation = '';\n    if (this.contactLocationChecked) {\n      this.contactLocation = 'ContactLocation';\n    }\n    console.log('fn ' + this.contactLocation);\n  }\n\n  onContactEmailChecked() {\n    this.contactEmail = '';\n    if (this.contactEmailChecked) {\n      this.contactEmail = 'ContactEmail';\n    }\n    console.log('fn ' + this.contactEmail);\n  }\n  // onEffectiveContactMethodChecked() {\n  //   this.effectiveContactMethod = '';\n  //   if (this.effectiveContactMethodChecked) {\n  //     this.effectiveContactMethod = 'EffectiveContactMethod';\n  //   }\n  //   console.log('fn ' + this.effectiveContactMethod);\n  // }\n\n  onContactDetailsChecked() {\n    this.contactDetails = '';\n    if (this.contactDetailsChecked) {\n      this.contactDetails = 'ContactDetails';\n    }\n    console.log('fn ' + this.contactDetails);\n  }\n\n  onMostRecentRequestDateChecked() {\n    this.mostRecentRequestDate = '';\n    if (this.mostRecentRequestDateChecked) {\n      this.mostRecentRequestDate = 'MostRecentRequestDate';\n    }\n    console.log('fn ' + this.mostRecentRequestDate);\n  }\n\n  locationList = new FormControl('', [Validators.required]);\n  locations;\n  locationArray;\n  selected: number;\n  myList: any = [];\n\n  // selected;\n\n  onSelectLocations(selected) {\n    this.myList = selected;\n    this.model.manufacturerId = this.myList;\n  }\n\n  generateExcelReport() {\n    let params = new URLSearchParams();\n    params.append('selection', this.productName);\n    params.append('selection', this.productCode);\n    params.append('selection', this.casNumber);\n    params.append('selection', this.manufacturerName);\n    params.append('selection', this.sdsFile);\n    params.append('selection', this.sdsFormat);\n    params.append('selection', this.sdsOrigin);\n    params.append('selection', this.creationDate);\n    params.append('selection', this.modifiedDate);\n    params.append('selection', this.revisionDate);\n    params.append('selection', this.productAlias);\n    params.append('selection', this.discontinued);\n    params.append('selection', this.exemptWHMIS);\n    // params.append('selection', this.exemptionClass);\n    params.append('selection', this.registrationNumber);\n    params.append('selection', this.additionalSupplier);\n    params.append('selection', this.notes);\n    params.append('selection', this.mostRecentRequestDate);\n    params.append('selection', this.url);\n    params.append('selection', this.sdsURL);\n    params.append('selection', this.contactLocation);\n    params.append('selection', this.contactEmail);\n    // params.append('selection', this.effectiveContactMethod);\n    params.append('selection', this.contactDetails);\n    // params.append('selection', this.status);\n    for (const authorityLoc of this.authorityLocation) {\n      params.append('authorityUnitId', authorityLoc);\n    }\n\n    this.isLoading = true;\n    this.reportService.generateReport(params).subscribe(\n      blob => {\n        this.report = blob;\n        this.authorityLocation = this.arrayAuth;\n        console.log('params: ' + params);\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = 'Product';\n        link.click();\n        this.alertify.success('Product Report Generation is Completed');\n        // console.log(\"GenerateReport(): \" + blob);\n        // console.log(\"GenerateReport(): \" + this.report);\n        // console.log(\"GenerateReport() Auth: \" + this.arrayAuth);\n        this.isLoading = false;\n      },\n      error => {\n        this.alertify.error(\n          'Product Report Generation failed, please try again!'\n        );\n      }\n    );\n  }\n\n  generateButton(selectedBox) {\n    this.selection = selectedBox;\n\n    //this.reportGeneration.ProductName = this.form.controls['ProductName'];\n\n    console.log(this.selection);\n    console.log(selectedBox);\n    this.generateExcelReport();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVwb3J0L3NjaGVkdWxlL3NjaGVkdWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<report-menu></report-menu>\\n<section fxLayout fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"result\\\" style=\\\"width: 60%;\\\">\\n    <mat-card-content>\\n      <h4 >Currently Schedule Report</h4>\\n\\n      <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n        <button mat-raised-button style=\\\"margin-right: 15%;\\\" color=\\\"primary\\\">Create Report</button>\\n      </mat-card-actions>\\n\\n      <app-auth-levels \\n        (selectedAuthorityChange)=\\\"onReceivedTopLevel($event)\\\" \\n        [selectedAuthority]=\\\"selectedAuthority\\\" \\n\\n        (selectedLevel1AuthorityChange)=\\\"onReceivedLevel1($event)\\\"\\n        [selectedLevel1Authority]= \\\"selectedLevel1Authority\\\"\\n\\n        (selectedLevel2AuthorityChange) = \\\"onReceivedLevel2($event)\\\"\\n        [selectedLevel2Authority]= \\\"selectedLevel2Authority\\\"\\n\\n      >\\n      \\n      </app-auth-levels>\\n\\n    </mat-card-content>\\n  </mat-card>\\n</section>\\n \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})\nexport class ScheduleComponent implements OnInit {\n  selectedAuthority;\n  selectedLevel1Authority;\n  selectedLevel2Authority;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onReceivedTopLevel(topAuth)\n  {\n    console.log('got it ' + topAuth);\n  }\n\n  onReceivedLevel1(level1Auth) {\n    console.log(\"got l1 \" + level1Auth);\n  }\n\n  onReceivedLevel2(level2Auth) {\n    console.log(\"got l2 \" + level2Auth);\n    console.log(\"what do we have for selectedLevel2Authority \" + this.selectedLevel2Authority);\n  }\n\n}\n","module.exports = \".example-h2 {\\n    margin: 10px;\\n  }\\n  \\n  .example-section {\\n    display: flex;\\n    align-content: flex-start;\\n    align-items: center;\\n    height: 60px;\\n  }\\n  \\n  .example-margin {\\n    margin: 0 20px;\\n  }\\n  \\n  mat-grid-tile {\\n    background: lightblue;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZXBvcnQvdXNlci1yZXBvcnQvdXNlci1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkIiLCJmaWxlIjoiYXBwL3JlcG9ydC91c2VyLXJlcG9ydC91c2VyLXJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtaDIge1xuICAgIG1hcmdpbjogMTBweDtcbiAgfVxuICBcbiAgLmV4YW1wbGUtc2VjdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICB9XG4gIFxuICAuZXhhbXBsZS1tYXJnaW4ge1xuICAgIG1hcmdpbjogMCAyMHB4O1xuICB9XG5cbiAgbWF0LWdyaWQtdGlsZSB7XG4gICAgYmFja2dyb3VuZDogbGlnaHRibHVlO1xuICB9Il19 */\"","module.exports = \"<report-menu></report-menu>\\n<section  fxLayout fxLayoutAlign=\\\"center center\\\">\\n    <div *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\">\\n        <mat-progress-bar color=\\\"primary\\\"  mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      </div>\\n  <mat-card style=\\\"width: 65%;\\\" >\\n    <mat-card-title>\\n      <h2>Users Info</h2>\\n    </mat-card-title>\\n    <mat-card-content>\\n      <mat-checkbox class=\\\"example-margin sub-title\\\" [(ngModel)]=\\\"checkAll\\\" (change)=\\\"onSelectAllClick()\\\">Check All</mat-checkbox>\\n      <section class=\\\"example-section\\\">\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"firstNameChecked\\\" [checked]=\\\"firstNameChecked\\\" (change)=\\\"onFirstnameChecked()\\\">First Name</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"lastNameChecked\\\" (change)=\\\"onLastNameChecked()\\\">Last Name</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"contactNameChecked\\\" (change)=\\\"onContactNameChecked()\\\">Contact Name</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"addressChecked\\\" (change)=\\\"onAddressChecked()\\\">Address</mat-checkbox>\\n        </span>\\n      </section>\\n\\n\\n      <section class=\\\"example-section\\\">\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"cityChecked\\\" (change)=\\\"onCityChecked()\\\">City</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"provinceChecked\\\" (change)=\\\"onProvinceChecked()\\\">Province</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"countryChecked\\\" (change)=\\\"onCountryChecked()\\\">Country</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"postalCodeChecked\\\" (change)=\\\"onPostalCodeChecked()\\\">Postal Code</mat-checkbox>\\n        </span>\\n      </section>\\n\\n      <section class=\\\"example-section\\\">\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"phoneChecked\\\" (change)=\\\"onPostalCodeChecked()\\\">Phone</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"faxChecked\\\" (change)=\\\"onFaxChecked()\\\">Fax</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"emailChecked\\\" (change)=\\\"onEmailChecked()\\\">Email</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"userNameChecked\\\" (change)=\\\"onUserNameChecked()\\\">User Name</mat-checkbox>\\n        </span>\\n      </section>\\n      <section class=\\\"example-section\\\">\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"authoritiesChecked\\\" (change)=\\\"onAuthoritiesChecked()\\\">Authorities</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"roleChecked\\\" (change)=\\\"onRoleChecked()\\\">Security Group</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"creationDateChecked\\\" (change)=\\\"onCreationDateChecked()\\\">Creation Date</mat-checkbox>\\n        </span>\\n        <span style=\\\"width:200px;\\\">\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"notesChecked\\\" (change)=\\\"onNotesChecked()\\\">Notes</mat-checkbox>\\n        </span>\\n      </section>\\n      <section class=\\\"example-section\\\" fxLayout fxLayoutAlign=\\\"flex-end\\\" style=\\\"margin-right:20%;\\\">\\n        \\n        <mat-card-actions>\\n            <button\\n            mat-raised-button\\n            style=\\\"margin-left: 30%\\\"\\n            (click)=\\\"generateUserReportToExcel()\\\"\\n          >\\n            <a [target]=\\\"'_blank'\\\">Generate Report</a>\\n          </button>        </mat-card-actions>\\n      </section>\\n\\n    </mat-card-content>\\n  </mat-card>\\n\\n\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { ReportService } from 'src/app/_service/report.service';\n\n@Component({\n  selector: 'user-report',\n  templateUrl: './user-report.component.html',\n  styleUrls: ['./user-report.component.css']\n})\nexport class UserReportComponent implements OnInit {\n\n  checkAll = false;\n  firstName ;\n  firstNameChecked = false;\n  lastName ;\n  lastNameChecked = false;\n  contactName;\n  contactNameChecked = false;\n  address;\n  addressChecked = false;\n  city;\n  cityChecked = false;\n  province;\n  provinceChecked = false;\n  country;\n  countryChecked = false;\n  postalCode;\n  postalCodeChecked = false;\n  phone;\n  phoneChecked = false;\n  fax;\n  faxChecked = false;\n  email;\n  emailChecked = false;\n  userName;\n  userNameChecked = false;\n  authorities;\n  authoritiesChecked = false;\n  role;\n  roleChecked = false;\n  creationDate;\n  creationDateChecked = false;\n  notes;\n  notesChecked = false;\n\n  isLoading = false;\n\n  report;\n\n  constructor(\n    private alertify: AlertifyService,\n    private reportService: ReportService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSelectAllClick() {\n    this.checkAll = true;\n    this.firstNameChecked = !this.firstNameChecked;\n    this.lastNameChecked = !this.lastNameChecked;\n    this.contactNameChecked = !this.contactNameChecked;\n    this.addressChecked = !this.addressChecked;\n    this.cityChecked = !this.cityChecked;\n    this.provinceChecked = !this.provinceChecked;\n    this.countryChecked = !this.countryChecked;\n    this.postalCodeChecked = !this.postalCodeChecked;\n    this.phoneChecked = !this.phoneChecked;\n    this.faxChecked = !this.faxChecked;\n    this.emailChecked = !this.emailChecked;\n    this.userNameChecked = !this.userNameChecked;\n    this.authoritiesChecked = !this.authoritiesChecked;\n    this.roleChecked = !this.roleChecked;\n    this.creationDateChecked = !this.creationDateChecked;\n    this.notesChecked = !this.notesChecked;\n  }\n\n  onFirstnameChecked() {\n    this.firstName = ''\n    if (this.firstNameChecked) {\n      this.firstName = 'FirstName'\n    }\n    console.log('fn ' + this.firstName);\n  }\n\n  onLastNameChecked() {\n    \n    this.lastName = '';\n    if (this.lastNameChecked) {\n      this.lastName = 'LastName';\n    }\n    console.log('ln ' + this.lastName);\n     \n  }\n\n  onContactNameChecked() {\n   this.contactName = '';\n    if (this.contactNameChecked) {\n      this.contactName = 'ContactName';\n    }\n    console.log('contactName: ' + this.contactName);\n  }\n\n  onAddressChecked() {\n    this.address = '';\n    if (this.addressChecked) {\n      this.address = 'Address';\n    }\n    console.log('address: ' + this.address);\n  }\n  \n  onCityChecked() {\n    this.city = '';\n    if (this.cityChecked) {\n      this.city = 'City';\n    }\n    console.log('city: ' + this.city);\n  }\n\n  onProvinceChecked() {\n    this.province = '';\n    if (this.provinceChecked) {\n      this.province = 'Province';\n    }\n    console.log('province: ' + this.province);\n  }\n\n  onCountryChecked() {\n    this.country = '';\n    if (this.countryChecked) {\n      this.country = 'Country';\n    }\n    console.log('country: ' + this.country);\n  }\n\n  onPostalCodeChecked() {\n    this.postalCode = '';\n    if (this.postalCodeChecked) {\n      this.postalCode = 'PostalCode';\n    }\n    console.log('postalCode: ' + this.postalCode);\n  }\n\n  onPhoneChecked() {\n    this.phone = '';\n    if (this.phoneChecked) {\n      this.phone = 'Phone';\n    }\n    console.log('phone: ' + this.phone);\n  }\n\n  onFaxChecked() {\n    this.fax = '';\n    if (this.faxChecked) {\n      this.fax = 'Fax';\n    }\n    console.log('fax: ' + this.fax);\n  }\n\n  onEmailChecked() {\n    this.email = '';\n    if (this.emailChecked) {\n      this.email = 'Email';\n    }\n    console.log('email: ' + this.email);\n  }\n\n  onUserNameChecked() {\n    this.userName = '';\n    if (this.userNameChecked) {\n      this.userName = 'UserName';\n    }\n    console.log('userName: ' + this.userName);\n  }\n\n  onAuthoritiesChecked() {\n    this.authorities = '';\n    if (this.authoritiesChecked) {\n      this.authorities = 'Authorities'\n    }\n    console.log('Authorities: ' + this.authorities);\n  }\n\n  onRoleChecked() {\n    this.role = '';\n    if (this.roleChecked) {\n      this.role = 'UserType';\n    }\n    console.log('role: ' + this.role);\n  }\n\n  onCreationDateChecked() {\n    this.creationDate = '';\n    if (this.creationDateChecked) {\n      this.creationDate = 'CreationDate';\n    }\n    console.log('CreationDate: ' + this.creationDate);\n  }\n\n  onNotesChecked() {\n    this.notes = '';\n    if (this.notesChecked) {\n      this.notes = 'Notes';\n    }\n    console.log('notes: ' + this.notes);\n  }\n\n\n  generateUserReportToExcel() {\n    let params = new URLSearchParams();\n    params.append('selection', this.firstName);\n    params.append('selection', this.lastName);\n    params.append('selection', this.contactName);\n    params.append('selection', this.address);\n    params.append('selection', this.city);\n    params.append('selection', this.province);\n    params.append('selection', this.country);\n    params.append('selection', this.creationDate);\n    params.append('selection', this.postalCode);\n    params.append('selection', this.phone);\n    params.append('selection', this.fax);\n    params.append('selection', this.email);\n    params.append('selection', this.userName);\n    params.append('selection', this.authorities);\n    params.append('selection', this.role);\n    params.append('selection', this.notes);\n    params.append('selection', this.creationDate);\n\n    this.isLoading = true;\n    this.reportService.generateUserReport(params).subscribe(\n      blob => {\n        this.report = blob;\n\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = 'User';\n        link.click();\n        this.alertify.success('User Report Generation is Completed');\n\n        this.isLoading = false;\n      },\n      error => {\n        this.alertify.error('User Report Generation failed, please try again!');\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVxdWVzdC9yZXF1ZXN0LWNvbmZpcm0vcmVxdWVzdC1jb25maXJtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Your request has been sent!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'request-confirm',\n  templateUrl: './request-confirm.component.html',\n  styleUrls: ['./request-confirm.component.css']\n})\nexport class RequestConfirmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVxdWVzdC9yZXF1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <section fxLayout fxLayoutAlign=\\\"center center\\\">\\n    <mat-card style=\\\"width: 65%;\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div mat-card-title>SDS Request</div>\\n        <mat-card-content style=\\\"width:95%;\\\">\\n            <form [formGroup]=\\\"requestForm\\\" (ngSubmit)=\\\"onFormSubmit(requestForm.value)\\\" fxLayout=\\\"column\\\"\\n                fxLayoutAling=\\\"center center\\\" style=\\\"width: 95%\\\">\\n                <div class=\\\"sub-title-bold\\\">Product Information</div>\\n                <mat-form-field >\\n                    <input formControlName=\\\"supplierManufacturer\\\" matInput placeholder=\\\"supplier manufacturer\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"productName\\\" matInput placeholder=\\\"product name\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"catalogNumber\\\" matInput placeholder=\\\"catalog number\\\">\\n                </mat-form-field>\\n                <div class=\\\"sub-title-bold\\\">Your Contact Information</div>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"fullName\\\" matInput placeholder=\\\"Full Name\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"emailAddress\\\" matInput placeholder=\\\"email address\\\" readonly>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"phoneNumber\\\" matInput placeholder=\\\"phone number\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"healthAuthority\\\" matInput placeholder=\\\"health authority\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"demo-full-width\\\">\\n                    <input formControlName=\\\"department\\\" matInput placeholder=\\\"department\\\">\\n                </mat-form-field>\\n                <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDiaglogRequest()\\\">Submit</button>\\n                </mat-card-actions>\\n            </form>\\n        </mat-card-content>\\n    </mat-card>\\n</section> -->\\n\\n<section fxLayout fxLayoutAlign=\\\"center center\\\">\\n  <mat-card style=\\\"width: 65%;\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div mat-card-title>SDS Request</div>\\n    <mat-card-content style=\\\"width:95%;\\\">\\n      <form\\n        id=\\\"requestId\\\"\\n        #requestForm=\\\"ngForm\\\"\\n        [formGroup]=\\\"sdsRequestForm\\\"\\n        (submit)=\\\"processForm(requestForm)\\\"\\n      >\\n        <h2>\\n          Product Request\\n        </h2>\\n\\n        <!-- <button\\n          class=\\\"actions\\\"\\n          mat-raised-button\\n          type=\\\"submit\\\"\\n          id=\\\"requestId\\\"\\n          (click)=\\\"submitButton()\\\"\\n          [disabled]=\\\"clicked > 4\\\"\\n          style=\\\"margin-bottom: 3%; margin-left: 80%;\\\"\\n        >\\n          Click To Add\\n        </button> -->\\n        <button\\n        class=\\\"actions\\\" mat-raised-button type=\\\"button\\\" id=\\\"requestId\\\"\\n        (click)=\\\"submitButton()\\\" [disabled]=\\\"disableButton()\\\"\\n        style=\\\"margin-bottom: 3%; margin-left: 80%;\\\">Click To Add</button>\\n\\n        <ng-template\\n          ngFor\\n          let-request\\n          [ngForOf]=\\\"form.requests\\\"\\n          let-index=\\\"index\\\"\\n          let-isLast=\\\"last\\\"\\n        >\\n          <!-- <div\\n            class=\\\"request\\\"\\n            [class.request--invalid]=\\\"\\n              nameControl.touched && nameControl.invalid\\n            \\\"\\n          >\\n            <mat-form-field style=\\\"margin-right:2%\\\">\\n              <input\\n                #nameControl=\\\"ngModel\\\"\\n                matInput\\n                type=\\\"text\\\"\\n                name=\\\"name_{{ request.id }}\\\"\\n                [(ngModel)]=\\\"request.productName\\\"\\n                required\\n                autofocus\\n                size=\\\"20\\\"\\n                placeholder=\\\"Product Name\\\"\\n              />\\n            </mat-form-field> -->\\n            <div\\n            class=\\\"request\\\"\\n          >\\n            <mat-form-field style=\\\"margin-right:2%\\\">\\n              <input\\n                formControlName=\\\"productFormControl\\\"\\n                matInput\\n                type=\\\"text\\\"\\n                name=\\\"name_{{ request.id }}\\\"\\n                [(ngModel)]=\\\"request.productName\\\"\\n                autofocus\\n                size=\\\"20\\\"\\n                placeholder=\\\"Product Name\\\"\\n              />\\n              <mat-error *ngIf=\\\"sdsRequestForm.get('productFormControl').hasError('required')\\\">\\n                  A product <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <!-- <mat-form-field style=\\\"margin-right:2%\\\">\\n              <input\\n                type=\\\"text\\\"\\n                matInput\\n                name=\\\"manufacturer_{{ request.id }}\\\"\\n                [(ngModel)]=\\\"request.manufacturer\\\"\\n                required\\n                size=\\\"10\\\"\\n                placeholder=\\\"Manufacturer\\\"\\n              />\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <input\\n                type=\\\"text\\\"\\n                matInput\\n                name=\\\"casNumber{{ request.id }}\\\"\\n                [(ngModel)]=\\\"request.casNumber\\\"\\n                required\\n                size=\\\"10\\\"\\n                placeholder=\\\"Catalog number\\\"\\n              />\\n            </mat-form-field> -->\\n\\n            <mat-form-field style=\\\"margin-right:2%\\\">\\n                <input\\n                formControlName=\\\"manufacturerFormControl\\\"\\n                  type=\\\"text\\\"\\n                  matInput\\n                  name=\\\"manufacturer_{{ request.id }}\\\"\\n                  [(ngModel)]=\\\"request.manufacturer\\\"\\n                  size=\\\"10\\\"\\n                  placeholder=\\\"Manufacturer\\\"\\n                />\\n                <mat-error *ngIf=\\\"sdsRequestForm.get('manufacturerFormControl').hasError('required')\\\">\\n                    A manufacturer <strong>required</strong>\\n                  </mat-error>\\n              </mat-form-field>\\n  \\n              <mat-form-field>\\n                <input\\n                formControlName=\\\"casNoFormControl\\\"\\n                  type=\\\"text\\\"\\n                  matInput\\n                  name=\\\"casNumber{{ request.id }}\\\"\\n                  [(ngModel)]=\\\"request.casNumber\\\"\\n                  size=\\\"10\\\"\\n                  placeholder=\\\"Catalog number\\\"\\n                />\\n                <mat-error *ngIf=\\\"sdsRequestForm.get('casNoFormControl').hasError('required')\\\">\\n                    A catalog number <strong>required</strong>\\n                  </mat-error>\\n              </mat-form-field>\\n\\n            <a style=\\\"cursor: pointer;\\\" (click)=\\\"removeProductRequest(index)\\\"\\n              title=\\\"Remove Product\\\" class=\\\"remove\\\">&times;\\n            </a>\\n          </div>\\n        </ng-template>\\n\\n        <br />\\n\\n        <div class=\\\"sub-title-bold\\\">Your Contact Information</div>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <input matInput maxlength=\\\"125\\\" placeholder=\\\"Full Name\\\" formControlName=\\\"fullNameFormControl\\\">\\n            <mat-error *ngIf=\\\"sdsRequestForm.get('fullNameFormControl').hasError('required')\\\">\\n                Full Name is <strong>required</strong>\\n              </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <input matInput placeholder=\\\"Email Address\\\" formControlName=\\\"emailFormControl\\\">\\n              <mat-error *ngIf=\\\"sdsRequestForm.get('emailFormControl').hasError('email') && sdsRequestForm.get('emailFormControl').hasError('pattern')\\\">\\n                Please enter a valid email address\\n              </mat-error>\\n              <mat-error *ngIf=\\\"sdsRequestForm.get('emailFormControl').hasError('required')\\\">\\n                Email is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 30% !important\\\">\\n            <mat-label>Are you a health care worker?</mat-label>\\n            <mat-select (selectionChange)=\\\"onSelectCareWorkerConfirmation($event)\\\" [(value)]=\\\"selectedSearchParameter\\\">\\n              <mat-option value=\\\"Yes\\\">Yes</mat-option>\\n              <mat-option value=\\\"No\\\">No</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <input maxlength=\\\"10\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phoneNumberFormControl\\\">\\n              <mat-error *ngIf=\\\"sdsRequestForm.get('phoneNumberFormControl').hasError('required')\\\">\\n                  Phone number is <strong>required</strong>\\n                </mat-error>\\n              <mat-error *ngIf=\\\"!sdsRequestForm.get('phoneNumberFormControl').hasError('required') && sdsRequestForm.get('phoneNumberFormControl').hasError('pattern')\\\">\\n                  Please enter valid phone number\\n                 </mat-error>\\n            </mat-form-field>\\n\\n            <!-- <mat-form-field style=\\\"width: 30% !important\\\">\\n                <mat-label>Health Authority/Region</mat-label>\\n                <mat-select (selectionChange)=\\\"onSelectCareWorkerConfirmation($event)\\\" [(value)]=\\\"selectedSearchParameter\\\">\\n                  <mat-option value=\\\"Yes\\\">Yes</mat-option>\\n                  <mat-option value=\\\"No\\\">No</mat-option>\\n                </mat-select>\\n              </mat-form-field> -->\\n<!-- \\n            <mat-form-field class=\\\"fullWidth\\\">\\n                <input matInput maxlength=\\\"100\\\" placeholder=\\\"Health Authority/Region\\\" matInput=\\\"healthAuthorityFormControl\\\">\\n                <mat-error *ngIf=\\\"sdsRequestForm.get('healthAuthorityFormControl').hasError('required')\\\">\\n                    Health Authority/Region is <strong>required</strong>\\n                  </mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput readonly=\\\"true\\\"  placeholder=\\\"Health Authority/Region\\\" [(ngModel)]=\\\"userLocationName\\\" formControlName=\\\"userLocationFormControl\\\">\\n                </mat-form-field> -->\\n      \\n                <mat-form-field class=\\\"fullWidth\\\">\\n                    <mat-select placeholder=\\\"Health Authority/Region\\\" (selectionChange)=\\\"selectedHealthAuthorityLocation($event)\\\" [(value)]=\\\"selectedHealthAuthority\\\" required formControlName=\\\"userLocationFormControl\\\"> \\n                      <mat-option *ngFor=\\\"let location of userTopLocation\\\" [value]=\\\"location.authorityUnitId\\\">\\n                        {{location.locationName}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n\\n\\n                  <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"isSelectedTopAuth\\\">\\n                      <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"selectedLevel1Location($event)\\\" [(value)]=\\\"selectedLevel1Authority\\\" required formControlName=\\\"siteLocationFormControl\\\"> \\n                        <mat-option *ngFor=\\\"let level1Location of userLevel1Loc\\\" [value]=\\\"level1Location.locationId\\\">\\n                          {{level1Location.locationName}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n\\n                    <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"isSelectedLevel1 && level2HasChildren === 'true'\\\">\\n                        <mat-select placeholder=\\\"Facility\\\" (selectionChange)=\\\"selectedLevel2Location($event)\\\" [(value)]=\\\"selectedLevel2Authority\\\" required formControlName=\\\"facilityFormControl\\\"> \\n                          <mat-option *ngFor=\\\"let level2Location of userLevel2Loc\\\" [value]=\\\"level2Location.locationId\\\">\\n                            {{level2Location.locationName}}\\n                          </mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n<!-- \\n                      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"level1HasChildren === 'true'\\\">\\n                          <mat-select placeholder=\\\"Department\\\" (selectionChange)=\\\"selectedLevel3Location($event)\\\" [(value)]=\\\"selectedLevel3Authority\\\" required formControlName=\\\"departmentFormControl\\\"> \\n                            <mat-option *ngFor=\\\"let level3Location of userLevel3Loc\\\" [value]=\\\"level3Location.locationId\\\">\\n                              {{level3Location.locationName}}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n\\n                        <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"isSelectedLevel3\\\">\\n                            <mat-select placeholder=\\\"Sub-Department\\\" (selectionChange)=\\\"selectedLevel4Location($event)\\\" [(value)]=\\\"selectedLevel4Authority\\\" required formControlName=\\\"subDepartmentLocationFormControl\\\"> \\n                              <mat-option *ngFor=\\\"let level4Location of userLevel4Loc\\\" [value]=\\\"level4Location.locationId\\\">\\n                                {{level4Location.locationName}}\\n                              </mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n\\n                          <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"isSelectedLevel4\\\">\\n                              <mat-select placeholder=\\\"Floor\\\" (selectionChange)=\\\"selectedLevel5Location($event)\\\" [(value)]=\\\"selectedLevel5Authority\\\" required formControlName=\\\"floorLocationFormControl\\\"> \\n                                <mat-option *ngFor=\\\"let level5Location of userLevel4Loc\\\" [value]=\\\"level5Location.locationId\\\">\\n                                  {{level5Location.locationName}}\\n                                </mat-option>\\n                              </mat-select>\\n                            </mat-form-field> -->\\n\\n              <!-- <mat-form-field class=\\\"fullWidth\\\">\\n                  <input matInput maxlength=\\\"100\\\" placeholder=\\\"Facility\\\" formControlName=\\\"facilityFormControl\\\">\\n                  <mat-error *ngIf=\\\"sdsRequestForm.get('facilityFormControl').hasError('required')\\\">\\n                      Facility is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field> -->\\n\\n                <!-- <mat-form-field class=\\\"fullWidth\\\">\\n                    <input matInput maxlength=\\\"100\\\" placeholder=\\\"Department/Service\\\" formControlName=\\\"departmentFormControl\\\">\\n                  </mat-form-field> -->\\n              \\n                  <mat-form-field class=\\\"fullWidth\\\">\\n                      <input matInput maxlength=\\\"100\\\" placeholder=\\\"Address\\\" formControlName=\\\"addressFormControl\\\">\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"fullWidth\\\">\\n                        <input matInput maxlength=\\\"20\\\" placeholder=\\\"City\\\" formControlName=\\\"cityFormControl\\\">\\n                      </mat-form-field>\\n                      <mat-form-field class=\\\"fullWidth\\\">\\n                          <input matInput maxlength=\\\"20\\\" placeholder=\\\"Province/State\\\" formControlName=\\\"provinceFormControl\\\">\\n                        </mat-form-field>\\n\\n                        <mat-form-field class=\\\"fullWidth\\\">\\n                            <input matInput maxlength=\\\"6\\\" placeholder=\\\"Postal Code\\\" formControlName=\\\"postalCodeFormControl\\\">\\n                          </mat-form-field>\\n\\n                          <mat-form-field class=\\\"fullWidth\\\">\\n                              <textarea maxlength=\\\"500\\\" matInput placeholder=\\\"Comments\\\" formControlName=\\\"commentFormControl\\\"></textarea>\\n                              <mat-error *ngIf=\\\"sdsRequestForm.get('commentFormControl').hasError('required')\\\">\\n                                  Message is <strong>required</strong>\\n                                </mat-error>\\n                            </mat-form-field>\\n<!-- \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input [(ngModel)]=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" matInput placeholder=\\\"Phone Number\\\" required />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input [(ngModel)]=\\\"healthAuthority\\\" name=\\\"healthAuthority\\\" matInput placeholder=\\\"Health Authority/Employer\\\" required />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input [(ngModel)]=\\\"facility\\\" name=\\\"facility\\\" matInput placeholder=\\\"Facility\\\" required />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input [(ngModel)]=\\\"department\\\" name=\\\"department\\\" matInput placeholder=\\\"Department\\\" required />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <textarea [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\" matInput placeholder=\\\"Comment\\\"></textarea>\\n        </mat-form-field> -->\\n\\n        <p>To request more products, please download the excel template:</p>\\n        <a href=\\\"assets/requestForm/ProductRequestForm.xls\\\" download>\\n          <p>Please click here</p>\\n        </a>\\n\\n        <p>\\n          After filling out the excel document, please mail this to:\\n          <a href=\\\"mailto:msdsrequest@gmail.com\\\">msdsrequest@gmail.com</a>\\n        </p>\\n\\n        <br />\\n        <br />\\n        <br />\\n\\n        <mat-card-actions fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n            <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"sdsRequestForm.invalid\\\" color=\\\"primary\\\" (click)=\\\"sdsRequest()\\\">Submit</button>\\n            <button mat-raised-button type=\\\"button\\\" color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Clear</button>\\n          </mat-card-actions>\\n\\n        <!-- <button\\n          class=\\\"actions\\\"\\n          mat-raised-button\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"!requestForm.form.valid\\\"\\n          style=\\\"margin-bottom: 5%\\\"\\n          (click)=\\\"sdsRequest()\\\"\\n        >\\n          Submit Request\\n        </button> -->\\n\\n        <!-- <button\\n        class=\\\"actions\\\"\\n        mat-raised-button\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"!requestForm.form.valid\\\"\\n        style=\\\"margin-bottom: 5%\\\"\\n      >\\n        Submit Request\\n      </button> -->\\n\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</section>\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormsModule,\n  NgForm\n} from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\n\nimport { AuthService } from '../_service/auth.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { SendMailService } from '../_service/send-mail.service';\nimport { RequestConfirmComponent } from './request-confirm/request-confirm.component';\nimport { SdsRequestService } from '../_service/sdsRequest.service';\n\n@Component({\n  selector: \"request\",\n  templateUrl: './request.component.html',\n  styleUrls: ['./request.component.css']\n})\nexport class RequestComponent implements OnInit {\n  // request: RequestInterface = {\n  //   manufacturer: '',\n  //   productName: '',\n  //   catalogNumber: '',\n  //   fullName: '',\n  //   emailAddress: '',\n  //   phoneNumber: '',\n  //   healthAuthority: '',\n  //   facility: '',\n  //   department: '',\n  //   IsAccepted: null\n  // };\n\n  // model: any;\n\n  model = {\n    id: null,\n    productName: '',\n    manufacturer: '',\n    casNumber: '',\n    productName1: '',\n    manufacturer1: '',\n    casNumber1: '',\n    productName2: '',\n    manufacturer2: '',\n    casNumber2: '',\n    productName3: '',\n    manufacturer3: '',\n    casNumber3: '',\n    productName4: '',\n    manufacturer4: '',\n    casNumber4: '',\n    fullName: '',\n    email: '',\n    // emailSubject: '',\n    // emailBody: '',\n    comment: '',\n    phoneNumber: '',\n    healthAuthority: '',\n    facility: '',\n    department: ''\n  };\n\n  sdsRequestForm: FormGroup;\n  manufacturer: string = '';\n  productName: string = '';\n  casNumber: string = '';\n  fullName: string = '';\n  email: string = '';\n  emailSubject: string = '';\n  emailBody: string = '';\n  phoneNumber: string = '';\n  healthAuthority: string = '';\n  comment: string = '';\n  facility: string = '';\n  department: string = '';\n  IsAccepted: number = 0;\n  test: any;\n\n  index: number;\n  userTopLocation: any;\n  userLocationName: any = {};\n  userFromCalgary: any = {};\n  userLocationId: any = {};\n  userLevel1Loc: any = [];\n  userLevel2Loc: any = [];\n  userLevel3Loc: any = [];\n  userLevel4Loc: any = [];\n  userLevel5Loc: any = [];\n\n  selectedHealthAuthority;\n  selectedLevel1Authority;\n  selectedLevel2Authority;\n  selectedLevel3Authority;\n  selectedLevel4Authority;\n  selectedLevel5Authority;\n\n  topAuthHasChildren: boolean;\n  level1HasChildren: any;\n  level2HasChildren: any;\n  level3HasChildren: boolean;\n  level4HasChildren: boolean;\n  level5HasChildren: boolean;\n\n  public form: {\n    requests: Requests[];\n  };\n\n  selectedSearchParameter = 'Yes';\n\n    requestSDS: RequestsInterface = {\n      userId: null,\n      id: null,\n      fullName: '',\n      email: '',\n      comment: '',\n      address: '',\n      city: '',\n      province: '',\n      postalCode: '',\n      phoneNumber: '',\n      isHealthCareWorker: '',\n      healthAuthority: '',\n      facility: '',\n      department: '',\n      productName: '',\n      productName1: '',\n      productName2: '',\n      productName3: '',\n      productName4: '',\n      casNumber: '',\n      casNumber1: '',\n      casNumber2: '',\n      casNumber3: '',\n      casNumber4: '',\n      manufacturer: '',\n      manufacturer1: '',\n      manufacturer2: '',\n      manufacturer3: '',\n      manufacturer4: '',\n    };\n    \n    userEmail = this.authService.decodedToken.email;\n    userId = this.authService.decodedToken.nameid;\n  constructor(\n    private dialog: MatDialog,\n    public fb: FormBuilder,\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private sendMailService: SendMailService,\n    private changeDet: ChangeDetectorRef,\n    private sdsRequestService: SdsRequestService\n  ) {\n    // this.requestForm = fb.group({\n    //   manufacturer: [null, Validators.required],\n    //   productName: [null, Validators.required],\n    //   casNumber: [null, Validators.required],\n    //   fullName: [this.fullName, Validators.required],\n    //   email: [this.email, Validators.required],\n\n    //   // email: [userEmail],\n    //   phoneNumber: [null, Validators.compose([Validators.required])],\n    //   healthAuthority: [null, Validators.required],\n    //   facility: [null, Validators.required],\n    //   department: [null, Validators.required]\n    //   // IsAccepted: [null]\n    // });\n\n    this.form = {\n      requests: []\n    };\n\n    this.sdsRequestForm = fb.group({\n      fullNameFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(125)\n      ]),\n      emailFormControl : new FormControl('', [\n        Validators.required,\n        Validators.email,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ]),\n      phoneNumberFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(10),\n        Validators.pattern('[6-9]\\\\d{9}')\n      ]),\n      healthAuthorityFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(100)\n      ]),\n      facilityFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(100)\n      ]),\n      departmentFormControl : new FormControl('', [\n        Validators.maxLength(100)\n      ]),\n      addressFormControl : new FormControl('', [\n        Validators.maxLength(100)\n      ]),\n      cityFormControl : new FormControl('', [\n        Validators.maxLength(20)\n      ]),\n      provinceFormControl : new FormControl('', [\n        Validators.maxLength(20)\n      ]),\n      postalCodeFormControl : new FormControl('', [\n        Validators.maxLength(6)\n      ]),\n      commentFormControl : new FormControl('', [\n        Validators.maxLength(500)\n      ]),\n      productFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(100)\n      ]),\n      manufacturerFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(100)\n      ]),\n      casNoFormControl : new FormControl('', [\n        Validators.required,\n        Validators.maxLength(100)\n      ]),\n      userLocationFormControl: new FormControl('', []),\n      siteLocationFormControl: new FormControl('', []),\n      subDepartmentLocationFormControl: new FormControl('', []),\n      floorLocationFormControl: new FormControl('', []),\n    });\n  }\n\n  subjectFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  onSelectCareWorkerConfirmation(event) {\n\n    if (event.value === 'Yes') {\n      this.selectedSearchParameter = event.value;\n    }\n    if (event.value === 'No') {\n      this.selectedSearchParameter = event.value;\n    }\n    console.log(this.selectedSearchParameter);\n  }\n\n  resetForm() {\n    this.selectedSearchParameter = 'Yes';\n    this.sdsRequestForm.reset();\n    this.subjectFormControl.reset(this.selectedSearchParameter);\n    this.form.requests.splice(this.index, 5);\n  }\n\n  ngOnInit() {\n    this.userHealthAuthority();\n  }\n\n  public processForm(form: any): void {\n    // console.warn('Handling form submission!');\n    //  console.group('Form Data');\n      console.log(this.form.requests);\n      console.log(this.form);\n\n    // for (const request of this.form.requests) {\n    //   // console.log(\"processForm: \" + request.productName);\n    //   this.model.productName = request.productName;\n    //   this.model.manufacturer = request.manufacturer;\n    //   this.model.casNumber = request.casNumber;\n    //   this.model.id = request.id;\n      // this.model.fullName = this.fullName;\n      // this.model.email = this.email;\n      // this.model.phoneNumber = this.phoneNumber;\n      // this.model.healthAuthority = this.healthAuthority;\n      // this.model.facility = this.facility;\n      // this.model.department = this.department;\n      // this.model.comment = this.comment;\n      // request.email = this.model.email;\n      // request.fullName = this.model.fullName;\n      // request.phoneNumber = this.model.phoneNumber;\n      // request.healthAuthority = this.model.healthAuthority;\n      // request.facility = this.model.facility;\n      // request.department = this.model.department;\n      // request.comment = this.model.comment;\n    }\n\n    //   console.groupEnd();\n\n    // //  console.group('Form Model');\n    //   console.log(form);\n    // console.groupEnd();\n  // }\n  isSelectedTopAuth: boolean;\n  selectedHealthAuthorityLocation(event) {\n    // console.log(event);\n    if (event.value !== null) {\n      this.isSelectedTopAuth = true;\n      // console.log(this.isSelectedTopAuth);\n      this.userLevel1Location();\n    }\n    // console.log(this.selectedHealthAuthority);\n  }\n\n  isSelectedLevel1: boolean;\n  selectedLevel1Location(event) {\n    if (event.value !== null) {\n      this.isSelectedLevel1 = true;\n      console.log(this.isSelectedLevel1);\n      this.userLevel2Location();\n    // console.log(event);\n    // console.log(this.selectedLevel1Authority);\n  }\n}\n\nisSelectedLevel2: boolean;\nselectedLevel2Location(event) {\n  if (event.value !== null) {\n    this.isSelectedLevel2 = true;\n    console.log(this.isSelectedLevel2);\n    this.userLevel3Location();\n  // console.log(event);\n  // console.log(this.selectedLevel2Authority);\n}\n}\n\nisSelectedLevel3: boolean;\nselectedLevel3Location(event) {\n  if (event.value !== null) {\n    this.isSelectedLevel3 = true;\n    // console.log(this.isSelectedLevel3);\n    this.userLevel4Location();\n  // console.log(event);\n  // console.log(this.selectedLevel3Authority);\n}\n}\n\nisSelectedLevel4: boolean;\nselectedLevel4Location(event) {\n  if (event.value !== null) {\n    this.isSelectedLevel4 = true;\n    // console.log(this.isSelectedLevel4);\n    this.userLevel5Location();\n  // console.log(event);\n  // console.log(this.selectedLevel4Authority);\n}\n}\n\nisSelectedLevel5: boolean;\nselectedLevel5Location(event) {\n  if (event.value !== null) {\n    this.isSelectedLevel5 = true;\n    // console.log(this.isSelectedLevel5);\n    this.userLevel5Location();\n  // console.log(event);\n  // console.log(this.selectedLevel5Authority);\n}\n}\n\n  userHealthAuthority() {\n    return this.sdsRequestService.calgaryTopHealthAuthority(this.userId).subscribe(res =>\n      {\n        this.userTopLocation = res;\n        for (const userLocation of this.userTopLocation) {\n         this.userLocationName = userLocation.locationName;\n         this.userFromCalgary = userLocation.fromCalgary;\n         this.userLocationId = userLocation.authorityUnitId;\n         this.sdsRequestForm.get('userLocationFormControl').setValue(this.userLocationName);\n        }\n      });\n  }\n\n  userLevel1Location() {\n    return this.sdsRequestService.calgaryLevel1Location(this.selectedHealthAuthority).subscribe(res =>\n      {\n        this.userLevel1Loc = res;\n        console.log(this.userLevel1Loc);\n        for (const level1LocName of this.userLevel1Loc) {\n          this.level1HasChildren = level1LocName.hasChildren;\n          console.log('Level1: ' + this.level1HasChildren);\n          this.sdsRequestForm.get('siteLocationFormControl').setValue(level1LocName.locationName);\n        }\n      });\n  }\n\n  userLevel2Location() {\n    return this.sdsRequestService.calgaryLevel2Location(this.selectedLevel1Authority).subscribe(res =>\n      {\n        this.userLevel2Loc = res;\n        console.log(this.userLevel2Loc);\n        for (const level2LocName of this.userLevel2Loc) {\n          this.level2HasChildren = level2LocName.hasChildren;\n          console.log('Level2: ' + this.level2HasChildren);\n          this.sdsRequestForm.get('facilityFormControl').setValue(level2LocName.locationName);\n        }\n      });\n  }\n\n  userLevel3Location() {\n    return this.sdsRequestService.calgaryLevel3Location(this.selectedLevel2Authority).subscribe(res =>\n      {\n        this.userLevel3Loc = res;\n        console.log(this.userLevel3Loc);\n        for (const level3LocName of this.userLevel3Loc) {\n          this.level3HasChildren = level3LocName.hasChildren;\n          console.log('Level3: ' + this.level3HasChildren);\n          this.sdsRequestForm.get('departmentFormControl').setValue(level3LocName.locationName);\n        }\n      });\n  }\n\n  userLevel4Location() {\n    return this.sdsRequestService.calgaryLevel4Location(this.selectedLevel3Authority).subscribe(res =>\n      {\n        this.userLevel4Loc = res;\n        console.log(this.userLevel4Loc);\n        for (const level4LocName of this.userLevel4Loc) {\n          this.level4HasChildren = level4LocName.hasChildren;\n          console.log('Level4: ' + this.level4HasChildren);\n          this.sdsRequestForm.get('subDepartmentLocationFormControl').setValue(level4LocName.locationName);\n        }\n      });\n  }\n\n  userLevel5Location() {\n    return this.sdsRequestService.calgaryLevel5Location(this.selectedLevel4Authority).subscribe(res =>\n      {\n        this.userLevel5Loc = res;\n        console.log(this.userLevel5Loc);\n        for (const level5LocName of this.userLevel5Loc) {\n          this.level5HasChildren = level5LocName.hasChildren;\n          console.log('Level5: ' + this.level5HasChildren);\n          this.sdsRequestForm.get('floorLocationFormControl').setValue(level5LocName.locationName);\n        }\n      });\n  }\n  sdsRequest() {\n    this.requestSDS.userId = this.userId;\n    this.requestSDS.fullName = this.sdsRequestForm.get('fullNameFormControl').value;\n    this.requestSDS.email = this.sdsRequestForm.get('emailFormControl').value;\n    this.requestSDS.isHealthCareWorker = this.selectedSearchParameter;\n    this.requestSDS.phoneNumber = this.sdsRequestForm.get('phoneNumberFormControl').value;\n    this.requestSDS.healthAuthority = this.sdsRequestForm.get('healthAuthorityFormControl').value;\n    this.requestSDS.facility = this.sdsRequestForm.get('facilityFormControl').value;\n    this.requestSDS.department = this.sdsRequestForm.get('departmentFormControl').value;\n    this.requestSDS.address = this.sdsRequestForm.get('addressFormControl').value;\n    this.requestSDS.city = this.sdsRequestForm.get('cityFormControl').value;\n    this.requestSDS.province = this.sdsRequestForm.get('provinceFormControl').value;\n    this.requestSDS.postalCode = this.sdsRequestForm.get('postalCodeFormControl').value;\n    this.requestSDS.comment = this.sdsRequestForm.get('commentFormControl').value;\n\n    // this.model.email = this.email;\n    // this.model.emailSubject = this.emailSubject;\n    // this.model.emailBody = this.emailBody;\n    // this.model.phoneNumber = this.phoneNumber;\n    // this.model.healthAuthority = this.healthAuthority;\n    // this.model.facility = this.facility;\n    // this.model.department = this.department;\n    // this.model.comment = this.comment;\n\n    for (const request of this.form.requests) {\n\n      this.requestSDS.productName = request.productName;\n      this.requestSDS.manufacturer = request.manufacturer;\n      this.requestSDS.casNumber = request.casNumber;\n      if (\n        this.requestSDS.productName1 === '' &&\n        this.requestSDS.productName1 !== this.requestSDS.productName\n      ) {\n        this.requestSDS.productName1 = request.productName;\n        this.requestSDS.manufacturer1 = request.manufacturer;\n        this.requestSDS.casNumber1 = request.casNumber;\n      } else if (\n        this.requestSDS.productName2 === '' &&\n        this.requestSDS.productName2 !== this.requestSDS.productName1\n      ) {\n        this.requestSDS.productName2 = request.productName;\n        this.requestSDS.manufacturer2 = request.manufacturer;\n        this.requestSDS.casNumber2 = request.casNumber;\n      } else if (\n        this.requestSDS.productName3 === '' &&\n        this.requestSDS.productName3 !== this.requestSDS.productName2\n      ) {\n        this.requestSDS.productName3 = request.productName;\n        this.requestSDS.manufacturer3 = request.manufacturer;\n        this.requestSDS.casNumber3 = request.casNumber;\n      } else if (\n        this.requestSDS.productName4 === '' &&\n        this.requestSDS.productName4 !== this.requestSDS.productName3\n      ) {\n        this.requestSDS.productName4 = request.productName;\n        this.requestSDS.manufacturer4 = request.manufacturer;\n        this.requestSDS.casNumber4 = request.casNumber;\n      }\n    }\n\n    return this.sendMailService.sdsRequest(this.requestSDS).subscribe(\n      res => {\n        console.log(this.requestSDS);\n        console.log(res);\n        this.alertify.success('Product request sent successfully');\n      },\n      error => {\n        this.alertify.error('Something went wrong, please try again');\n      }\n    );\n  }\n\n  public addProductRequest(): void {\n    this.changeDet.detectChanges();\n    this.form.requests.push({\n      id: Date.now(),\n      productName: '',\n      manufacturer: '',\n      casNumber: '',\n      // fullName: '',\n      // email: '',\n      // // emailSubject: '',\n      // // emailBody: '',\n      // comment: '',\n      // phoneNumber: '',\n      // healthAuthority: '',\n      // facility: '',\n      // department: ''\n    });\n  }\n\n  clicked = 0;\n\n  submitButton() {\n    this.clicked++;\n    this.addProductRequest();\n  }\n\n  disableButton() {\n    if (this.form.requests.length === 5 && this.clicked > 4) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public removeProductRequest(index: number): void {\n    this.form.requests.splice(index, 1);\n  }\n\n  openDiaglogRequest(form) {\n    const dialogRef = this.dialog.open(RequestConfirmComponent, {\n      data: {\n        form: form\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  // onFormSubmit(form: NgForm) {\n  //   this.request.supplierManufacturer = form['supplierManufacturer'];\n  //   this.request.productName = form['productName'];\n  //   this.request.catalogNumber = form['catalogNumber'];\n  //   this.request.fullName = form['fullName'];\n  //   this.request.emailAddress = form['emailAddress'];\n  //   this.request.phoneNumber = form['phoneNumber'];\n  //   this.request.healthAuthority = form['healthAuthority'];\n  //   this.request.department = form['department'];\n\n  //   // this.sendMailService.sendRequest(this.request).subscribe(next => {\n  //   //   this.alertify.success('Request successfully sent');\n  //   // },\n  //   //   error => {\n  //   //     this.alertify.error('Something went wrong!');\n  //   //     console.log('issue with registering');\n  //   //   }\n  //   // )\n  //   this.openDiaglogRequest(form);\n  // }\n}\n\n// export class RequestInterface {\n//   supplierManufacturer: string;\n//   productName: string;\n//   catalogNumber: string;\n//   fullName: string;\n//   emailAddress: string;\n//   phoneNumber: string;\n//   healthAuthority: string;\n//   facility: string;\n//   department: string;\n//   IsAccepted: number;\n// }\n\ninterface Requests {\n  id: number;\n  productName: string;\n  manufacturer: string;\n  casNumber: string;\n  // fullName: string;\n  // email: string;\n  // // emailSubject: string;\n  // // emailBody: string;\n  // comment: string;\n  // phoneNumber: string;\n  // healthAuthority: string;\n  // facility: string;\n  // department: string;\n}\n\n\nexport class RequestsInterface {\n  userId: null;\n  id: null;\n  fullName: string;\n  email: string;\n  comment: string;\n  phoneNumber: string;\n  address: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  healthAuthority: string;\n  isHealthCareWorker: string;\n  facility: string;\n  department: string;\n  productName: string;\n  productName1: string;\n  productName2: string;\n  productName3: string;\n  productName4: string;\n  casNumber: string;\n  casNumber1: string;\n  casNumber2: string;\n  casNumber3: string;\n  casNumber4: string;\n  manufacturer: string;\n  manufacturer1: string;\n  manufacturer2: string;\n  manufacturer3: string;\n  manufacturer4: string;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVzZW5kRW1haWwvcmVzZW5kRW1haWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"  <form\\n    (ngSubmit)=\\\"resendConfirmationEmail()\\\"\\n  >\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Resend Email</mat-card-title>\\n\\n    <!-- <div class=\\\"example-container container !important\\\"> -->\\n      <!-- <div class=\\\"example-container\\\"> -->\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Resend Email\\\"\\n            name=\\\"email\\\"\\n            [(ngModel)]=\\\"email\\\"\\n            required\\n          />\\n        </mat-form-field>\\n      <!-- </div>    -->\\n    <!-- </div> -->\\n\\n    <div>\\n      <button\\n        mat-raised-button\\n        class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Submit\\n      </button>\\n      <!-- <button mat-raised-button  style=\\\"margin-left: 5px;\\\" type=\\\"button\\\" routerLink=\\\"/users\\\">Back</button> -->\\n      <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n\\n\\n    </div>\\n  </form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { AuthService } from '../_service/auth.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'resendEmail',\n  templateUrl: './resendEmail.component.html',\n  styleUrls: ['./resendEmail.component.css']\n})\nexport class ResendEmailComponent implements OnInit {\n  model: any = {};\n  // model = {\n  //   email: ''\n  // };\n\n  constructor(private authService: AuthService,\n    private router: Router,\n     private alertify: AlertifyService,\n     @Inject(MAT_DIALOG_DATA) public passedData: any,\n     ) { }\n     userOutsideId = this.passedData.user.userOutsideId;\n     email = this.passedData.user.emailAddress;\n\n  ngOnInit() {\n    console.log(this.userOutsideId);\n    console.log(this.email);\n    this.email;\n    // this.model.email = this.userEmail;\n  }\n\n\nresendConfirmationEmail() {\n  return this.authService.resendEmail(this.email).subscribe(\n    data => {\n      this.alertify.success('Email confirmation resent');\n      // this.router.navigate(['/users']);\n    },\n    error => {\n      this.alertify.error('Something is not quite right');\n    }\n  );\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVzZXRQYXNzd29yZC9yZXNldFBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"form-style\\\">\\n  <form\\n    \\n    (ngSubmit)=\\\"resetPassword()\\\"\\n  >\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Reset Password</mat-card-title>\\n\\n    <div class=\\\"example-container\\\">\\n\\n        <mat-form-field class=\\\"fullWidth\\\">\\n            <input\\n              matInput\\n              placeholder=\\\"Enter your email\\\"\\n              name=\\\"email\\\"\\n              [(ngModel)]=\\\"model.email\\\"\\n              required\\n            />\\n          </mat-form-field>\\n          <!-- <mat-form-field class=\\\"fullWidth\\\">\\n            <input matInput placeholder=\\\"Email\\\" value=\\\"{{ user?.email }}\\\" readonly />\\n            <mat-hint>Readonly field</mat-hint>\\n          </mat-form-field> -->\\n\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Enter your password\\\"\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\n          required\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"model.password\\\"\\n        />\\n        <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n          hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n        }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"example-container\\\">\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Confirm your password\\\"\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\n          required\\n          name=\\\"confirmPassword\\\"\\n          [(ngModel)]=\\\"model.confirmPassword\\\"\\n        />\\n        <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n          hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n        }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <button\\n        mat-raised-button\\n        class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Submit\\n      </button>\\n    </div>\\n  </form>\\n</mat-card>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../_service/auth.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AlertifyService } from \"../_service/alertify.service\";\nimport { IdentityUser } from '../_models/identityUser';\nimport { UserService } from '../_service/user.service';\n\n@Component({\n  selector: \"resetPassword\",\n  templateUrl: \"./resetPassword.component.html\",\n  styleUrls: [\"./resetPassword.component.css\"]\n})\nexport class ResetPasswordComponent implements OnInit {\n  hide = true;\n  model: any = {};\n  code;\n  //confirmPassword: any;\n\n  // user: IdentityUser = {\n  //   id: '',\n  //   userOutsideId: '',\n  //   userName: '',\n  //   email: '',\n  //   emailConfirmed: '',\n  //   firstName: '',\n  //   lastName: '',\n  //   passwordHash: '',\n  //   normalizedUserName: '',\n  //   securityStamp: '',\n  //   concurrencyStamp: '',\n  //   phoneNumber: null,\n  //   phoneNumberConfirmed: null,\n  //   twoFactorEnabled: null,\n  //   lockoutEnd: null,\n  //   lockoutEnabled: null,\n  //   accessFailedCount: null\n  // };\n  \n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n  //   this.loadUser();\n  //   this.route.data.subscribe(data => {\n  //   //  this.user = this.user1;\n  //    this.user.firstName = 'test';\n  //    console.log(this.route.snapshot.params['id']);\n  //    let userOutsideId = this.route.snapshot.params['id'] ;\n  //  });\n  }\n\n  resetPassword() {\n    console.log(this.model.email + ',' + this.model.password + ',' + this.model.confirmPassword)\n\n   if(this.model.password == this.model.confirmPassword) { \n\n      console.log(this.model)\n    return this.authService.resetPassword(this.model).subscribe(\n      data => {\n        this.alertify.success('Password reset was successful');\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.alertify.error('Something went wrong!');\n      }\n    );\n }\n  else {\n    this.alertify.error(\"Passwords do not match\");\n  }\n}\n\n// loadUser() {\n//   this.userService.getIdentityUser(this.route.snapshot.params['id']).subscribe((user: IdentityUser) => {\n//     this.user = user;\n//     console.log(this.user);\n    \n//     //console.log('This is getting from loadUser => ' + this.user);\n//   },\n//   error => {\n//     this.alertify.error(error);\n//   });\n// }\n\n\n}\n","module.exports = \"/* mat-grid-tile {\\n    background: lightblue;\\n  } */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zZWFyY2gvcHJvZHVjdC1wYWdlL3Byb2R1Y3QtcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztLQUVLIiwiZmlsZSI6ImFwcC9zZWFyY2gvcHJvZHVjdC1wYWdlL3Byb2R1Y3QtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogbWF0LWdyaWQtdGlsZSB7XG4gICAgYmFja2dyb3VuZDogbGlnaHRibHVlO1xuICB9ICovIl19 */\"","module.exports = \"<!-- <mat-grid-list cols=\\\"2\\\" >\\n  <mat-grid-tile>Product Name</mat-grid-tile>\\n  <mat-grid-tile>\\n\\n    <input matInput placeholder=\\\"product name\\\" [(ngModel)]=\\\"data['productName']\\\" name=\\\"productName\\\"\\n      value=\\\"data['productName']\\\">\\n\\n  </mat-grid-tile>\\n  <mat-grid-tile>Supplier</mat-grid-tile>\\n  <mat-grid-tile>\\n    <input matInput placeholder=\\\"supplier / manufacturer\\\" [(ngModel)]=\\\"data['manufacturerName']\\\" name=\\\"manufacturerName\\\"\\n      value=\\\"data['manufacturerName']\\\">\\n  </mat-grid-tile>\\n</mat-grid-list> -->\\n<mat-card>\\n  <mat-card-title class=\\\"flex-center\\\">Product Preview</mat-card-title>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product.product_name\\\" name=\\\"product_name\\\">\\n        <input readonly=\\\"true\\\" *ngIf=\\\"internal === false\\\" matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product_name\\\" name=\\\"product_name\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"!internal\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"product_name\\\" name=\\\"product_name\\\">\\n        </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input matInput  readonly=\\\"true\\\" placeholder=\\\"Manufacturer\\\" [(ngModel)]=\\\"product.mfg_detail\\\"\\n          name=\\\"mfg_detail\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"!internal\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Manufacturer\\\" [(ngModel)]=\\\"mfg_detail\\\" name=\\\"mfg_detail\\\">\\n        </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input matInput *ngIf=\\\"product.product_code.length !== 0\\\" readonly=\\\"true\\\" placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"product.product_code\\\"\\n          name=\\\"product_code\\\">\\n          <input matInput *ngIf=\\\"product.product_code.length === 0\\\" readonly=\\\"true\\\" placeholder=\\\"Product Code\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"!internal\\\">\\n          <input matInput readonly=\\\"true\\\" placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"product_code_array\\\" name=\\\"product_code_array\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input matInput *ngIf=\\\"product.cas_no.length !== 0\\\" readonly=\\\"true\\\" placeholder=\\\"Cas No.\\\" [(ngModel)]=\\\"product.cas_no\\\"\\n          name=\\\"cas_no\\\">\\n          <input matInput *ngIf=\\\"product.cas_no.length === 0\\\" readonly=\\\"true\\\" placeholder=\\\"Cas No.\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"!internal\\\">\\n          <input readonly=\\\"true\\\" matInput placeholder=\\\"Cas No.\\\" [(ngModel)]=\\\"cas_no\\\" name=\\\"cas_no\\\">\\n        </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input matInput *ngIf=\\\"product.productAlias.length !== 0\\\" readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" [(ngModel)]=\\\"product.productAlias\\\"\\n          name=\\\"productAlias\\\">\\n          <input matInput *ngIf=\\\"product.productAlias.length === 0\\\" readonly=\\\"true\\\" placeholder=\\\"Product Alias\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input matInput *ngIf=\\\"product.additionalSuppliers.length !== 0\\\" readonly=\\\"true\\\" placeholder=\\\"Additional Supplier\\\" [(ngModel)]=\\\"product.additionalSuppliers\\\"\\n          name=\\\"additionalSuppliers\\\">\\n          <input matInput *ngIf=\\\"product.additionalSuppliers.length === 0\\\" readonly=\\\"true\\\" placeholder=\\\"Additional Supplier\\\" value=\\\"N/A\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" matInput placeholder=\\\"Health Hazard Class\\\" [(ngModel)]=\\\"product.healthHazardClass\\\" name=\\\"healthHazardClass\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngFor=\\\"let product of productDetail\\\">\\n        <input readonly=\\\"true\\\" *ngIf=\\\"product.physicalHazardClass !== null\\\" matInput placeholder=\\\"Physical Hazard Class\\\" [(ngModel)]=\\\"product.physicalHazardClass\\\" name=\\\"physicalHazardClass\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"internal\\\">\\n        <input matInput  readonly=\\\"true\\\" placeholder=\\\"WHMIS Exempt\\\" [(ngModel)]=\\\"exempt\\\" name=\\\"exempt\\\" value=\\\"exempt\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"fullWidth\\\" *ngIf=\\\"!internal\\\">\\n          <input matInput readonly=\\\"true\\\" placeholder=\\\"WHMIS Exempt\\\" [(ngModel)]=\\\"exempt\\\" name=\\\"exempt\\\" value=\\\"exempt\\\">\\n        </mat-form-field>\\n\\n      <mat-card-actions *ngIf=\\\"loggedIn()\\\"  class=\\\"fullWidth\\\" style=\\\"display:flex; align-items:flex-end !important; margin-left: 5px; \\\">\\n        <button mat-raised-button\\n        (click)=\\\"openProductLabelGeneration(productId)\\\">Print Label</button>\\n        <button mat-raised-button *ngIf=\\\"internal\\\" (click)=\\\"getSDSPDF()\\\" ><a>View SDS</a></button>\\n        <!-- <button mat-raised-button *ngIf=\\\"internal\\\" (click)=\\\"getSDSPDF()\\\" ><a target=\\\"_blank\\\">View SDS</a></button> -->\\n        <!-- <button mat-raised-button *ngIf=\\\"!internal\\\" (click)=\\\"getCloudSDSPDF()\\\" ><a target=\\\"_blank\\\">View SDS</a></button> -->\\n        <button mat-raised-button *ngIf=\\\"!internal\\\" (click)=\\\"getCloudSDSPDF()\\\" ><a>View SDS</a></button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialog,\n  MatDialogConfig\n} from '@angular/material';\nimport { ProductService } from 'src/app/_service/product.service';\nimport { ProductLabelComponent } from 'src/app/product-label/product-label.component';\nimport { AuthService } from '../../_service/auth.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.css']\n})\nexport class ProductPageComponent implements OnInit {\n  constructor(\n    private dialogRef: MatDialogRef<ProductPageComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private productService: ProductService,\n    private dialog: MatDialog,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  productId = this.data['productId'];\n  ref_id = this.data['ref_id'];\n  product_name = this.data.product_name;\n  product_code = this.data.product_code;\n  product_code_array = this.data.product_code_array;\n  cas_no = this.data.cas_no;\n  mfg_detail = this.data.mfg_detail;\n  exempt = this.data.exempt;\n  msds_id = this.data['msds_id'];\n  internal = this.data['internal'];\n  productDetail: any;\n  productDetailInfo: any = {};\n\n  ngOnInit() {\n    // console.log(this.product_code_array);\n   // console.log(this.product_name);\n    // console.log(this.data);\n    // console.log('Product Name: ' + this.data.product_name);\n    this.getProductDetail();\n  }\n\n  getProductDetail() {\n    return this.productService\n      .getinventoryProductDetail(this.productId).subscribe(\n        res => {\n        this.productDetail = res;\n        // console.log(this.productDetail);\n        this.productDetailInfo = this.productDetail.health_authority;\n      },\n      error => {\n        this.alertify.error('Unable to retrieve product detail');\n      });\n  }\n\n  getSDSPDF() {\n    this.productService.getPDF(this.productId).subscribe(\n      blob => {\n        // console.log(blob);\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        // formData.set('test', link.href);\n        // link.href = `testtesttest`;\n        // console.log(link.href);\n        // console.log(formData);\n        // console.log(formData.set('test', link.href));\n        // var test = window.URL.createObjectURL(blob);\n        link.download = `${this.product_name}.pdf`; // downloads pdf file and names it test.pdf\n        // console.log(link.download);\n        link.click();\n        // window.open(link.href, '_blank');\n      },\n      error => {}\n    );\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  getCloudSDSPDF() {\n    this.productService.getCloudSDS(this.ref_id).subscribe(\n      blob => {\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        // var test = window.URL.createObjectURL(blob);\n        // link.download=\"SDS.pdf\"; // downloads pdf file and names it test.pdf\n        // window.open(link.href, '_blank');\n        link.download = `${this.product_name}.pdf`; // downloads pdf file and names it test.pdf\n        // console.log(link.download);\n        link.click();\n      },\n      error => {}\n    );\n  }\n\n  openProductLabelGeneration(productId) {\n    const dialogRef = this.dialog.open(ProductLabelComponent, {\n      width: '1000px',\n      data: {\n        productId: this.productId,\n        productName: this.product_name,\n        productCode: this.product_code,\n        mfg_detail: this.mfg_detail\n      }\n    });\n  }\n}\n","module.exports = \"mat-card {\\n    height: 100vh;\\n}\\n\\n.left-25 {\\n    width: 25%;\\n    height: 75vh;\\n    /* border: 1px solid lightgrey; */\\n    padding: 10px;\\n}\\n\\n.right-70 {\\n    width: 70%;\\n    height: 75vh;\\n    /* border: 1px solid lightgrey; */\\n    padding: 10px;\\n}\\n\\n.search-group {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    margin: 5px;\\n}\\n\\n/* \\n.mat-select-arrow {\\n    width: 2px !important;\\n    margin: 0 20px !important;\\n    border-left: 10px solid transparent !important;\\n    border-right: 10px solid transparent !important;\\n    border-top: 15px solid !important;\\n} */\\n\\n.alert {\\n    padding: 20px;\\n    background-color: #ff4f00;\\n    color: white;\\n    margin-left: 25%;\\n    margin-right: 4%\\n  }\\n\\n.closebtn {\\n    margin-left: 15px;\\n    color: white;\\n    font-weight: bold;\\n    float: right;\\n    font-size: 22px;\\n    line-height: 20px;\\n    cursor: pointer;\\n    transition: 0.3s;\\n  }\\n\\n.closebtn:hover {\\n    color: black;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixpQ0FBaUM7SUFDakMsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixZQUFZO0lBQ1osaUNBQWlDO0lBQ2pDLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixXQUFXO0FBQ2Y7O0FBQ0E7Ozs7Ozs7R0FPRzs7QUFFSDtJQUNJLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQjtFQUNGOztBQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGdCQUFnQjtFQUNsQjs7QUFFQTtJQUNFLFlBQVk7RUFDZCIsImZpbGUiOiJhcHAvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xuICAgIGhlaWdodDogMTAwdmg7XG59XG5cbi5sZWZ0LTI1IHtcbiAgICB3aWR0aDogMjUlO1xuICAgIGhlaWdodDogNzV2aDtcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyZXk7ICovXG4gICAgcGFkZGluZzogMTBweDtcbn1cblxuLnJpZ2h0LTcwIHtcbiAgICB3aWR0aDogNzAlO1xuICAgIGhlaWdodDogNzV2aDtcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyZXk7ICovXG4gICAgcGFkZGluZzogMTBweDtcbn1cblxuLnNlYXJjaC1ncm91cCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbjogNXB4O1xufVxuLyogXG4ubWF0LXNlbGVjdC1hcnJvdyB7XG4gICAgd2lkdGg6IDJweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogMCAyMHB4ICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmlnaHQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBib3JkZXItdG9wOiAxNXB4IHNvbGlkICFpbXBvcnRhbnQ7XG59ICovXG5cbi5hbGVydCB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0ZjAwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xuICAgIG1hcmdpbi1yaWdodDogNCVcbiAgfVxuICBcbiAgLmNsb3NlYnRuIHtcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogMC4zcztcbiAgfVxuICBcbiAgLmNsb3NlYnRuOmhvdmVyIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"search-group\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <span>\\n      <mat-card-title>SDS Search</mat-card-title>\\n    </span>\\n    <span\\n      style=\\\"margin-left:10px ; display: flex; justify-content: space-around;\\\"\\n    >\\n\\n      <mat-form-field>\\n          <mat-label>Select a parameter</mat-label>\\n          <mat-select (selectionChange)=\\\"onSelectParameter($event)\\\" [(value)]=\\\"selectedParameter\\\" [(ngModel)]=\\\"selectedParameter\\\">\\n            <!-- <mat-option value=\\\"searchString\\\">None</mat-option> -->\\n            <mat-option value=\\\"searchString\\\">All Records</mat-option>\\n            <mat-option value=\\\"productName\\\">Product Name</mat-option>\\n            <mat-option value=\\\"productCode\\\">Product Code</mat-option>\\n            <mat-option value=\\\"manufacturer\\\">Manufacturer Name</mat-option>\\n            <mat-option value=\\\"casNo\\\">Cas Number</mat-option>\\n            <!-- <mat-option value=\\\"secondaryName\\\">Secondary Name</mat-option> -->\\n          </mat-select>\\n          <!-- <mat-error *ngIf=\\\"selectFormControl.hasError('required')\\\">\\n            This field is required\\n          </mat-error> -->\\n        </mat-form-field>\\n\\n         <mat-form-field style=\\\"margin-left: 5px; width:400px !important\\\"\\n         [formGroup]=\\\"form\\\"\\n         >         \\n          <input\\n            #selectedValue\\n            formControlName=\\\"searchStringControl\\\"\\n            [disabled]=\\\"disableSearchbox()\\\"\\n            name=\\\"selectedValue\\\"\\n            type=\\\"text\\\"\\n            matInput\\n            color=\\\"secondary\\\"\\n            placeholder=\\\"Search Products\\\"\\n            (keyup.enter)=\\\"searchForProducts(selectedValue.value)\\\"\\n            [(ngModel)]=\\\"value\\\"\\n          />\\n          <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearInputBox()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          <!-- <mat-icon style=\\\"cursor: pointer\\\" matSuffix (click)=\\\"clearSearch()\\\">close</mat-icon> -->\\n        </mat-form-field>\\n        <span style=\\\"margin-left:15px !important;\\\">\\n            <mat-card-actions><button mat-raised-button\\n                (click)=\\\"searchForProducts(selectedValue.value)\\\">Search</button>\\n            </mat-card-actions>\\n          </span>\\n    </span>\\n  </div>\\n  <!-- <span style=\\\"color: red; border: 1px black;\\\">{{message}}</span> -->\\n\\n  <div class=\\\"alert\\\" *ngIf=\\\"removedMessage\\\">\\n      <span class=\\\"closebtn\\\" onclick=\\\"this.parentElement.style.display='none';\\\">&times;</span> \\n      {{message}}\\n    </div>\\n\\n  <div class=\\\"body-group\\\" fxLayout fxLayoutGap=\\\"5px;\\\">\\n    <div class=\\\"left-25\\\" fxLayout=\\\"column\\\">\\n      <span *ngIf=\\\"!searchResultIsEmpty\\\">\\n      <div class=\\\"sub-title\\\">Filter By</div>\\n      <div>\\n          <mat-form-field>\\n              <input\\n                matInput\\n                type=\\\"text\\\"\\n                [formControl]=\\\"productNameFilter\\\"\\n                placeholder=\\\"Filter By Product Name\\\"\\n              />\\n            </mat-form-field>\\n      </div>\\n      <div>\\n        <!-- <p>Manufacturer</p> -->\\n        <mat-form-field>\\n          <input\\n            matInput\\n            type=\\\"text\\\"\\n            [formControl]=\\\"manufacturerFilter\\\"\\n            placeholder=\\\"Filter By Manufacturer\\\"\\n          />\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <!-- <p>CAS#</p> -->\\n        <mat-form-field>\\n          <input\\n            matInput\\n            type=\\\"text\\\"\\n            [formControl]=\\\"casNumberFilter\\\"\\n            placeholder=\\\"Filter By CAS#\\\"\\n          />\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <input\\n            matInput\\n            type=\\\"text\\\"\\n            [formControl]=\\\"productCodeFilter\\\"\\n            placeholder=\\\"Filter By Product Code\\\"\\n          />\\n        </mat-form-field>\\n      </div>\\n      </span>\\n      <div>\\n      </div>\\n\\n      <mat-form-field style=\\\"width: 50%; margin: 10px;\\\" *ngIf=\\\"loggedIn()\\\">\\n        <mat-select\\n          placeholder=\\\"Health Hazard Class\\\"\\n          [disabled]=\\\"searchResultIsEmpty\\\"\\n          [formControl]=\\\"healthHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedHealthClass\\\"\\n          (selectionChange)=\\\"\\n            onSelectedHealthHazardClass(selectedHealthClass)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let health of healthClass\\\"\\n            [value]=\\\"health.healthClassId\\\"\\n          >\\n            {{ health.healthClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <!-- <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a health class</mat-error\\n        > -->\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 50%; margin: 10px;\\\" *ngIf=\\\"loggedIn()\\\">\\n        <mat-select\\n          placeholder=\\\"Physical Hazard Class\\\"\\n          [disabled]=\\\"searchResultIsEmpty\\\"\\n          [formControl]=\\\"physicalHazardClassList\\\"\\n          multiple\\n          [(value)]=\\\"selectedPhysicalClass\\\"\\n          (selectionChange)=\\\"\\n            onSelectedPhysicalHazardClass(selectedPhysicalClass)\\n          \\\"\\n        >\\n          <mat-option\\n            *ngFor=\\\"let physical of physicalClass\\\"\\n            [value]=\\\"physical.physicalClassId\\\"\\n          >\\n            {{ physical.physicalClassName }}\\n          </mat-option>\\n        </mat-select>\\n        <!-- <mat-error *ngIf=\\\"healthHazardClassList.hasError('required')\\\"\\n          >Please choose a Physical class</mat-error\\n        > -->\\n      </mat-form-field>\\n        \\n        <mat-tree *ngIf=\\\"loggedIn()\\\" [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n            <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding style=\\\"margin-right: 5% !important\\\">\\n              <button mat-icon-button disabled></button>\\n              <!-- <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n              </mat-icon> -->\\n              <!-- <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                            [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                            (change)=\\\"todoLeafItemSelectionToggle(node)\\\"  style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox> -->\\n                            <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                            [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                            (change)=\\\"clickedActive(node)\\\"\\n                             style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n                            <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\n                            <!-- <button mat-icon-button (click)=\\\"updateNode(node)\\\"><mat-icon>edit</mat-icon></button> -->\\n            </mat-tree-node>\\n          \\n            <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n              <button mat-icon-button disabled></button>\\n              <mat-form-field>\\n                <!-- <input matInput #itemValue placeholder=\\\"New item...\\\"> -->\\n              </mat-form-field>\\n              <!-- <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button> -->\\n            </mat-tree-node>\\n          \\n            <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n              <button mat-icon-button matTreeNodeToggle\\n                      [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n                <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n                </mat-icon>\\n              </button>\\n              <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\n                            \\n                            (change)=\\\"todoItemSelectionToggle(node)\\\" style=\\\"font-size: 90% !important; font:bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n              <!-- <button mat-icon-button *ngIf=\\\"node.hasChild\\\" (click)=\\\"removeNode(node)\\\"><mat-icon>clear</mat-icon></button> -->\\n            </mat-tree-node>\\n          </mat-tree>\\n    </div>\\n\\n    <div class=\\\"right-70\\\" style=\\\"min-height: 30%;\\\">\\n      <div\\n        *ngIf=\\\"isLoading\\\"\\n        style=\\\"display: flex; justify-content: center; align-items: center; max-height: 95%;  overflow: auto\\\"\\n      >\\n\\n        <mat-progress-bar\\n          color=\\\"primary\\\"\\n          mode=\\\"indeterminate\\\"\\n        ></mat-progress-bar>\\n      </div>\\n      <div fxLayout fxLayoutAlign=\\\"space-between\\\">\\n      </div>\\n      <div fxLayout fxLayoutAlign=\\\"space-between\\\" class=\\\"spacer-top fullWidth\\\">\\n\\n        <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"fullWidth\\\">\\n\\n          <div class=\\\"example-container mat-elevation-z8\\\">\\n            <mat-table #Table [dataSource]=\\\"MyDataSource\\\" matSort>\\n              <ng-container matColumnDef=\\\"Product\\\">\\n                <mat-header-cell\\n                  *matHeaderCellDef\\n                  mat-sort-header\\n                  class=\\\"title\\\"\\n                >\\n                  Product\\n                </mat-header-cell>\\n                <mat-cell\\n                  *matCellDef=\\\"let product\\\"\\n                  [ngStyle]=\\\"{\\n                    background: product.internal ? 'null' : '#D3D3D3'\\n                  }\\\"\\n                >\\n                  {{ product.product_name }}\\n                </mat-cell>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"mfg_detail\\\">\\n                <mat-header-cell\\n                  *matHeaderCellDef\\n                  mat-sort-header\\n                  class=\\\"title\\\"\\n                >\\n                  Manufacturer\\n                </mat-header-cell>\\n                <mat-cell\\n                  *matCellDef=\\\"let product\\\"\\n                  [ngStyle]=\\\"{\\n                    background: product.internal ? 'null' : '#D3D3D3'\\n                  }\\\"\\n                >\\n                  {{ product.mfg_detail }}\\n                </mat-cell>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"Revised\\\">\\n                <mat-header-cell\\n                  *matHeaderCellDef\\n                  mat-sort-header\\n                  class=\\\"title\\\"\\n                >\\n                  Revision Date\\n                </mat-header-cell>\\n                <mat-cell\\n                  *matCellDef=\\\"let product\\\"\\n                  [ngStyle]=\\\"{\\n                    background: product.internal ? 'null' : '#D3D3D3'\\n                  }\\\"\\n                >\\n                  {{ product.revisionDate }}\\n                </mat-cell>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"LastVerified\\\">\\n                <mat-header-cell\\n                  *matHeaderCellDef\\n                  mat-sort-header\\n                  class=\\\"title\\\"\\n                >\\n                Last Verified\\n                </mat-header-cell>\\n                <mat-cell\\n                  *matCellDef=\\\"let product\\\"\\n                  [ngStyle]=\\\"{\\n                    background: product.internal ? 'null' : '#D3D3D3'\\n                  }\\\"\\n                >\\n                  {{ product.lastVerified }}\\n                </mat-cell>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"product_code\\\">\\n                <mat-header-cell\\n                  *matHeaderCellDef\\n                  mat-sort-header\\n                  class=\\\"title\\\"\\n                >\\n                  Product Code\\n                </mat-header-cell>\\n                <mat-cell\\n                  *matCellDef=\\\"let product\\\"\\n                  [ngStyle]=\\\"{\\n                    background: product.internal ? 'null' : '#D3D3D3'\\n                  }\\\"\\n                >\\n                 <span *ngIf=\\\"product.internal\\\"> {{ product.product_code }} </span>\\n                 <span *ngIf=\\\"!product.internal\\\"> {{ product.product_code_array }} </span>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <mat-header-row\\n                *matHeaderRowDef=\\\"displayedColumns\\\"\\n              ></mat-header-row>\\n              <mat-row\\n                *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n                (click)=\\\"selectRow(row)\\\"\\n              ></mat-row>\\n            </mat-table>\\n\\n            <mat-paginator #paginator [pageIndex]=\\\"pageIndex\\\" [showFirstLastButtons]=\\\"true\\\" [length]=\\\"totalItems\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n            (page)=\\\"pageChanged($event)\\\" >\\n            </mat-paginator>\\n          </div>    \"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, PageEvent, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport { UserService } from '../_service/user.service';\nimport { ProductService } from '../_service/product.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { resetFakeAsyncZone } from '@angular/core/testing';\nimport { ProductPageComponent } from './product-page/product-page.component';\nimport { AuthService } from '../_service/auth.service';\nimport { Router } from '@angular/router';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { takeUntil, debounce, debounceTime } from 'rxjs/operators';\nimport { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { LocationService } from '../_service/location.service';\nimport { Whmis2015Service } from '../_service/whmis2015.service';\n\n\nexport class TodoItemNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  name: string;\n  children?: TodoItemNode[];\n  hasChild: boolean;\n  exists: boolean;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  item: string;\n  level: number;\n  expandable: boolean;\n  checked: boolean;\n}\n\n@Component({\n  selector: \"search\",\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  locations = [];\n  searchString;\n  searchResultIsEmpty = true;\n  searchForm: FormGroup;\n\n  MyDataSource: any;\n  MyDataSource1: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  isLoading = false;\n  hideButton = false;\n  selectedSearchDropDown: any;\n\n  value = '';\n\n  // search parameters\n  model: any = {};\n  searchParms: any = [];\n  products: any = [];\n  vendorProducts: any = [];\n  allProducts: any = [];\n  selectedProduct;\n  displayedColumns: string[] = [\n    'Product',\n    'mfg_detail',\n    'Revised',\n    'product_code',\n    'LastVerified'\n    // \"SDS\",\n    // \"Print Label\"\n  ];\n\n  filterValues = {\n    product_name: '',\n    mfg_detail: '',\n    Revised: '',\n    product_code: '',\n    cas_no: '',\n    LastVerified: ''\n    };\n\n  manufacturerFilter = new FormControl('');\n  productCodeFilter = new FormControl('');\n  casNumberFilter = new FormControl('');\n  productNameFilter = new FormControl('');\n\n  constructor(\n    private userService: UserService,\n    private productService: ProductService,\n    private alertify: AlertifyService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private authService: AuthService,\n    private router: Router,\n    private locationService: LocationService,\n    private whmisService: Whmis2015Service,\n    public fb: FormBuilder,\n  ) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren\n    );\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(\n      this.getLevel,\n      this.isExpandable\n    );\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n\n    this.getTopLocations();\n    this.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  \n    if (this.products.body) {\n      this.MyDataSource.data = this.products.body;\n      this.MyDataSource.filterPredicate = this.tableFilter();\n    }\n  }\n\n  tableFilter(): (data: any, filter: string) => boolean {\n    let filterFunction = function(data, filter): boolean {\n      // console.log(data);\n      let searchTerms = JSON.parse(filter);\n\n      if (searchTerms.mfg_detail !== '') {\n        return data.mfg_detail.toLowerCase().indexOf(searchTerms.mfg_detail) !== -1;\n      } else if (searchTerms.product_code !== '') {\n        return data.product_code.toString().toLowerCase().indexOf(searchTerms.product_code) !== -1;\n      } else if (searchTerms.cas_no !== '') {\n        return data.cas_no.toString().toLowerCase().indexOf(searchTerms.cas_no) !== -1;\n      } else if (searchTerms.product_name !== '') {\n        return data.product_name.toLowerCase().indexOf(searchTerms.product_name) !== -1;\n      } else {\n        return true;\n      }\n    };\n    return filterFunction;\n    }\n\n  ngOnInit() {\n    this.getAuthorityNames();\n    this.healthDropDown();\n    this.physicalClassDropDown();\n\n    this.manufacturerFilter.valueChanges.pipe(debounceTime(1000))\n    .subscribe(\n      mfg_detail => {\n        this.filterValues.mfg_detail = mfg_detail;\n        this.MyDataSource.filter = JSON.stringify(this.filterValues);\n        if (this.filterValues.mfg_detail !== null) {\n          this.selectedParameter = 'searchString';\n          this.selectedSearchParameter = 'searchString';\n          this.searchString = '';\n          this.searchProducts();\n        }\n      });\n\n      this.productCodeFilter.valueChanges.pipe(debounceTime(1000))\n    .subscribe(\n      product_code => {\n        this.filterValues.product_code = product_code;\n        this.MyDataSource.filter = JSON.stringify(this.filterValues);\n        if (this.filterValues.product_code !== null) {\n          this.selectedParameter = 'searchString';\n          this.selectedSearchParameter = 'searchString';\n          this.searchString = '';\n          this.searchProducts();\n        }\n      });\n\n      this.casNumberFilter.valueChanges.pipe(debounceTime(1000))\n      .subscribe(\n        cas_no => {\n          this.filterValues.cas_no = cas_no;\n          this.MyDataSource.filter = JSON.stringify(this.filterValues);\n          if (this.filterValues.cas_no !== null) {\n            this.selectedParameter = 'searchString';\n            this.selectedSearchParameter = 'searchString';\n            this.searchString = '';\n            this.searchProducts();\n          }\n        });\n\n        this.productNameFilter.valueChanges.pipe(debounceTime(1000))\n        .subscribe(\n          product_name => {\n            this.filterValues.product_name = product_name;\n            this.MyDataSource.filter = JSON.stringify(this.filterValues);\n            if (this.filterValues.product_name !== null) {\n              this.selectedParameter = 'searchString';\n              this.selectedSearchParameter = 'searchString';\n              this.searchString = '';\n              this.searchProducts();\n            }\n          }); \n        }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  openDiaglogProductPage(row) {\n\n    const dialogRef = this.dialog.open(ProductPageComponent, {\n      width: '1000px',\n      data: {\n      productId: row['productId'],\n      product_name: row['product_name'],\n      mfg_detail: row['mfg_detail'],\n      product_code: row['product_code'],\n      product_code_array: row['product_code_array'],\n      cas_no: row['cas_no'],\n      productAlias: row['productAlias'],\n      productNotes: row['productNote'],\n      additionalSuppliers: row['additionalSuppliers'],\n      exempt: row['exempt'],\n      ref_id: row['ref_id'],\n      msdsId: row['msds_id'],\n      internal: row['internal']\n      }\n    });\n  }\n\n  message: any;\n  removedMessage: boolean;\n  invalidSearchResultMessage() {\n    this.removedMessage = false;\n    if (this.products.body.length === 0) {\n      this.removedMessage = true;\n      this.message = `Check the spelling, spacing, and symbols within your search terms. \\n \\n\n      Consider adding a filter to your search term to help narrow results, or remove filters to expand results.`;\n\n  } else {\n    this.removedMessage = false;\n    this.message = '';\n  }\n  }\n\n  healthHazardClassList = new FormControl({value: '', disabled: true}, [Validators.required]);\n  healths;\n  healthClass: any;\n  selectedHealthClass;\n  healthClassList: number;\n  healthHazardClassArray: any = [];\n\n  onSelectedHealthHazardClass(selectedHealthClass) {\n    this.allProducts = [];\n    this.filterByHealthHazardClass(selectedHealthClass);\n  }\n\n  filterByHealthHazardClass(selectedHealthClass) {\n    if (this.products.body) {\n      if (this.products.body.length > 0 && this.selectedSearchParameter !== '' && selectedHealthClass !== null) {\n        this.healthClassList = selectedHealthClass;\n        this.healthHazardClassArray = this.healthClassList;\n        this.model.healthClassId = this.healthClassList;\n        return this.searchProducts();\n      }\n    }  else {\n      return null;\n    }\n  }\n\n  healthDropDown() {\n    return this.whmisService.getHealthClass().subscribe(res => {\n      this.healthClass = res;\n    });\n  }\n\n  physicalHazardClassList = new FormControl({value: '', disabled: true}, [Validators.required]);\n  physicalClass: any;\n  selectedPhysicalClass;\n  physicalClassList: number;\n  physicalHazardClassArray: any = [];\n\n  onSelectedPhysicalHazardClass(selectedPhysicalClass) {\n    this.allProducts = [];\n    this.filterByPhysicalClass(selectedPhysicalClass);\n  }\n\n  filterByPhysicalClass(selectedPhysicalClass) {\n    if (this.products.body) {\n      if (this.products.body.length > 0 && this.selectedSearchParameter !== '' && selectedPhysicalClass.length !== 0) {\n        this.physicalClassList = selectedPhysicalClass;\n        this.physicalHazardClassArray = this.physicalClassList;\n        this.model.physicalClassId = this.physicalClassList;\n        return this.searchProducts();\n      }\n      if (this.products.body.length === 0 && selectedPhysicalClass.length !== 0) {\n        this.physicalClassList = selectedPhysicalClass;\n        this.physicalHazardClassArray = this.physicalClassList;\n        this.model.physicalClassId = this.physicalClassList;\n        return this.searchProducts();\n      }\n      if (this.products.body.length === 0 && selectedPhysicalClass.length === 0) {\n        return this.searchProducts();\n      }\n      if (this.products.body.length !== 0 && selectedPhysicalClass.length === 0) {\n        return this.searchProducts();\n      }\n    }  else {\n      return null;\n    }\n  }\n\n  physicalClassDropDown() {\n    return this.whmisService.getPhysicalClass().subscribe(res => {\n      this.physicalClass = res;\n    });\n  }\n\n  selectedSearchParameter;\n  selectFormControl = new FormControl({value: '', disabled: true}, Validators.required);\n  selectedParameter = 'searchString';\n  disableSearchInput = false;\n\n  onSelectParameter(event) {\n    this.selectedSearchParameter = event.value;\n  }\n\n  form = new FormGroup({\n    searchStringControl: new FormControl({value: '', disabled: true}),\n  });\n\n  disableSearchbox() {\n    if (this.selectedParameter === 'searchString') {\n      return this.form.controls['searchStringControl'].disable();\n    } else {\n      return this.form.controls['searchStringControl'].enable();\n    }\n  }\n\n  clearInputBox() {\n    this.value = '';\n    this.searchString = '';\n    this.searchProducts();\n  }\n  \n  searchForProducts(selectedValue: string) {\n    this.allProducts = [];\n    this.searchString = selectedValue;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: '',\n    };\n    if(this.selectedSearchParameter === 'productName') {\n      searchObj.searchProductName = selectedValue;\n    }\n    if(this.selectedSearchParameter === 'productCode') {\n      searchObj.searchProductCode = selectedValue;\n    }\n    if(this.selectedSearchParameter === 'manufacturer') {\n      searchObj.searchMfgName = selectedValue;\n    }\n    this.searchProducts();\n  }\n\n  searchProductName(searchBoxProductName: string) {\n    this.allProducts = [];\n    this.searchString = searchBoxProductName;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: ''\n    };\n\n    searchObj.searchProductName = searchBoxProductName;\n    searchObj.searchProductCode = '';\n    searchObj.searchMfgName = '';\n    // this.getSearchProducts();\n    this.searchProducts();\n    // this.getVendorProducts();\n    // this.getVendorProductsNew(searchObj);\n  }\n\n  searchProductCode(searchBoxProductCode: string) {\n    this.allProducts = [];\n    this.searchString = searchBoxProductCode;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: ''\n    };\n\n    searchObj.searchProductName = '';\n    searchObj.searchProductCode = searchBoxProductCode;\n    searchObj.searchMfgName = '';\n\n    this.searchProducts();\n    // this.getSearchProducts();\n    // this.getVendorProducts();\n    // this.getVendorProductsNew(searchObj);\n  }\n\n  searchManufacturer(searchBoxManufacturer: string) {\n    this.allProducts = [];\n    this.searchString = searchBoxManufacturer;\n    let searchObj: searchObject = {\n      searchProductName: '',\n      searchProductCode: '',\n      searchMfgName: ''\n    };\n\n    searchObj.searchProductName = '';\n    searchObj.searchProductCode = '';\n    searchObj.searchMfgName = searchBoxManufacturer;\n\n    this.searchProducts();\n    // this.getSearchProducts();\n    // this.getVendorProducts();\n    // this.getVendorProductsNew(searchObj);\n  }\n\n  searchBoxClick(searchBoxValue) {\n    this.allProducts = [];\n    this.searchString = searchBoxValue;\n    this.searchProducts();\n\n    // this.getSearchProducts();\n    // this.getVendorProducts();\n  }\n\n  public doFilter = (value: string) => {\n    console.log(value);\n    this.MyDataSource.filter = value.trim().toLocaleLowerCase();\n    // this.MyDataSource.filter1 = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilter1 = (value: string) => {\n    this.MyDataSource1.filter = value.trim().toLocaleLowerCase();\n    // this.MyDataSource.filter1 = value.trim().toLocaleLowerCase();\n  };\n\n  selectRow(row) {\n    // console.log(row);\n    this.openDiaglogProductPage(row);\n  }\n\n  // selectRow1(row) {\n  //   console.log(row);\n  //   this.openDiaglogProductPage1(row);\n  // }\n\n  authorities;\n  authArrayIds: any = [];\n\n  getAuthorityNames() {\n    return this.userService.getAllTopAuthorities().subscribe(\n      res => {\n        this.authorities = res;\n        this.authArrayIds = res;\n        this.authArrayIds.forEach(item => {\n        });\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  @Input() totalCount: number;\n  @Input() currentPage: number;\n  @Input() itemsPerPage: number;\n  @Input() totalItems: number;\n  @Input() totalPages: number[];\n  @Input() pageIndex: number = 0;\n  @Input() pageSizeOptions: number[] = [5, 10, 20];\n  @Input() pageSize: number;\n  @Input() nextPage: number;\n  @Input() previousPage: number;\n\n  pageChanged(event: PageEvent) {\n    this.totalItems = event.length;\n    if (event.pageIndex === 0) {\n      this.pageIndex = event.pageIndex;\n    }\n    if (event.pageIndex === 0 && event.previousPageIndex === 1) {\n      this.pageIndex = event.pageIndex;\n    }\n    if (event.pageIndex === 1 && event.previousPageIndex === 0) {\n      this.pageIndex = event.pageIndex;\n    }\n    if (event.pageIndex > 1) {\n      this.pageIndex = event.pageIndex;\n    }\n    this.nextPage = event.pageSize;\n    this.searchProducts();\n  }\n\n  restrictDropDownParams() {\n    if (this.selectedSearchParameter === 'productName' && this.searchString.trim() === '') {\n      this.isLoading = false;\n      this.alertify.message('Please enter a search parameter');\n      return null;\n    }\n    // if (this.selectedSearchParameter === 'productName' && this.searchString.trim() === '' || this.searchString.length > 0) {\n    //   this.isLoading = false;\n    //   this.alertify.message('Please enter a search parameter');\n    //   return null;\n    // }\n    if (this.selectedSearchParameter === 'productCode' && this.searchString === '') {\n      this.isLoading = false;\n      this.alertify.message('Please enter a search parameter');\n    }\n    if (this.selectedSearchParameter === 'manufacturer' && this.searchString === '') {\n      this.isLoading = false;\n      this.alertify.message('Please enter a search parameter');\n    }\n    if (this.selectedSearchParameter === 'casNo' && this.searchString === '') {\n      this.isLoading = false;\n      this.alertify.message('Please enter a search parameter');\n    }\n    // if (this.selectedParameter === 'searchString') {\n    //   this.searchProducts();\n    // }\n  }\n\n  searchProducts() {\n    this.isLoading = true;\n    this.hideButton = true;\n    // var products: any = [];\n    this.pageSize = this.pageSizeOptions[1];\n    const currentPageNumber = 1;\n\n    let findObj: searchCloudSDSObject = {\n      msdsId: '',\n      productName: '',\n      productCode: '',\n      mfgName: '',\n      casNo: '',\n      searchString: '',\n      pageNumber: null,\n      pageSize: null,\n    };\n\n       if (this.selectedSearchParameter === 'productName') {\n      findObj.productName = this.searchString.trim();\n    }\n    if (this.filterValues.product_name !== '') {\n      findObj.productName = this.filterValues.product_name.trim();\n    }\n    if (this.selectedSearchParameter === 'productCode') {\n        findObj.productCode = this.searchString.trim();\n      }\n    if (this.filterValues.product_code !== '') {\n      findObj.productCode = this.filterValues.product_code.trim();\n    }\n      if (this.selectedSearchParameter === 'manufacturer') {\n        findObj.mfgName = this.searchString.trim();\n      }\n       if (this.filterValues.mfg_detail !== '') {\n      findObj.mfgName = this.filterValues.mfg_detail.trim();\n    }\n      if (this.selectedSearchParameter === 'casNo') {\n        findObj.casNo = this.searchString.trim();\n      }\n        if (this.filterValues.cas_no !== '') {\n      findObj.casNo = this.filterValues.cas_no.trim();\n    }\n      if (this.selectedSearchParameter === 'searchString') {\n        findObj.searchString = this.searchString;\n      }\n\n      if (currentPageNumber === 1 && this.pageIndex === 0) {\n        findObj.pageNumber = currentPageNumber; // 1\n        findObj.pageSize = this.nextPage; // 10\n      }\n  \n      if (this.pageIndex === 1) {\n        findObj.pageNumber = this.pageIndex + 1; // > 1\n        findObj.pageSize = this.nextPage; // 10\n      }\n  \n      if (this.pageIndex > 1) {\n        findObj.pageNumber = this.pageIndex + 1; // > 1\n        findObj.pageSize = this.nextPage; // 10\n      }\n      let params = new URLSearchParams();\n\n      if (this.healthHazardClassArray != null) {\n        for (const constHealthClass of this.healthHazardClassArray) {\n          params.append('healthHazardClass', constHealthClass);\n        }\n      }\n      if (this.physicalHazardClassArray != null) {\n        for (const constPhysicalClass of this.physicalHazardClassArray) {\n          params.append('physicalHazardClass', constPhysicalClass);\n        }\n      }\n  \n      if (this.parentLocations.length !== 0) {\n        params.append('locationId', this.parentLocations);\n      }\n  \n      if (this.childLocations.length !== 0) {\n        for (const childLocation of this.childLocations) {\n          params.append('locationId', childLocation.authorityUnitId);\n      }\n      }\n\n      // if (this.selectedParameter !== 'searchString') {\n      //   this.restrictDropDownParams();\n      // } else {\n      //   return null;\n      // }\n      this.restrictDropDownParams();\n    // findProducts combined result from local database and cloudsds\n    return this.productService.findProducts(findObj, params).pipe(takeUntil(this.unsubscribe)).subscribe(\n      (res: any) => {\n        this.currentPage = JSON.parse(res.headers.get('pagination')).currentPage;\n        this.itemsPerPage = JSON.parse(res.headers.get('pagination')).itemsPerPage; // pageSize\n        this.totalItems = JSON.parse(res.headers.get('pagination')).totalItems; // length\n        this.totalPages = JSON.parse(res.headers.get('pagination')).totalPages;\n\n        this.parentLocations = [];\n        this.childLocations = [];\n        this.allProducts = [];\n        this.healthHazardClassArray = [];\n        this.physicalHazardClassArray = [];\n\n        this.healthHazardClassArray = this.healthClassList;\n        this.physicalHazardClassArray = this.physicalClassList;\n\n        if (res == null) {\n        this.isLoading = false;\n          this.searchResultIsEmpty = false;\n          this.hideButton = false;\n          this.parentLocations = [];\n          this.childLocations = [];\n          this.healthHazardClassArray = [];\n          this.physicalHazardClassArray = [];\n        } else {\n          this.products = res;\n          for (const response of this.products.body) {\n            this.allProducts.push(response);\n          }\n          console.log(this.products);\n          // invalid search result\n          this.invalidSearchResultMessage();\n\n          this.MyDataSource = new MatTableDataSource<Element>(res);\n          // this.MyDataSource.data = this.allProducts;\n          this.MyDataSource.data = res.body;\n          this.MyDataSource.sort = this.sort;\n          this.MyDataSource.filterPredicate = this.tableFilter();\n\n          this.isLoading = false;\n          this.searchResultIsEmpty = false;\n          this.parentLocations = [];\n          this.childLocations = [];\n          this.healthHazardClassArray = [];\n          this.physicalHazardClassArray = [];\n        }\n      },\n      error => {\n        // console.log('There was an error: ' + error);\n        this.searchResultIsEmpty = true;\n        this.isLoading = false;\n        // this.hideButton = false;\n      },\n      () => {\n        this.isLoading = false;\n        this.parentLocations = [];\n        this.childLocations = [];\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n\n  backUp() {\n    this.isLoading = true;\n\n    let params = new URLSearchParams();\n\n    for (const product of this.model) {\n      params.append('productId', product.productId);\n      console.log(product.productId);\n    }\n\n    this.productService.createArchive(params).pipe(takeUntil(this.unsubscribe)).subscribe(\n      blob => {\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = 'Backup';\n        link.click();\n        this.alertify.success('Backup created');\n        this.isLoading = false;\n        this.hideButton = false;\n      },\n      error => {\n        this.alertify.error('Something went wrong, please try again');\n        this.isLoading = false;\n        this.hideButton = false;\n      }\n    );\n  }\n\n   // ===================================Material Tree ================================ //\n  \n   locationsFromResponse: any = [];\n   location: TodoItemNode[] = [];\n   parentLocations: any = [] = [];\n   childLocations: any = [] = [];\n   unsubscribe = new Subject<void>();\n   nodeIsChecked: any;\n \n   selection = new SelectionModel<SearchSDSModel>(true, []);\n \n \n   \n   /** Whether the number of selected elements matches the total number of rows. */\n   isAllSelected() {\n     const numSelected = this.selection.selected.length;\n     if (numSelected === 0) {\n       return null;\n     }\n     const numRows = this.MyDataSource.data.length;\n     return numSelected === numRows;\n   }\n \n   /** Selects all rows if they are not all selected; otherwise clear selection. */\n   masterToggle() {\n     if (this.products.body) {\n       this.isAllSelected()\n       ? this.selection.clear()\n       : this.MyDataSource.data.forEach(row => this.selection.select(row));\n     }\n   }\n \n   /** The label for the checkbox on the passed row */\n   checkboxLabel(row?: SearchSDSModel): string {\n     if (!row) {\n       return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n     }\n     // for(const test of this.selection.selected) {\n     //   console.log('This is it: ' + test[0].firstName);\n     // }\n     return `${\n       this.selection.isSelected(row) ? 'deselect' : 'select'\n     } row ${row.position + 1}`;\n   }\n \n   getTopLocations() {\n     return this.locationService.locationHiararchy().pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n       this.locationsFromResponse = res;\n       this.location = this.locationsFromResponse;\n \n       this.dataSource.data = this.location;\n       // this.dataChange.next(data);\n       // const data = this.buildFileTree(this.location, 0);\n       this.dataChange.value.push(this.locationsFromResponse);\n \n       this.dataChange.next(this.location);\n       // this.dataChange.next(data);\n       // this.dataChange.next(this.data);\n     });\n   }\n \n   get data(): TodoItemNode[] {\n     return this.dataChange.value;\n   }\n \n   clickedActive(element) {\n     element.checked = !element.checked;\n     console.log(element.checked);\n   }\n \n   /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n   // tslint:disable-next-line: member-ordering\n   flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n \n   /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n   // tslint:disable-next-line: member-ordering\n   nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n \n   /** A selected parent node to be inserted */\n   // tslint:disable-next-line: member-ordering\n   selectedParent: TodoItemFlatNode | null = null;\n \n   /** The new item's name */\n   // tslint:disable-next-line: member-ordering\n   newItemName = '';\n \n   // tslint:disable-next-line: member-ordering\n   treeControl: FlatTreeControl<TodoItemFlatNode>;\n \n   // tslint:disable-next-line: member-ordering\n   treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n \n   // tslint:disable-next-line: member-ordering\n   dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n \n   /** The selection for checklist */\n   checklistSelection = new SelectionModel<TodoItemFlatNode>(true);\n \n   // model = {\n   //   name: '',\n   //   rootAuthorityUnitId: null,\n   //   parentAuthorityUnitId: null\n   // };\n \n   // updateModel = {\n   //   name: '',\n   //   authorityUnitId: null,\n   //   rootAuthorityUnitId: null,\n   //   parentAuthorityUnitId: null\n   // };\n \n   getLevel = (node: TodoItemFlatNode) => node.level;\n \n   levelsExist = (node: TodoItemNode) => node.exists;\n \n   isExpandable = (node: TodoItemFlatNode) => node.expandable;\n \n   getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n \n   hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n \n   hasNoContent = (_: number, _nodeData: TodoItemFlatNode) =>\n     _nodeData.item === '';\n \n   /**\n    * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n    */\n   transformer = (node: TodoItemNode, level: number) => {\n     const existingNode = this.nestedNodeMap.get(node);\n     const flatNode =\n       existingNode && existingNode.item === node.name\n         ? existingNode\n         : new TodoItemFlatNode();\n     flatNode.item = node.name;\n     flatNode.level = level;\n     flatNode.authorityUnitId = node.authorityUnitId;\n     flatNode.parentAuthorityUnitId = node.parentAuthorityUnitId;\n     flatNode.rootAuthorityUnitId = node.rootAuthorityUnitId;\n     if (node.hasChild) {\n       flatNode.expandable = true;\n     } else {\n       flatNode.expandable = false;\n     }\n \n     this.flatNodeMap.set(flatNode, node);\n     this.nestedNodeMap.set(node, flatNode);\n     return flatNode;\n   };\n \n   dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n   itemSelected: boolean;\n \n   /** Whether all the descendants of the node are selected. */\n   descendantsAllSelected(node: TodoItemFlatNode): boolean {\n     const descendants = this.treeControl.getDescendants(node);\n     // console.log(descendants);\n     if(descendants.length === 0) {\n       return this.checklistSelection.isSelected(node);\n     }\n \n     const descAllSelected = descendants.every(child =>\n       this.checklistSelection.isSelected(child)\n     );\n     // console.log('CheckList Toggle: ' + this.checklistSelection.toggle(node));\n     // console.log(descendants.values);\n     // console.log(node.item);\n     // console.log(node.authorityUnitId);\n     // console.log('Selected 1056: ' + this.checklistSelection.selected);\n     // const selected = this.checklistSelection.selected;\n     // selected.forEach((node: TodoItemFlatNode) => {\n     //   console.log(node);\n     //   console.log(selected);\n     // });    // for(cons test of selected) {\n     //   console.log();\n     // }\n     return descAllSelected;\n   }\n \n   /** Whether part of the descendants are selected */\n   descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n     const descendants = this.treeControl.getDescendants(node);\n     const result = descendants.some(child =>\n       this.checklistSelection.isSelected(child)\n     );\n     // console.log(result);\n \n     return result && !this.descendantsAllSelected(node);\n   }\n \n   filterByProductLocation(authorityUnitId, descendants) {\n     if (this.products.body) {\n       if (this.products.body.length > 0 && this.nodeIsChecked && this.selection.selected.length === 0) {\n         this.parentLocations = authorityUnitId;\n         this.childLocations = descendants;\n         return this.searchProducts();\n       }\n       if (this.products.body.length > 0 && !this.nodeIsChecked && this.selection.selected.length === 0) {\n         this.parentLocations = [];\n         this.childLocations = [];\n         return this.searchProducts();\n       }\n     } else {\n       return null;\n     }\n   }\n \n   /** Toggle the to-do item selection. Select/deselect all the descendants node */\n   todoItemSelectionToggle(node: TodoItemFlatNode): void {\n     this.checklistSelection.toggle(node);\n     const descendants = this.treeControl.getDescendants(node);\n     this.checklistSelection.isSelected(node)\n       ? this.checklistSelection.select(...descendants)\n       : this.checklistSelection.deselect(...descendants);\n     this.checkAllParentsSelection(node);\n     // Force update for the parent\n     descendants.every(child => this.checklistSelection.isSelected(child));\n     this.checkAllParentsSelection(node);\n     node.checked = !node.checked;\n     this.nodeIsChecked = node.checked;\n \n     // ==> node will give me the parent which has the expandable //\n     // console.log(node);\n     // console.log(node.authorityUnitId);\n \n       this.parentLocations = [];\n       this.childLocations = [];\n       this.allProducts = [];\n \n       this.parentLocations = node.authorityUnitId;\n       this.childLocations = descendants;\n \n     this.filterByProductLocation(node.authorityUnitId, descendants);\n   }\n \n   /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n   todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n     // console.log('This => ' + node.item);\n     this.checklistSelection.toggle(node);\n     this.checkAllParentsSelection(node);\n \n     this.parentLocations = [];\n     this.childLocations = [];\n     // this.getAllProducts();\n     // console.log(this.checkAllParentsSelection(node));\n     // console.log(node);\n     // console.log(node);\n   }\n \n   /* Checks all the parents when a leaf node is selected/unselected */\n   checkAllParentsSelection(node: TodoItemFlatNode): void {\n     let parent: TodoItemFlatNode | null = this.getParentNode(node);\n     // console.log(parent);\n     while (parent) {\n       this.checkRootNodeSelection(parent);\n       parent = this.getParentNode(parent);\n     }\n     this.parentLocations = [];\n     this.childLocations = [];\n     // this.getAllProducts();\n     // console.log(parent);\n     // console.log(node);\n   }\n \n   /** Check root node checked state and change it accordingly */\n   checkRootNodeSelection(node: TodoItemFlatNode): void {\n     const nodeSelected = this.checklistSelection.isSelected(node);\n     // console.log(nodeSelected);\n     const descendants = this.treeControl.getDescendants(node);\n     const descAllSelected = descendants.every(child =>\n       this.checklistSelection.isSelected(child)\n     );\n     // console.log(node);\n     if (nodeSelected && !descAllSelected) {\n       this.checklistSelection.deselect(node);\n     } else if (!nodeSelected && descAllSelected) {\n       this.checklistSelection.select(node);\n     }\n \n     // console.log(this.checklistSelection.select(node));\n     // console.log('node: ' + node);\n     // console.log('nodeSelected: ' + nodeSelected);\n \n     // this.parentLocations = [];\n     // this.childLocations = [];\n     // this.getAllProducts();\n   }\n \n   /* Get the parent node of a node */\n   getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n     // console.log('This => ' + node.item);\n \n     const currentLevel = this.getLevel(node);\n     if (currentLevel < 1) {\n       return null;\n     }\n     // console.log(currentLevel);\n     const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n     // console.log(startIndex);\n     for (let i = startIndex; i >= 0; i--) {\n       const currentNode = this.treeControl.dataNodes[i];\n       // console.log('CurrentNode: ' + currentNode.authorityUnitId);\n       // console.log('CurrentNode2: ' + currentNode.item);\n       if (this.getLevel(currentNode) < currentLevel) {\n         return currentNode;\n       }\n     }\n     return null;\n   }\n}\n\nexport interface ProductInterface {\n  product_name: string;\n  mfg_name: string;\n  product_code: string;\n  cas_no: string;\n  productAlias: string;\n  productNodes: string;\n  additionalSupplier: string;\n  exemptionclassFlag: string;\n  internal: string;\n}\n\nexport interface searchObject {\n  searchProductName: string;\n  searchProductCode: string;\n  searchMfgName: string;\n}\n\nexport interface searchCloudSDSObject {\n  msdsId: string;\n  productName: string;\n  productCode: string;\n  mfgName: string;\n  casNo: string;\n  searchString: string;\n  pageNumber: number;\n  pageSize: number;\n}\n\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n\nexport interface SearchSDSModel {\n  productId: number;\n  rootAuthorityUnitId: number;\n  product_name: string;\n  mfg_name: string;\n  product_code: string;\n  addedToInventory: boolean;\n  revision_date: string;\n  last_verified: string;\n  discontinued: boolean;\n  whmis_exempt: boolean;\n  position: number;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdHJlZS1jaGVja2JveC90cmVlLWNoZWNrYm94LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <mat-tree [dataSource] = \\\"dataSource\\\" [treeControl] = \\\"treeControl\\\">\\n  <mat-tree-node *matTreeNodeDef = \\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\n     <button mat-icon-button disabled></button>\\n     {{node.filename}} : {{node.type}}\\n  </mat-tree-node>\\n  <mat-tree-node *matTreeNodeDef = \\\"let node;when: hasChild\\\" matTreeNodePadding>\\n     <button mat-icon-button matTreeNodeToggle [attr.aria-label] = \\\"'toggle ' + node.filename\\\">\\n        <mat-icon class = \\\"mat-icon-rtl-mirror\\\">\\n           {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n        </mat-icon>\\n     </button>\\n     {{node.filename}}\\n  </mat-tree-node>\\n</mat-tree> -->\\n \\n<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\" >\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\n    <button mat-icon-button disabled></button>\\n    <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                  [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                  (change)=\\\"todoLeafItemSelectionToggle(node)\\\">{{node.item}}</mat-checkbox>\\n  </mat-tree-node>\\n\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding>\\n    <button mat-icon-button disabled></button>\\n    <mat-form-field>\\n      <input matInput #itemValue placeholder=\\\"New item...\\\">\\n    </mat-form-field>\\n    <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button>\\n  </mat-tree-node>\\n\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\n    <button mat-icon-button matTreeNodeToggle\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n       \\n      </mat-icon>\\n    </button>\\n    <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\n                  [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\n                  (change)=\\\"todoItemSelectionToggle(node)\\\">{{node.item}}</mat-checkbox>\\n    <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\n  </mat-tree-node>\\n</mat-tree>\\n\"","import {SelectionModel} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n  children: TodoItemNode[];\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for to-do list data.\n */\nconst TREE_DATA = {\n  Archive: {\n    'BC Biomedical Labratories Ltd' : null,\n    'BC Cancer Agency 2013 (Under Construction)' : {\n      'Abbotsford Cancer Center': null,\n      'Cancer Research Center': null,\n      'Center of the North' : null,\n      'Fraser Valley Cancer Centre' : null,\n      'SAH Centre for the Southern Interior' : null,\n      'Vancouver Cancer Centre' : null,\n      'Vancouver Island Centre' : null,\n    }\n  },\n  'BC Clinical and Support Services' : {\n    'BC Clinical': null\n  },\n  'Calgary Laboratory Services' : {\n    'ACH': null,\n    'DSC': null,\n  },\n  'Fraser Health Authority' : {\n    'Fraser East': null,\n  },\n  'Interior Health Authority' : {\n    'East Kootenay Health Service Area': null,\n  },\n  // Groceries: {\n  //   'Almond Meal flour': null,\n  //   'Organic eggs': null,\n  //   'Protein Powder': null,\n  //   Fruits: {\n  //     Apple: null,\n  //     Berries: ['Blueberry', 'Raspberry'],\n  //     Orange: null\n  //   }\n  // },\n  // Reminders: [\n  //   'Cook dinner',\n  //   'Read the Material Design spec',\n  //   'Upgrade Application to Angular'\n  // ]\n};\n\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a to-do item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n  get data(): TodoItemNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(TREE_DATA, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `TodoItemNode`.\n   */\n  buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n      const value = obj[key];\n      const node = new TodoItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to to-do list */\n  insertItem(parent: TodoItemNode, name: string) {\n    if (parent.children) {\n      parent.children.push({item: name} as TodoItemNode);\n      this.dataChange.next(this.data);\n    }\n  }\n\n  updateItem(node: TodoItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n}\n\n@Component({\n  selector: 'app-tree-checkbox',\n  templateUrl: './tree-checkbox.component.html',\n  styleUrls: ['./tree-checkbox.component.css'],\n  providers: [ChecklistDatabase]\n})\nexport class TreeCheckboxComponent  {\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\n\n  constructor(private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n        ? existingNode\n        : new TodoItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    this.checkAllParentsSelection(node);\n  }\n\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: TodoItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode!, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode!, itemValue);\n  }\n}\n","module.exports = \".form-style{\\n    margin-top: 80px !important;\\n    margin-bottom: 40px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2Vycy9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLDhCQUE4QjtBQUNsQyIsImZpbGUiOiJhcHAvdXNlcnMvY3JlYXRlLXVzZXIvY3JlYXRlLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXN0eWxle1xuICAgIG1hcmdpbi10b3A6IDgwcHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","module.exports = \"  <form #createUserForm=\\\"ngForm\\\" (ngSubmit)=\\\"createInternalUser()\\\" id=\\\"createUserForm\\\" >\\n      <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Create Internal User</mat-card-title\\n    >\\n    <br/>  <br/>\\n    <mat-form-field class=\\\"example-form-field\\\" style=\\\"margin-right: 5px\\\">\\n      <input\\n      matInput\\n      placeholder=\\\"Email\\\"\\n      name=\\\"email\\\"\\n      [(ngModel)]=\\\"model.email\\\"\\n    />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-form-field\\\" style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"First Name\\\"\\n        name=\\\"firstName\\\"\\n        [(ngModel)]=\\\"model.firstName\\\"\\n      />\\n    </mat-form-field>\\n\\n   <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Last Name\\\"\\n        name=\\\"lastName\\\"\\n        [(ngModel)]=\\\"model.lastName\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Contact Name\\\"\\n        name=\\\"contactName\\\"\\n        [(ngModel)]=\\\"model.contactName\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 1\\\"\\n        name=\\\"addressLine1\\\"\\n        [(ngModel)]=\\\"model.addressLine1\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 2\\\"\\n        name=\\\"addressLine2\\\"\\n        [(ngModel)]=\\\"model.addressLine2\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"City\\\"\\n        name=\\\"city\\\"\\n        [(ngModel)]=\\\"model.city\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Postal Code\\\"\\n        name=\\\"postalCode\\\"\\n        [(ngModel)]=\\\"model.postalCode\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Country\\\"\\n        name=\\\"country\\\"\\n        [(ngModel)]=\\\"model.country\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"State\\\"\\n        name=\\\"state\\\"\\n        [(ngModel)]=\\\"model.state\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Fax Number\\\"\\n        name=\\\"faxNumber\\\"\\n        [(ngModel)]=\\\"model.faxNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"margin-right: 5px\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Phone Number\\\"\\n        name=\\\"phoneNumber\\\"\\n        [(ngModel)]=\\\"model.phoneNumber\\\"        \\n      />\\n    </mat-form-field>\\n\\n    <div class=\\\"example-container\\\">\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Enter your password\\\"\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\n          required\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"model.password\\\"\\n        />\\n        <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n          hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n        }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"example-container\\\">\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Confirm your password\\\"\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\n          required\\n          name=\\\"confirmpassword\\\"\\n          [(ngModel)]=\\\"model.confirmpassword\\\"\\n        />\\n        <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n          hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n        }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n\\n    <!-- <button\\n      mat-raised-button\\n      style=\\\"margin-left: 5px;\\\"\\n      type=\\\"button\\\"\\n      routerLink=\\\"/users\\\"\\n    >\\n      Back\\n    </button> -->\\n\\n    <button\\n    mat-raised-button\\n    style=\\\"margin-left: 5px;\\\"\\n    type=\\\"submit\\\"\\n    form=\\\"createUserForm\\\"\\n  >\\n    Submit\\n  </button>\\n\\n  <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/_service/user.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  \n  hide = true;\n  model: any = {};\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  createInternalUser() {\n    return this.userService.createInternalUser(this.model).subscribe(next => {\n      this.alertify.success('New User has been created successfully');\n      this.router.navigate(['/users']);\n    }, error => {\n      this.alertify.error('Something went wrong, please try again');\n    }\n    );\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdXNlcnMvZGVsZXRlLXVzZXIvZGVsZXRlLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  delete-user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-style {\\n    margin: auto;\\n    margin-top: 10px;\\n    width: 50%;\\n    border: 0.5px solid rgb(121, 124, 123);\\n    padding: 10px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2Vycy91cGRhdGUtdXNlci91cGRhdGUtdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixVQUFVO0lBQ1Ysc0NBQXNDO0lBQ3RDLGFBQWE7RUFDZiIsImZpbGUiOiJhcHAvdXNlcnMvdXBkYXRlLXVzZXIvdXBkYXRlLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXN0eWxlIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB3aWR0aDogNTAlO1xuICAgIGJvcmRlcjogMC41cHggc29saWQgcmdiKDEyMSwgMTI0LCAxMjMpO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gIH0iXX0= */\"","module.exports = \"  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateUser()\\\" id=\\\"editForm\\\" >\\n      <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Edit</mat-card-title\\n    >\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Email\\\"\\n        value=\\\"{{ user?.emailAddress }}\\\"\\n        readonly\\n      />\\n      <mat-hint>Readonly field</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"First Name\\\"\\n        name=\\\"firstName\\\"\\n        [(ngModel)]=\\\"user.firstName\\\"\\n      />\\n    </mat-form-field>\\n\\n   <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Last Name\\\"\\n        name=\\\"lastName\\\"\\n        [(ngModel)]=\\\"user.lastName\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Postal Code\\\"\\n        name=\\\"postalCode\\\"\\n        [(ngModel)]=\\\"user.postalCode\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 1\\\"\\n        name=\\\"addressLine1\\\"\\n        [(ngModel)]=\\\"user.addressLine1\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 2\\\"\\n        name=\\\"addressLine2\\\"\\n        [(ngModel)]=\\\"user.addressLine2\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Country\\\"\\n        name=\\\"country\\\"\\n        [(ngModel)]=\\\"user.country\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"City\\\"\\n        name=\\\"city\\\"\\n        [(ngModel)]=\\\"user.city\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Province\\\"\\n        name=\\\"province\\\"\\n        [(ngModel)]=\\\"user.province\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Fax Number\\\"\\n        name=\\\"faxNumber\\\"\\n        [(ngModel)]=\\\"user.faxNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Phone Number\\\"\\n        name=\\\"phoneNumber\\\"\\n        [(ngModel)]=\\\"user.phoneNumber\\\"        \\n      />\\n    </mat-form-field>\\n    <!-- <button\\n      mat-raised-button\\n      style=\\\"margin-left: 5px;\\\"\\n      type=\\\"button\\\"\\n      routerLink=\\\"/users\\\"\\n    >\\n      Back\\n    </button> -->\\n    <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n\\n    <button\\n    mat-raised-button\\n    style=\\\"margin-left: 5px;\\\"\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"!editForm.dirty\\\"\\n    form=\\\"editForm\\\"\\n  >\\n    Save\\n  </button>\\n  </form>\"","import { Component, OnInit, ViewChild, HostListener, Inject } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_service/user.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\n\nexport class UpdateUserComponent implements OnInit {\n\n// @ViewChild('editForm') editForm: NgForm;\n\n// public user: User;\nuser1 = {\n  emailAddress: '',\n    firstName: '',\n    lastName: '',\n    addressLine1: '',\n    addressLine2: '',\n    country: '',\n    city: '',\n    province: '',\n    faxNumber: '',\n    phoneNumber: '',\n    postalCode: '',\n    userOutsideId: ''\n};\n\nuser = {\n  emailAddress: '',\n    firstName: '',\n    lastName: '',\n    addressLine1: '',\n    addressLine2: '',\n    country: '',\n    city: '',\n    province: '',\n    faxNumber: '',\n    phoneNumber: '',\n    postalCode: '',\n    userOutsideId: ''\n};\n\n\n\n// @HostListener('window:beforeunload', ['$event'])\n\n// unloadNotification($event: any) {\n//   if(this.editForm.dirty)\n//   {\n//     $event.returnValue = true;\n//   }\n// }\n\n\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute,\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    ) { }\n\n    firstName = this.passedData.user.firstName;\n\n    userOutsideId = this.passedData.user.userOutsideId;\n\n\n  ngOnInit() {\n    this.loadUser();\n    this.route.data.subscribe(data => {\n     const userOutsideId = this.route.snapshot.params['id'] ;\n    });\n  }\n\n  updateUser() {\n    // console.log(this.editForm);\n    this.userService.updateUserInfo(this.userOutsideId, this.user).subscribe(next => {\n      this.alertify.success('User profile updated successfully');\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n  }\n\nloadUser() {\n  this.userService.getUser(this.userOutsideId).subscribe((user: User) => {\n    this.user = user;\n  },\n  error => {\n    this.alertify.error(error);\n  });\n}\n\n}\n\n// export interface Usertype{\n//   userId: number;\n//    userName: string;\n//     emailAddress: string;\n//     firstName: string;\n//     lastName: string;\n//     userType: string;\n//     addressLine1: string;\n//     addressLine2: string;\n//     country: string;\n//     city: string;\n//     state: string;\n//     createdOn: Date;\n//     faxNumber: string;\n//     phoneNumber: string;\n//     postalCode: string;\n// }\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdXNlcnMvdXNlci1sb2NhdGlvbi9zaG93VXNlckxvY2F0aW9uL3Nob3dVc2VyTG9jYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"  <form #editForm=\\\"ngForm\\\"  id=\\\"editForm\\\" >\\n      <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >User Location</mat-card-title\\n    >   \\n    <mat-list>\\n        <mat-list-item *ngFor=\\\"let item of locations\\\">{{item.locationName}}<mat-icon style=\\\"cursor: pointer; margin-right: 10px\\\" (click)=\\\"removeUserLocations(item.authorityUnitId)\\\">delete</mat-icon>\\n        </mat-list-item>\\n      </mat-list>\\n\\n    <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n<!-- \\n    <button\\n    mat-raised-button\\n    style=\\\"margin-left: 5px;\\\"\\n    type=\\\"submit\\\"\\n    form=\\\"editForm\\\"\\n  >\\n    Submit\\n  </button> -->\\n  </form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/_service/user.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/user';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'showUserLocation',\n  templateUrl: './showUserLocation.component.html',\n  styleUrls: ['./showUserLocation.component.css']\n})\nexport class ShowUserLocationComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute,\n    @Inject(MAT_DIALOG_DATA) public passedData: any,\n    ) { }\n\n    userOutsideId = this.passedData.user;\n\n  locations: any;\n  authorityUnitId: any;\n\n  model: any = {};\n\n  user = {\n    emailAddress: '',\n      firstName: '',\n      lastName: '',\n      addressLine1: '',\n      addressLine2: '',\n      country: '',\n      city: '',\n      province: '',\n      faxNumber: '',\n      phoneNumber: '',\n      postalCode: '',\n      userOutsideId: ''\n  };\n\n  ngOnInit() {\n    this.loadUser();\n    // console.log(this.userOutsideId);\n    this.getAllUserLocations();\n  }\n\n  getAllUserLocations() {\n    return this.userService.getUserLocation(this.userOutsideId).subscribe(res => {\n      this.locations = res;\n      // console.log(this.locations);\n    });\n  }\n\n  loadUser() {\n    this.userService.getUser(this.userOutsideId).subscribe((user: User) => {\n      this.user = user;\n      // console.log(this.user);\n    },\n    error => {\n      this.alertify.error('Unable to load user');\n    });\n  }\n\n  removeUserLocations(authorityUnitId) {\n    var prompt = confirm('Are you sure you want to delete this location?');\n    if (prompt) {\n    this.model.authorityUnitId = authorityUnitId;\n    this.model.userOutSideId = this.userOutsideId;\n    return this.userService.removeUserLocation(this.model).subscribe(res => {\n      this.alertify.success('Location successfully removed');\n    }, error => {\n      this.alertify.error('Something went wrong, please try again');\n    });\n  }\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdXNlcnMvdXNlci1sb2NhdGlvbi91c2VyLWxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"form-style\\\">\\n    <mat-card-title>Assign location</mat-card-title>\\n    <mat-card-content>\\n      <form #assignForm=\\\"ngForm\\\" (ngSubmit)=\\\"assignLocation()\\\">\\n\\n          <mat-form-field class=\\\"fullWidth\\\">\\n              <input\\n                matInput\\n                placeholder=\\\"Email\\\"\\n                name=\\\"email\\\"\\n                value=\\\"{{ user?.emailAddress }}\\\"  \\n                readonly                  \\n              />\\n              <mat-hint>Readonly field</mat-hint>\\n            </mat-form-field>\\n\\n        <!-- <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Authority\\\" [(ngModel)]=\\\"selectedAuthority\\\" name=\\\"authority\\\">\\n            <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\" >\\n              {{authority.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field> -->\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <mat-select placeholder=\\\"Authority\\\" (selectionChange)=\\\"doSomething($event)\\\" [(value)] = \\\"selectedAuthority\\\">\\n            <mat-option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority.authorityUnitId\\\" >\\n              {{authority.name}}  \\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n<!-- <p>This is stuff we wrote: {{selectedAuthority}}</p> -->\\n        <!-- <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Location\\\" [(ngModel)]=\\\"selectedLevel1Authority\\\" name =\\\"level1authority\\\">\\n              <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\"\\n              >\\n                {{level1authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field> -->\\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Location\\\" (selectionChange)=\\\"onUserSelectLevel1($event)\\\" [(value)] = \\\"selectedLevel1Authority\\\">\\n              <mat-option *ngFor=\\\"let level1authority of level1Authorities\\\" [value]=\\\"level1authority.authorityUnitId\\\"\\n              >\\n                {{level1authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n    \\n          <!-- <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Site\\\" [(ngModel)]=\\\"selectedLevel2Authority\\\" name=\\\"level2authority\\\">\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>     -->\\n\\n          <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Site\\\" (selectionChange)=\\\"onUserSelectLevel2($event)\\\" [(value)] = \\\"selectedLevel2Authority\\\">\\n              <mat-option *ngFor=\\\"let level2authority of level2Authorities\\\" [value]=\\\"level2authority.authorityUnitId\\\">\\n                {{level2authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field> \\n\\n          <!-- <mat-form-field class=\\\"fullWidth\\\">\\n            <mat-select placeholder=\\\"Department\\\" [(ngModel)]=\\\"selectedLevel3Authority\\\" name=\\\"level3authority\\\">\\n              <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n                {{level3authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field> -->\\n\\n          <mat-form-field class=\\\"fullWidth\\\" [hidden]=\\\"hideLevel3DropDown\\\">\\n            <mat-select placeholder=\\\"Department\\\" (selectionChange)=\\\"onUserSelectLevel3($event)\\\" [(value)] = \\\"selectedLevel3Authority\\\">\\n              <mat-option *ngFor=\\\"let level3authority of level3Authorities\\\" [value]=\\\"level3authority.authorityUnitId\\\">\\n                {{level3authority.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n  \\n        <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n          <button  mat-raised-button\\n            matTooltip=\\\"Press to assign\\\"\\n            aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">Assign</button>\\n            <button\\n            mat-raised-button\\n            style=\\\"margin-left: 5px;\\\"\\n            type=\\\"button\\\"\\n            routerLink=\\\"/users\\\"\\n          >\\n            Back\\n          </button>\\n        </mat-card-actions>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"src/app/_service/user.service\";\nimport { AlertifyService } from \"src/app/_service/alertify.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/_models/user\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"user-location\",\n  templateUrl: \"./user-location.component.html\",\n  styleUrls: [\"./user-location.component.css\"]\n})\nexport class UserLocationComponent implements OnInit {\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  user: User;\n\n  model: any = {\n    userId: null,\n    authorityUnitId: null\n  };\n\n  // authorities: AuthorityInterface[] = [];\n  authorities;\n  level1Authorities;\n  level2Authorities;\n  level3Authorities;\n  locations;\n  selectedHospital: string;\n  departmentCount: number;\n  hideLevel3DropDown: boolean;\n\n  public selectedAuthority: any;\n  public selectedLevel1Authority: any;\n  public selectedLevel2Authority: any;\n  public selectedLevel3Authority: any;\n\n  ngOnInit() {\n    this.loadUser();\n    this.getAuthorityNames();\n  }\n\n\n  getAuthorityNames() {\n    //console.log('in getauthorityname of invitecomponent ' + this.authorities);\n    return this.userService.getAuthorityNames().subscribe(res => {\n      //console.log(res);\n      this.authorities = res;\n      //console.log('This is from getAuthorityNames ' + this.selectedAuthority)\n      //console.log(res)\n    });\n  }\n\n\n\n\ndoSomething(event) {\n //console.log('from doSomething function ' + this.selectedAuthority)\n //console.log('from dosomething for event ' + event.value)\n this.getLevel1DropDown();\n //this.getLevel2DropDown();\n// this.getLevel3DropDown();\n}\n\nonUserSelectLevel1(event) {\n // console.log('from onUserSelectlevel1() function ' + event.value);\n  this.getLevel2DropDown();\n}\n\nonUserSelectLevel2(event) {\n  //console.log('from onUserSelectlevel2() function ' + event.value);\n  this.getLevel3DropDown();\n}\n\nonUserSelectLevel3(event) {\n  //console.log('from onUserSelectlevel3() function ' + event.value);\n  //this.getLevel3DropDown();\n  // code to submit form.\n}\n\ngetLevel1DropDown() {\n  //console.log()\n  return this.userService.level1DropDown(this.selectedAuthority).subscribe(res => {\n    this.level1Authorities = res;\n    //console.log(res)\n});\n}\n\ngetLevel2DropDown() {\n  //console.log()\n  return this.userService.level2DropDown(this.selectedLevel1Authority).subscribe(res => {\n    this.level2Authorities = res;\n    //console.log(res)\n});\n}\n\ngetLevel3DropDown() {\n  this.departmentCount = 0;\n  if (this.departmentCount == 0) {\n    this.hideLevel3DropDown = true;\n  } \n  return this.userService.level3DropDown(this.selectedLevel2Authority).subscribe(res => {\n    this.level3Authorities = res;\n    //console.log(res)\n});\n}\n  // getLevel1AuthorityNames() {\n  //   //console.log('in level1authority of invitecomponent ' + this.level1Authorities);\n  //   return this.userService.getLevel1AuthorityNames().subscribe(res => {\n  //     this.level1Authorities = res;\n  //     //console.log('This is coming from level2AuthoritiesNames: ' + this.level1Authorities);\n  //   });\n  // }\n\n  // getLevel2AuthorityNames() {\n  //   //console.log('in level1authority of user-location ' + this.level2Authorities);\n  //   return this.userService.getLevel2AuthorityNames().subscribe(res => {\n  //     this.level2Authorities = res;\n  //   });\n  // }\n\n  // getLevel3AuthorityNames() {\n  //   // console.log('in level1authority of invitecomponent ' + this.level3Authorities);\n  //   return this.userService.getLevel3AuthorityNames().subscribe(res => {\n  //     this.level3Authorities = res;\n  //   });\n  // }\n\n  assignLocation() {\n     // this.model.userId = this.user.userId; //to change\n   // this.model.authorityUnitId = this.selectedAuthority;\n   // this.model.authorityUnitId = this.selectedLevel1Authority;\n   if(this.selectedLevel3Authority == null) {\n    this.model.authorityUnitId = this.selectedLevel2Authority;\n   } \n   else {\n    this.model.authorityUnitId = this.selectedLevel3Authority;\n   }\n\n    return this.userService.assignUserLocation(this.model).subscribe(res => {\n      this.alertify.success(`User assigned a location`);\n      this.locations = res;\n    });\n  }\n\n\n  loadUser() {\n    this.userService.getUser(this.route.snapshot.params[\"id\"]).subscribe(\n      (user: User) => {\n        this.user = user;\n        //console.log('user-location component ' + this.user)\n        //console.log('Users id : ' + this.user.userId);\n      },\n      error => {\n        this.alertify.error(error);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdXNlcnMvdXNlci1wZXJtaXNzaW9uL3VzZXItcGVybWlzc2lvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <mat-card-title>Assign Permission</mat-card-title>\\n  <mat-card-content>\\n    <form (ngSubmit)=\\\"assignPermission()\\\" #permissionForm = \\\"ngForm\\\">\\n        <!-- <div *ngIf=\\\"permissionForm.submitted\\\" style=\\\"background-color: yellowgreen\\\"><p><strong>This user has been assigned a role</strong></p></div> -->\\n      <mat-form-field class=\\\"fullWidth\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Email\\\"\\n          name=\\\"{{userEmailAddress}}\\\"\\n          value=\\\"{{userEmailAddress}}\\\"  \\n          readonly                  \\n        />\\n        <mat-hint>Readonly field</mat-hint>\\n      </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\">\\n        <mat-select placeholder=\\\"Permission\\\" [(ngModel)]=\\\"selectedRole\\\" name=\\\"selectedRole\\\" >\\n          <mat-option *ngFor=\\\"let role of roles\\\"  [value]=\\\"role.roleName\\\">\\n            {{role.roleName}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"test\\\" [(ngModel)]=\\\"roles.roleName\\\" name=\\\"roleName\\\"></textarea>\\n        </mat-form-field> -->\\n\\n\\n      <mat-card-actions style=\\\"margin-left: 5px;\\\">\\n        <button\\n          mat-raised-button\\n          matTooltip=\\\"Assign Permission\\\"\\n          aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Assign\\n        </button>\\n\\n        <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { PermissionService } from 'src/app/_service/permission.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_service/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'user-permission',\n  templateUrl: './user-permission.component.html',\n  styleUrls: ['./user-permission.component.css']\n})\nexport class UserPermissionComponent implements OnInit {\n\n  constructor(\n  private userPermission: PermissionService,\n  private userService: UserService,\n  private alertify: AlertifyService,\n  private router: Router,\n  private route: ActivatedRoute,\n  @Inject(MAT_DIALOG_DATA) public passedData: any) { }\n\n  user: User;\n  roles;\n  role;\n  roleName;\n  model: any = {};\n  selectedValue: string;\n  public selectedRole: any;\n\n  userEmailAddress = this.passedData.user.emailAddress;\n\n  ngOnInit() {\n   // this.loadUser();\n    this.userPermission.getRoles().subscribe(res => {\n      this.roles = res;\n    });\n  }\n\n  assignPermission() {\n    this.userPermission.userPermission(this.userEmailAddress, this.selectedRole).subscribe(next => {\n      // console.log('This is the loaded user ' + this.user.emailAddress);\n         this.alertify.success(`Role of ${this.selectedRole} assigned to ${this.userEmailAddress}`);\n         this.router.navigate(['/users']);\n    \n       }, error => {\n         this.alertify.error('Something went wrong!');\n         //console.log('Issue assigning roles');\n       }\n     );\n   }\n\n   getAllRoles() {\n     this.userPermission.getRoles();\n   }\n\n  //  loadUser() {\n  //   this.userService.getUser(this.route.snapshot.params['id']).subscribe((user: User) => {\n  //     this.user = user;\n  //    // console.log('This is the param id: ' + this.route.snapshot.params['id']);\n  //    // console.log('This is the user within the loadUser: ' + this.user.firstName);\n  //   },\n  //   error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n}\n","module.exports = \".form-style {\\n    margin: auto;\\n    margin-top: 10px;\\n    width: 50%;\\n    border: 0.5px solid rgb(121, 124, 123);\\n    padding: 10px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2Vycy91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVixzQ0FBc0M7SUFDdEMsYUFBYTtFQUNmIiwiZmlsZSI6ImFwcC91c2Vycy91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1zdHlsZSB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIHJnYigxMjEsIDEyNCwgMTIzKTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9Il19 */\"","module.exports = \"    <form\\n      \\n      (ngSubmit)=\\\"UpdatePassword()\\\"\\n    >\\n      <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\">Change Password</mat-card-title>\\n  \\n      <div class=\\\"example-container\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Enter your password\\\"\\n            [type]=\\\"hide ? 'password' : 'text'\\\"\\n            required\\n            name=\\\"password\\\"\\n            [(ngModel)]=\\\"password\\\"\\n          />\\n          <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n            hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n          }}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Confirm your password\\\"\\n            [type]=\\\"hide ? 'password' : 'text'\\\"\\n            [(ngModel)]=\\\"confirmPassword\\\"\\n            required\\n            name=\\\"confirmPassword\\\"\\n          />\\n          <mat-icon style=\\\"cursor: pointer;\\\" matSuffix (click)=\\\"hide = !hide\\\">{{\\n            hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n          }}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <button\\n          mat-raised-button\\n          class=\\\"btn btn-lg btn-primary btn-block button\\\"\\n          type=\\\"submit\\\"\\n        >\\n          Save\\n        </button>\\n      </div>\\n    </form>\\n\\n  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateSDSUser()\\\" id=\\\"editForm\\\" >\\n      <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n          <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n      </div> -->\\n    <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n      >Edit</mat-card-title\\n    >\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Email\\\"\\n        value=\\\"{{ sdsUser?.emailAddress }}\\\"\\n        readonly\\n      />\\n      <mat-hint>Readonly field</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"First Name\\\"\\n        name=\\\"firstName\\\"\\n        [(ngModel)]=\\\"sdsUser.firstName\\\"\\n      />\\n    </mat-form-field>\\n\\n   <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Last Name\\\"\\n        name=\\\"lastName\\\"\\n        [(ngModel)]=\\\"sdsUser.lastName\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Postal Code\\\"\\n        name=\\\"postalCode\\\"\\n        [(ngModel)]=\\\"sdsUser.postalCode\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 1\\\"\\n        name=\\\"addressLine1\\\"\\n        [(ngModel)]=\\\"sdsUser.addressLine1\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Address 2\\\"\\n        name=\\\"addressLine2\\\"\\n        [(ngModel)]=\\\"sdsUser.addressLine2\\\"\\n      />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Country\\\"\\n        name=\\\"country\\\"\\n        [(ngModel)]=\\\"sdsUser.country\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"City\\\"\\n        name=\\\"city\\\"\\n        [(ngModel)]=\\\"sdsUser.city\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Province\\\"\\n        name=\\\"province\\\"\\n        [(ngModel)]=\\\"sdsUser.province\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Fax Number\\\"\\n        name=\\\"faxNumber\\\"\\n        [(ngModel)]=\\\"sdsUser.faxNumber\\\"\\n      />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"fullWidth\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"Phone Number\\\"\\n        name=\\\"phoneNumber\\\"\\n        [(ngModel)]=\\\"sdsUser.phoneNumber\\\"        \\n      />\\n    </mat-form-field>\\n    <button mat-raised-button style=\\\"margin-left: 5px;\\\"  [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n\\n    <button\\n    mat-raised-button\\n    style=\\\"margin-left: 5px;\\\"\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"!editForm.dirty\\\"\\n    form=\\\"editForm\\\"\\n  >\\n    Save\\n  </button>\\n  </form>\\n<!-- <update-user></update-user> -->\\n  <!-- <mat-card class=\\\"form-style\\\">  \\n      <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"null\\\" id=\\\"editForm\\\" > -->\\n          <!-- <div *ngIf=\\\"editForm.dirty\\\" style=\\\"color: orangered\\\" >\\n              <p><strong>You have made changes. Any unsaved changes will be lost.</strong></p>\\n          </div> -->\\n        <!-- <mat-card-title style=\\\"margin: 0 auto !important; padding-bottom: 10px;\\\"\\n          >Update your profile</mat-card-title\\n        >\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Email\\\"\\n            value=\\\"{{ model?.emailAddress }}\\\"\\n            readonly\\n          />\\n          <mat-hint>Readonly field</mat-hint>\\n        </mat-form-field>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"First Name\\\"\\n            name=\\\"firstName\\\"\\n            [(ngModel)]=\\\"model.firstName\\\"\\n          />\\n        </mat-form-field>\\n    \\n       <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Last Name\\\"\\n            name=\\\"lastName\\\"\\n            [(ngModel)]=\\\"model.lastName\\\"\\n          />\\n        </mat-form-field>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Postal Code\\\"\\n            name=\\\"postalCode\\\"\\n            [(ngModel)]=\\\"model.postalCode\\\"\\n          />\\n        </mat-form-field>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Address 1\\\"\\n            name=\\\"addressLine1\\\"\\n            [(ngModel)]=\\\"model.addressLine1\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Address 2\\\"\\n            name=\\\"addressLine2\\\"\\n            [(ngModel)]=\\\"model.addressLine2\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Postal Code\\\"\\n            name=\\\"postalCode\\\"\\n            [(ngModel)]=\\\"model.postalCode\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Country\\\"\\n            name=\\\"country\\\"\\n            [(ngModel)]=\\\"model.country\\\"\\n          />\\n        </mat-form-field> -->\\n    \\n        <!-- <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"City\\\"\\n            name=\\\"city\\\"\\n            [(ngModel)]=\\\"model.city\\\"\\n          />\\n        </mat-form-field>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"State\\\"\\n            name=\\\"state\\\"\\n            [(ngModel)]=\\\"model.state\\\"\\n          />\\n        </mat-form-field>\\n    \\n        <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Fax Number\\\"\\n            name=\\\"faxNumber\\\"\\n            [(ngModel)]=\\\"model.faxNumber\\\"\\n          />\\n        </mat-form-field> -->\\n    \\n        <!-- <mat-form-field class=\\\"fullWidth\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Phone Number\\\"\\n            name=\\\"phoneNumber\\\"\\n            [(ngModel)]=\\\"model.phoneNumber\\\"        \\n          />\\n        </mat-form-field>\\n        <button\\n          mat-raised-button\\n          style=\\\"margin-left: 5px;\\\"\\n          type=\\\"button\\\"\\n          routerLink=\\\"/users\\\"\\n        >\\n          Back\\n        </button>\\n        \\n        <button\\n        mat-raised-button\\n        style=\\\"margin-left: 5px;\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"!editForm.dirty\\\"\\n        form=\\\"editForm\\\"\\n      >\\n        Save\\n      </button>\\n      </form>\\n    </mat-card>\\n     -->\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/_service/user.service';\nimport { AlertifyService } from 'src/app/_service/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { IdentityUser } from 'src/app/_models/identityUser';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  model: any = {};\n  hide = true;\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private route: ActivatedRoute,\n    @Inject(MAT_DIALOG_DATA) public passedData: any) { }\n\n    confirmPassword;\n    password;\n\n    userOutsideId = this.passedData.user;\n\n    user = {\n      userOutsideId: '',\n      password: ''\n    };\n    // user: IdentityUser = {\n    //   // id: '',\n    //   userOutsideId: '',\n    //   // userName: '',\n    //   email: '',\n    //   // emailConfirmed: '',\n    //   // firstName: '',\n    //   // lastName: '',\n    //   // passwordHash: '',\n    //   // normalizedUserName: '',\n    //   // securityStamp: '',\n    //   // concurrencyStamp: '',\n    //   // phoneNumber: null,\n    //   // phoneNumberConfirmed: null,\n    //   // twoFactorEnabled: null,\n    //   // lockoutEnd: null,\n    //   // lockoutEnabled: null,\n    //   // accessFailedCount: null\n    // };\n\n    sdsUser = {\n      emailAddress: '',\n        firstName: '',\n        lastName: '',\n        addressLine1: '',\n        addressLine2: '',\n        country: '',\n        city: '',\n        province: '',\n        faxNumber: '',\n        phoneNumber: '',\n        postalCode: '',\n        userOutsideId: ''\n    };\n    \n\n  ngOnInit() {\n   // this.loadIdentityUser();\n    this.loadSDSUser();\n  //   this.route.data.subscribe(data => {\n  //    this.user.firstName = 'test';\n  //    // console.log(this.route.snapshot.params['id']);\n  //    let userOutsideId = this.route.snapshot.params['id'] ;\n  //  });\n  }\n\n  // loadIdentityUser() {\n  //   this.userService.getIdentityUser(this.userOutsideId).subscribe((user: IdentityUser) => {\n  //     this.user = user;\n  //   },\n  //   error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n\n  loadSDSUser() {\n    this.userService.getUser(this.userOutsideId).subscribe((user: User) => {\n      this.sdsUser = user;\n    },\n    error => {\n      this.alertify.error(error);\n    });\n  }\n\n  UpdatePassword() {\n      if (this.password === this.confirmPassword) {\n        this.user.userOutsideId = this.userOutsideId;\n        this.user.password = this.password;\n\n        return this.userService.updateIdentityPassword(this.user).subscribe(next => {\n\n          this.alertify.success('Your password has been changed');\n          // this.router.navigate(['/app-product']);\n          // this.editForm.reset(this.user);\n        }, error => {\n          this.alertify.error(error);\n        });\n      } else {\n        this.alertify.error('Passwords do not match');\n      }\n  }\n\n  updateSDSUser() {\n    // console.log(this.editForm);\n    this.userService.updateUserInfo(this.userOutsideId, this.sdsUser).subscribe(next => {\n      this.alertify.success('User profile updated successfully');\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n\n  }\n\n}\n","module.exports = \"/* Structure */\\n/* table {\\n    width: 100%;\\n  }\\n  \\n  .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n  }\\n\\n  .section {\\n    \\n  \\n  } */\\n/* \\n  table[_ngcontent-c10] {\\n    width: 80% !important;\\n    float: right !important;\\n  } */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWM7QUFDZDs7Ozs7Ozs7Ozs7O0tBWUs7QUFFTDs7OztLQUlLIiwiZmlsZSI6ImFwcC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU3RydWN0dXJlICovXG4vKiB0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLnNlY3Rpb24ge1xuICAgIFxuICBcbiAgfSAqL1xuXG4vKiBcbiAgdGFibGVbX25nY29udGVudC1jMTBdIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gICAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG4gIH0gKi8iXX0= */\"","module.exports = \"<!-- <section gdAreas=\\\"invite search search | left-content right-content right-content\\\" gdGap=\\\"5px\\\" gdRows=\\\"auto auto auto\\\">\\n  <div gdArea=\\\"invite\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height:40px; margin-top:40px;\\\">\\n    \\n  </div> -->\\n \\n  <section gdAreas=\\\"invite search search | left-content right-content right-content\\\" gdGap=\\\"5px\\\" gdRows=\\\"auto auto auto\\\">\\n\\n<br/> <br/>\\n  <div gdArea=\\\"search\\\" fxLayoutAlign=\\\"center center\\\">\\n    <!-- just to hold space -->\\n  </div>\\n  \\n  <div gdArea=\\\"left-content\\\">\\n      <div fxLayout fxLayoutAlign=\\\"center center\\\" style=\\\"height: 50px; margin: 35px;\\\">\\n          <!-- this is a spacer, not being used -->\\n      </div>\\n\\n      <mat-card style=\\\"width:90%; margin: 5px auto; box-shadow: -4px 4px #C6C6C6;\\\">\\n      <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n          <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n            <button mat-icon-button disabled></button>\\n            <!-- <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon> -->\\n            <!-- <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                          [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                          (change)=\\\"todoLeafItemSelectionToggle(node)\\\"  style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox> -->\\n                          <mat-checkbox class=\\\"checklist-leaf-node\\\"\\n                          [checked]=\\\"checklistSelection.isSelected(node)\\\"\\n                           style=\\\"font-size: 90% !important; font: bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n                          <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\n                          <!-- <button mat-icon-button (click)=\\\"updateNode(node)\\\"><mat-icon>edit</mat-icon></button> -->\\n          </mat-tree-node>\\n        \\n          <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n            <button mat-icon-button disabled></button>\\n            <mat-form-field>\\n              <input matInput #itemValue placeholder=\\\"New item...\\\">\\n            </mat-form-field>\\n            <!-- <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button> -->\\n          </mat-tree-node>\\n        \\n          <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding style=\\\"padding-left: 10px !important\\\">\\n            <button mat-icon-button matTreeNodeToggle\\n                    [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n              <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n              </mat-icon>\\n            </button>\\n            <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\n                          \\n                          (change)=\\\"todoItemSelectionToggle(node)\\\" style=\\\"font-size: 90% !important; font:bold !important; padding-left: 10px !important\\\">{{node.item}}</mat-checkbox>\\n            <!-- <button mat-icon-button *ngIf=\\\"node.hasChild\\\" (click)=\\\"removeNode(node)\\\"><mat-icon>clear</mat-icon></button> -->\\n          </mat-tree-node>\\n        </mat-tree>\\n        <button mat-raised-button style=\\\"margin-left: 20px\\\" (click)=\\\"assignLocation()\\\">Assign</button>\\n    </mat-card>\\n            </div>\\n            <div gdArea=\\\"right-content\\\" gdColumn=\\\"2 / span 2\\\" >\\n\\n<span class=\\\"mat-elevation-z8\\\" >\\n    <div fxLayout fxLayoutAlign=\\\"center center\\\">\\n    <mat-form-field fxFlex=\\\"40%\\\">\\n      <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" />\\n    </mat-form-field>\\n  </div>\\n  <button mat-raised-button style=\\\"margin-right: 5px;\\\" *appHasRole=\\\"['Super Admin']\\\" (click)=\\\"openCreateInternalUser()\\\">Create Internal User</button>\\n  <button mat-raised-button (click)=\\\"openInvitationModalWindow()\\\">Invite User</button>\\n  <br/> <br/>\\n\\n<table mat-table [dataSource]=\\\"MyDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                      [aria-label]=\\\"checkboxLabel()\\\">\\n        </mat-checkbox>\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                      (change)=\\\"$event ? selection.toggle(row) : null; isAllSelected()\\\"\\n                      [checked]=\\\"selection.isSelected(row)\\\"\\n                      [aria-label]=\\\"checkboxLabel(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user?.firstName}} {{user?.lastName}}  </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"permissions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Permissions </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> \\n        <span *ngIf=\\\"user.permissions === null\\\">N/A</span>\\n        <span *ngIf=\\\"user.permissions\\\">{{user?.permissions}}\\n          <mat-icon *ngIf=\\\"user.permissions !== 'InActive'\\\" style=\\\"cursor: pointer\\\" (click)=\\\"openUserPermissionModalWindow(user)\\\">edit</mat-icon>\\n        </span> \\n      </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"resent/invite\\\">\\n      <th mat-header-cell *matHeaderCellDef> Edit/Resent Invite </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\">\\n        <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"openResendEmailConfirmation(user)\\\" *ngIf=\\\"!user.isActive\\\" >mail_outline</mat-icon>\\n        <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"openUserEditModalWindow(user)\\\" *ngIf=\\\"user.isActive\\\" >edit</mat-icon>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"locations\\\">\\n      <th mat-header-cell *matHeaderCellDef> User Location </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> \\n          <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"openUserLocationModalWindow(user.userOutsideId)\\\">add_location</mat-icon>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\">\\n        <span *ngIf=\\\"user.permissions === 'Regular' || user.permissions === 'InActive' || user.permissions === 'N/A' || user.permissions === null || user.permissions === ''\\\">\\n            <mat-icon style=\\\"cursor: pointer\\\" (click)=\\\"removeSelectedUser(user.userOutsideId)\\\">delete</mat-icon>\\n        </span>\\n        <span *ngIf=\\\"user.permissions === 'Super Admin' || user.permissions === 'Site Admin'\\\">\\n        <mat-icon>block</mat-icon>\\n        </span>\\n      </td>\\n    </ng-container>\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr matTooltip=\\\"{{row.userLocation}}\\\" mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n        (click)=\\\"selection.toggle(row)\\\">\\n    </tr>\\n    \\n  </table>\\n  <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n    </mat-paginator>\\n  </span>\\n  </div>\\n</section>\"","import { Component, OnInit, Input, ViewChild, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  MatTableDataSource,\n  MatPaginator,\n  MatSort,\n  MatDialog,\n  MatTreeFlattener,\n  MatTreeFlatDataSource,\n  MatTable\n} from '@angular/material';\nimport { UserService } from '../_service/user.service';\nimport { AlertifyService } from '../_service/alertify.service';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { SelectionModel, DataSource } from '@angular/cdk/collections';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { ResendEmailComponent } from '../resendEmail/resendEmail.component';\nimport { InviteComponent } from '../invite/invite.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { AuthorityTreeComponent } from '../AuthorityTree/AuthorityTree.component';\nimport { BehaviorSubject, Subscription, Subject } from 'rxjs';\nimport { LocationService } from '../_service/location.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { ShowUserLocationComponent } from './user-location/showUserLocation/showUserLocation.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { UserPermissionComponent } from './user-permission/user-permission.component';\n\nexport class TodoItemNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  name: string;\n  children?: TodoItemNode[];\n  hasChild: boolean;\n  exists: boolean;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  authorityUnitId: number;\n  parentAuthorityUnitId: number;\n  rootAuthorityUnitId: number;\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n@Component({\n  selector: \"users\",\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private locationService: LocationService,\n    private ref: ChangeDetectorRef\n  ) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren\n    );\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(\n      this.getLevel,\n      this.isExpandable\n    );\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n\n    this.getTopLocations();\n    this.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  private tableDataUpdated = new EventEmitter<any>();\n\n  locationsFromResponse: any = [];\n  location: TodoItemNode[] = [];\n\n\n  // model: any = {};\n\n  MyDataSource: any = [];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  displayedColumns: string[] = [\n    'select',\n    'name',\n    'permissions',\n    'resent/invite',\n    'locations',\n    'delete'\n  ];\n  selection = new SelectionModel<UserModel>(true, []);\n\n  applyFilter(filterValue: string) {\n    this.MyDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit() {\n    this.getAllUsers();\n    // this.getAllUserLocationNames();\n    // this.ref.detectChanges()\n    this.refreshTable();\n  }\n  unsubscribe = new Subject<void>();\n\n\n  userInformation: any = [];\n  getAllUsers() {\n    this.userService.getAllUsersByAuthority().pipe(takeUntil(this.unsubscribe)).subscribe(\n      res => {\n\n        this.userInformation = res;\n        this.MyDataSource = new MatTableDataSource(this.userInformation);\n        this.MyDataSource.data = res;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log('There was an error: ' + error);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  removedUser: any[] = [];\n  removeSelectedUser(id) {\n    var prompt = confirm('Are you sure you want to delete this user?');\n    if (prompt) {\n      this.userService.removeUser(id).subscribe(\n        res => {\n          this.alertify.success('Successfully deleted this user');\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again!');\n        }\n      );\n    }\n  }\n\n  openUserEditModalWindow(user) {\n    const dialogRef = this.dialog.open(UpdateUserComponent, {\n      width: '700px',\n      data: {\n        user: user\n      }\n    });\n  }\n\n  \n  openUserPermissionModalWindow(user) {\n    const dialogRef = this.dialog.open(UserPermissionComponent, {\n      width: '700px',\n      data: {\n        user: user\n      }\n    });\n  }\n\n  openResendEmailConfirmation(user) {\n    const dialogRef = this.dialog.open(ResendEmailComponent, {\n      width: '700px',\n      data: {\n        user: user\n      }\n    });\n  }\n\n  openInvitationModalWindow() {\n    const dialogRef = this.dialog.open(InviteComponent, {\n      width: '700px'\n    });\n  }\n\n  openCreateInternalUser() {\n    const dialogRef = this.dialog.open(CreateUserComponent, {\n      width: '700px'\n    });\n  }\n\n  openUserLocationModalWindow(user) {\n    const dialogRef = this.dialog.open(ShowUserLocationComponent, {\n      width: '700px',\n      data: {\n        user: user\n      }\n    });\n  }\n\n  locations: any;\n  childLocations: any = {};\n  parentLocations: any = {};\n  userIdArray: any = [];\n\n  assignLocation() {\n    let params = new URLSearchParams();\n\n    for (const selectedUser of this.selection.selected) {\n      params.append('userOutSideId', selectedUser.userOutsideId);\n    }\n\n    params.append('authorityUnitIds', this.parentLocations);\n\n    for (const childLocation of this.childLocations) {\n      params.append('authorityUnitIds', childLocation.authorityUnitId);\n    }\n    if(this.selection.selected.length === 0 || this.parentLocations.length === 0 || this.childLocations.length === 0) {\n      this.alertify.warning('Please select a user and a location');\n      return null;\n    } else {\n      return this.userService.assignUserLocation(params).pipe(takeUntil(this.unsubscribe)).subscribe(\n        res => {\n          this.locations = res;\n  \n          this.alertify.success(`User assigned a location`);\n        },\n        error => {\n          this.alertify.error('Something went wrong, please try again!');\n        }\n      );\n    }\n  }\n\n  public doFilter = (value: string) => {\n    this.MyDataSource.filter = value.trim().toLocaleLowerCase();\n  };\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    if (numSelected === 0) {\n      return null;\n    }\n    const numRows = this.MyDataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.MyDataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserModel): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    // for(const test of this.selection.selected) {\n    //   console.log('This is it: ' + test[0].firstName);\n    // }\n    return `${\n      this.selection.isSelected(row) ? 'deselect' : 'select'\n    } row ${row.position + 1}`;\n  }\n\n  // ==============================Location Tree===================================== //\n\n  getTopLocations() {\n    return this.locationService.locationHiararchy().pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.locationsFromResponse = res;\n      this.location = this.locationsFromResponse;\n\n      this.dataSource.data = this.location;\n      // this.dataChange.next(data);\n      // const data = this.buildFileTree(this.location, 0);\n      this.dataChange.value.push(this.locationsFromResponse);\n\n      this.dataChange.next(this.location);\n      // this.dataChange.next(data);\n      // this.dataChange.next(this.data);\n    });\n  }\n\n  get data(): TodoItemNode[] {\n    return this.dataChange.value;\n  }\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  // tslint:disable-next-line: member-ordering\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  // tslint:disable-next-line: member-ordering\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  // tslint:disable-next-line: member-ordering\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  // tslint:disable-next-line: member-ordering\n  newItemName = '';\n\n  // tslint:disable-next-line: member-ordering\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  // tslint:disable-next-line: member-ordering\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true);\n\n  model = {\n    name: '',\n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null\n  };\n\n  updateModel = {\n    name: '',\n    authorityUnitId: null,\n    rootAuthorityUnitId: null,\n    parentAuthorityUnitId: null\n  };\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  levelsExist = (node: TodoItemNode) => node.exists;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) =>\n    _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode =\n      existingNode && existingNode.item === node.name\n        ? existingNode\n        : new TodoItemFlatNode();\n    flatNode.item = node.name;\n    flatNode.level = level;\n    flatNode.authorityUnitId = node.authorityUnitId;\n    flatNode.parentAuthorityUnitId = node.parentAuthorityUnitId;\n    flatNode.rootAuthorityUnitId = node.rootAuthorityUnitId;\n    if (node.hasChild) {\n      flatNode.expandable = true;\n    } else {\n      flatNode.expandable = false;\n    }\n\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  };\n\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n  itemSelected: boolean;\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    // console.log(descendants);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n      // console.log(descAllSelected);\n      // console.log(descendants);\n    // console.log(descendants);\n    // console.log(descAllSelected);\n    // console.log('This: => ' + descAllSelected);\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    // console.log(result);\n\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    // console.log(this.checklistSelection.toggle(node));\n    const descendants = this.treeControl.getDescendants(node);\n    // console.log(this.treeControl.getDescendants(node));\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n    this.checkAllParentsSelection(node);\n    // console.log(this.checkAllParentsSelection(node));\n    // Force update for the parent\n    descendants.every(child => this.checklistSelection.isSelected(child));\n    // console.log(descendants.every(child => this.checklistSelection.isSelected(child)));\n    this.checkAllParentsSelection(node);\n\n    // ==> node will give me the parent which has the expandable //\n    // console.log(node);\n    // console.log(node.authorityUnitId);\n\n    // console.log(this.checkRootNodeSelection);\n    // decendants will give me the children of the parent... //\n    // console.log(descendants);\n\n    // this.model.rootAuthorityUnitId = descendants;\n    this.parentLocations = node.authorityUnitId;\n    this.childLocations = descendants;\n  }\n\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n    // console.log(this.checkAllParentsSelection(node));\n    // console.log(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n    // console.log(parent);\n    // console.log(node);\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n    // console.log('node: ' + node);\n    // console.log('nodeSelected: ' + nodeSelected);\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n    const currentLevel = this.getLevel(node);\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n}\n\nexport interface UserModel {\n  firstName: string;\n  lastName: string;\n  isActive: boolean;\n  position: number;\n  permission: number;\n  userOutsideId: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl: 'https://localhost:44309/api/v1/',\n  apiUrl: 'https://ohssdsdev.azurewebsites.net/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}